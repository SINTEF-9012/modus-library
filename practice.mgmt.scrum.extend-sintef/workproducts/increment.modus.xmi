<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ArtifactDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmi:id="-IHJvnzb658vzP3RXFovlcw" name="new_artifact,_RxLxcIcLEeKDAPAbcNl48A" guid="-IHJvnzb658vzP3RXFovlcw">
  <mainDescription>&lt;p>&#xD;
    Scrum requires that each sprint deliver a potentially shippable product increment. The increment must consist of&#xD;
    thoroughly tested code that has been built into an executable, and the user operation of the functionality is&#xD;
    documeneted either in Help files or user documentation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    There is much debate about the difference between &quot;potentially shippable (done)&quot; and &quot;shippable&quot;.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Mike Cohn states:&#xD;
&lt;/p>&#xD;
&lt;blockquote style=&quot;MARGIN-RIGHT: 0px&quot; dir=&quot;ltr&quot;>&#xD;
    &lt;p>&#xD;
        .. &quot;potentially shippable&quot; and &quot;shippable&quot; are not the same thing. Some large or complex projects will require the&#xD;
        use of &quot;release sprint&quot; or &quot;hardening sprint&quot; at the end of a release cycle (say 6 two-week sprints then a 2-week&#xD;
        release sprint). The release sprint is not a dumping ground for sloppy work; rather it is a place where some&#xD;
        hardening of the system can occur.&#xD;
    &lt;/p>&#xD;
&lt;/blockquote>&#xD;
&lt;p>&#xD;
    One thing is clear Scrum teams need to agree on their definition of &quot;potentially shippable&quot; and &quot;shippable&quot; and to come&#xD;
    to a shared understanding with the Product Owner.&lt;br />&#xD;
&lt;/p></mainDescription>
</org.eclipse.epf.uma:ArtifactDescription>
