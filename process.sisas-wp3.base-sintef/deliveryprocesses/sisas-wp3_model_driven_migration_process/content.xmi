<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1">
  <org.eclipse.epf.uma:DeliveryProcessDescription xmi:id="-0IvEuDqfgR5_1LKq3SIyHA" name="envirofi_delivery_process,_y3mEsZNqEeCaBao730vMtw" guid="-0IvEuDqfgR5_1LKq3SIyHA"/>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-BoMPK3dYpWuB8G4IjvYftw" name="Specify_interfaces_and_messages,_Tac4WVxeEd-t89y4caceLw" guid="-BoMPK3dYpWuB8G4IjvYftw">
    <refinedDescription>&lt;p>&#xD;
    This task defines the guided procedure for specifying the interfaces and messages of a service interface.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-QygwwWUBq_Rw7fuGpQuagA" name="Specify_interface_events,_Tac4U1xeEd-t89y4caceLw" guid="-QygwwWUBq_Rw7fuGpQuagA">
    <refinedDescription>This task defines the guided procedure for modelling events on the interfaces.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-8jM3K9Zhg_Ga7AXCzMxIkw" name="Specify_interface_constraints,_Tac4V1xeEd-t89y4caceLw" guid="-8jM3K9Zhg_Ga7AXCzMxIkw">
    <refinedDescription>This task defines the guided procedure for modelling rules and constraints on the&amp;nbsp;interfaces.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-kDdc6ylGwqGmsutc9v0L4w" name="system_architect,_Tac4VlxeEd-t89y4caceLw" guid="-kDdc6ylGwqGmsutc9v0L4w">
    <refinedDescription>This worker is involved in the design of the components which compose the software system. This worker is involved in the&#xD;
design of the architecture of the system, with its components and their interfaces.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-plFSvI85U_PAqCDjNI6flQ" name="service_interface_and_component_model,_b_w40eb5Ed-nztBGQnvNAA" guid="-plFSvI85U_PAqCDjNI6flQ">
    <refinedDescription>&lt;p>&#xD;
    A SoaML model aims to define the following:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Identifying services, the requirements they are intended to fulfill, and the anticipated dependencies between them.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Specifying services including the functional capabilities they provide, what capabilities consumers are expected to&#xD;
        provide, the protocols or rules for using them, and the service information exchanged between consumers and&#xD;
        providers.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defining service consumers and providers, what requisition and services they consume and provide, how they are&#xD;
        connected and how the service functional capabilities are used by consumers and implemented by providers in a&#xD;
        manner consistent with both the service specification protocols and fulfilled requirements.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The policies for using and providing services.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The ability to define classification schemes having aspects to support a broad range of architectural,&#xD;
        organizational and physical partitioning schemes and constraints.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defining service and service usage requirements and linking them to related OMG metamodels, such as the BMM&#xD;
        course_of_action, BPDM Process, UPDM OperationalCapability and/or UML UseCase model elements they realize, support&#xD;
        or fulfill.&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-glCe0VtlV9hJOtdTdfWHIw" name="services_architecture_and_contract_model,_b_w41Ob5Ed-nztBGQnvNAA" guid="-glCe0VtlV9hJOtdTdfWHIw">
    <refinedDescription>&lt;p>&#xD;
    A SoaML model aims to define the following:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Identifying services, the requirements they are intended to fulfill, and the anticipated dependencies between them.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Specifying services including the functional capabilities they provide, what capabilities consumers are expected to&#xD;
        provide, the protocols or rules for using them, and the service information exchanged between consumers and&#xD;
        providers.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defining service consumers and providers, what requisition and services they consume and provide, how they are&#xD;
        connected and how the service functional capabilities are used by consumers and implemented by providers in a&#xD;
        manner consistent with both the service specification protocols and fulfilled requirements.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The policies for using and providing services.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The ability to define classification schemes having aspects to support a broad range of architectural,&#xD;
        organizational and physical partitioning schemes and constraints.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defining service and service usage requirements and linking them to related OMG metamodels, such as the BMM&#xD;
        course_of_action, BPDM Process, UPDM OperationalCapability and/or UML UseCase model elements they realize, support&#xD;
        or fulfill.&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-KjW5STXXYNE44YlzXlYMdg" name="Specify_service_interface_behaviour,_yMoj8VzeEd-W9-TCScsYqg" guid="-KjW5STXXYNE44YlzXlYMdg">
    <refinedDescription>&lt;p align=&quot;left&quot;>&#xD;
    The behaviour of a service interface expresses the expected interaction between the consumers and providers of&#xD;
    services. It can be specified as any UML behavior, the most common ones being activity, interaction or state machine.&#xD;
    In the modelling steps below we outline the use of interactions in the form of sequence diagrams.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-BJepU0B9VXlwScqJMA_F_Q" name="system_architect,_yMfaAlzeEd-W9-TCScsYqg" guid="-BJepU0B9VXlwScqJMA_F_Q">
    <refinedDescription>This worker is involved in the design of the components which compose the software system. This worker is involved in the&#xD;
design of the architecture of the system, with its components and their interfaces.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Qb-Y65-Yl6bzKS7ab_YbTQ" name="service_interface_and_component_model,_cAqQseb5Ed-nztBGQnvNAA" guid="-Qb-Y65-Yl6bzKS7ab_YbTQ">
    <refinedDescription>&lt;p>&#xD;
    A SoaML model aims to define the following:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Identifying services, the requirements they are intended to fulfill, and the anticipated dependencies between them.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Specifying services including the functional capabilities they provide, what capabilities consumers are expected to&#xD;
        provide, the protocols or rules for using them, and the service information exchanged between consumers and&#xD;
        providers.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defining service consumers and providers, what requisition and services they consume and provide, how they are&#xD;
        connected and how the service functional capabilities are used by consumers and implemented by providers in a&#xD;
        manner consistent with both the service specification protocols and fulfilled requirements.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The policies for using and providing services.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The ability to define classification schemes having aspects to support a broad range of architectural,&#xD;
        organizational and physical partitioning schemes and constraints.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defining service and service usage requirements and linking them to related OMG metamodels, such as the BMM&#xD;
        course_of_action, BPDM Process, UPDM OperationalCapability and/or UML UseCase model elements they realize, support&#xD;
        or fulfill.&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-2-3cqZGzparsSwhc1AXt2w" name="Service_composition_behaviour_modelling,_wrPeKVzoEd-W9-TCScsYqg" guid="-2-3cqZGzparsSwhc1AXt2w">
    <refinedDescription>This task defines the guided procedure for modelling a service composition.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-V89SOiotjD8QU6zk-wVbCQ" name="SoaML2XSD,_wrPeNlzoEd-W9-TCScsYqg" guid="-V89SOiotjD8QU6zk-wVbCQ">
    <refinedDescription>This method defines the guided procedure for transforming SoaML models to&amp;nbsp;XSD files.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-M8Y2pjyxMTEhfOpr6D5P2A" name="system_developer.rename,_wrPeMlzoEd-W9-TCScsYqg" guid="-M8Y2pjyxMTEhfOpr6D5P2A">
    <refinedDescription>This worker is involved in the implementation of the business process, obtaining services needed to be part of the&#xD;
composition and developing the final script which can be executed by a specialized engine.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-g6nFPQBUra4JQ7MDvtd-pg" name="SoaML_Model,_wrPeL1zoEd-W9-TCScsYqg" guid="-g6nFPQBUra4JQ7MDvtd-pg">
    <refinedDescription>&lt;p>&#xD;
    A SoaML model aims to define the following:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Identifying services, the requirements they are intended to fulfill, and the anticipated dependencies between them.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Specifying services including the functional capabilities they provide, what capabilities consumers are expected to&#xD;
        provide, the protocols or rules for using them, and the service information exchanged between consumers and&#xD;
        providers.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defining service consumers and providers, what requisition and services they consume and provide, how they are&#xD;
        connected and how the service functional capabilities are used by consumers and implemented by providers in a&#xD;
        manner consistent with both the service specification protocols and fulfilled requirements.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The policies for using and providing services.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The ability to define classification schemes having aspects to support a broad range of architectural,&#xD;
        organizational and physical partitioning schemes and constraints.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defining service and service usage requirements and linking them to related OMG metamodels, such as the BMM&#xD;
        course_of_action, BPDM Process, UPDM OperationalCapability and/or UML UseCase model elements they realize, support&#xD;
        or fulfill.&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-YStxDewSs24KIyp5js6D5g" name="WS_WSDL_Document,_wrPeN1zoEd-W9-TCScsYqg" guid="-YStxDewSs24KIyp5js6D5g">
    <refinedDescription>To define a WSDL document for describing the capabilities of a Web service.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-dp5dQTfx02XUUbyNFxYQgA" name="SoaML2BPEL,_wrPeNVzoEd-W9-TCScsYqg" guid="-dp5dQTfx02XUUbyNFxYQgA">
    <refinedDescription>This method defines the guided procedure for transforming SoaML models to&amp;nbsp;BPEL files.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-53zS7ao1B7Fi6oTC7Qt4ig" name="WS_BPEL_Document,_wrPeOFzoEd-W9-TCScsYqg" guid="-53zS7ao1B7Fi6oTC7Qt4ig">
    <refinedDescription>To define a BPEL document for&amp;nbsp;process execution.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-zhOZ5uIHBgXudM-g-3Ku1w" name="SoaML2WSDL,_wrPeNFzoEd-W9-TCScsYqg" guid="-zhOZ5uIHBgXudM-g-3Ku1w">
    <refinedDescription>This method defines the guided procedure for transforming SoaML models to WSDL files.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-kv8KAq15-vqEjDvMF_1JQA" name="WS_XSD_Document,_wrPeMVzoEd-W9-TCScsYqg" guid="-kv8KAq15-vqEjDvMF_1JQA">
    <refinedDescription>&lt;p>&#xD;
    To define an XSD document for information processing and passing.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-kkMXzkF5r_tPfs0G3mFQ1w" name="Specify_software_components,_wrPeK1zoEd-W9-TCScsYqg" guid="-kkMXzkF5r_tPfs0G3mFQ1w">
    <refinedDescription>&lt;p align=&quot;left&quot;>&#xD;
    Software components are modelled as components with composite structures using class diagrams in UML.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-9Rk962_lmE5Pdy-h4qTUkg" name="system_architect,_wrPeOVzoEd-W9-TCScsYqg" guid="-9Rk962_lmE5Pdy-h4qTUkg">
    <refinedDescription>This worker is involved in the design of the components which compose the software system. This worker is involved in the&#xD;
design of the architecture of the system, with its components and their interfaces.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-zO5CGLioWAwDR3LztfZ0_w" name="services_architecture_and_contract_model,_cBQGkeb5Ed-nztBGQnvNAA" guid="-zO5CGLioWAwDR3LztfZ0_w">
    <refinedDescription>&lt;p>&#xD;
    A SoaML model aims to define the following:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Identifying services, the requirements they are intended to fulfill, and the anticipated dependencies between them.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Specifying services including the functional capabilities they provide, what capabilities consumers are expected to&#xD;
        provide, the protocols or rules for using them, and the service information exchanged between consumers and&#xD;
        providers.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defining service consumers and providers, what requisition and services they consume and provide, how they are&#xD;
        connected and how the service functional capabilities are used by consumers and implemented by providers in a&#xD;
        manner consistent with both the service specification protocols and fulfilled requirements.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The policies for using and providing services.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The ability to define classification schemes having aspects to support a broad range of architectural,&#xD;
        organizational and physical partitioning schemes and constraints.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defining service and service usage requirements and linking them to related OMG metamodels, such as the BMM&#xD;
        course_of_action, BPDM Process, UPDM OperationalCapability and/or UML UseCase model elements they realize, support&#xD;
        or fulfill.&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-oBwzKeSOmEy2Z6evLZ23Xg" name="service_interface_and_component_model,_cBQGlOb5Ed-nztBGQnvNAA" guid="-oBwzKeSOmEy2Z6evLZ23Xg">
    <refinedDescription>&lt;p>&#xD;
    A SoaML model aims to define the following:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Identifying services, the requirements they are intended to fulfill, and the anticipated dependencies between them.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Specifying services including the functional capabilities they provide, what capabilities consumers are expected to&#xD;
        provide, the protocols or rules for using them, and the service information exchanged between consumers and&#xD;
        providers.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defining service consumers and providers, what requisition and services they consume and provide, how they are&#xD;
        connected and how the service functional capabilities are used by consumers and implemented by providers in a&#xD;
        manner consistent with both the service specification protocols and fulfilled requirements.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The policies for using and providing services.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The ability to define classification schemes having aspects to support a broad range of architectural,&#xD;
        organizational and physical partitioning schemes and constraints.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defining service and service usage requirements and linking them to related OMG metamodels, such as the BMM&#xD;
        course_of_action, BPDM Process, UPDM OperationalCapability and/or UML UseCase model elements they realize, support&#xD;
        or fulfill.&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-5RL6UVLqaKlgYEJEaEEtLw" name="Specify_services_architecture_community_behaviour,_sv1GlVzqEd-W9-TCScsYqg" guid="-5RL6UVLqaKlgYEJEaEEtLw">
    <refinedDescription>This task defines the guided procedure for specifying the service orchestration for a community-level services&#xD;
architecture.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-A4rBDoFNmySZS-e5S9h0GQ" name="Specify_services_architecture_participant_behaviour,_sv1GlFzqEd-W9-TCScsYqg" guid="-A4rBDoFNmySZS-e5S9h0GQ">
    <refinedDescription>This task defines the guided procedure for specifying the service orchestration for a participant-level services&#xD;
architecture.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-D8zurVGTg_d5Rbu-fE8mIg" name="services_architecture_and_contract_model,_cC5FUeb5Ed-nztBGQnvNAA" guid="-D8zurVGTg_d5Rbu-fE8mIg">
    <refinedDescription>&lt;p>&#xD;
    A SoaML model aims to define the following:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Identifying services, the requirements they are intended to fulfill, and the anticipated dependencies between them.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Specifying services including the functional capabilities they provide, what capabilities consumers are expected to&#xD;
        provide, the protocols or rules for using them, and the service information exchanged between consumers and&#xD;
        providers.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defining service consumers and providers, what requisition and services they consume and provide, how they are&#xD;
        connected and how the service functional capabilities are used by consumers and implemented by providers in a&#xD;
        manner consistent with both the service specification protocols and fulfilled requirements.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The policies for using and providing services.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The ability to define classification schemes having aspects to support a broad range of architectural,&#xD;
        organizational and physical partitioning schemes and constraints.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defining service and service usage requirements and linking them to related OMG metamodels, such as the BMM&#xD;
        course_of_action, BPDM Process, UPDM OperationalCapability and/or UML UseCase model elements they realize, support&#xD;
        or fulfill.&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-8aeh73kXMNL9C_sebTRgUA" name="Specify interfaces,_RNZpkVKoEd-lbezHCF1KLw" guid="-8aeh73kXMNL9C_sebTRgUA">
    <refinedDescription>&lt;p>&#xD;
    This task defines the guided procedure for specifying the interfaces and messages of a service interface.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-FPOlNycKqfWK5fIwj6MNhA" name="service_interface_and_component_model,_b_nu4eb5Ed-nztBGQnvNAA" guid="-FPOlNycKqfWK5fIwj6MNhA">
    <refinedDescription>&lt;p>&#xD;
    A SoaML model aims to define the following:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Identifying services, the requirements they are intended to fulfill, and the anticipated dependencies between them.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Specifying services including the functional capabilities they provide, what capabilities consumers are expected to&#xD;
        provide, the protocols or rules for using them, and the service information exchanged between consumers and&#xD;
        providers.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defining service consumers and providers, what requisition and services they consume and provide, how they are&#xD;
        connected and how the service functional capabilities are used by consumers and implemented by providers in a&#xD;
        manner consistent with both the service specification protocols and fulfilled requirements.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The policies for using and providing services.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The ability to define classification schemes having aspects to support a broad range of architectural,&#xD;
        organizational and physical partitioning schemes and constraints.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defining service and service usage requirements and linking them to related OMG metamodels, such as the BMM&#xD;
        course_of_action, BPDM Process, UPDM OperationalCapability and/or UML UseCase model elements they realize, support&#xD;
        or fulfill.&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-aLL5v78M_6DQajU8WDJBiQ" name="services_architecture_and_contract_model,_b_nu5Ob5Ed-nztBGQnvNAA" guid="-aLL5v78M_6DQajU8WDJBiQ">
    <refinedDescription>&lt;p>&#xD;
    A SoaML model aims to define the following:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Identifying services, the requirements they are intended to fulfill, and the anticipated dependencies between them.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Specifying services including the functional capabilities they provide, what capabilities consumers are expected to&#xD;
        provide, the protocols or rules for using them, and the service information exchanged between consumers and&#xD;
        providers.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defining service consumers and providers, what requisition and services they consume and provide, how they are&#xD;
        connected and how the service functional capabilities are used by consumers and implemented by providers in a&#xD;
        manner consistent with both the service specification protocols and fulfilled requirements.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The policies for using and providing services.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The ability to define classification schemes having aspects to support a broad range of architectural,&#xD;
        organizational and physical partitioning schemes and constraints.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defining service and service usage requirements and linking them to related OMG metamodels, such as the BMM&#xD;
        course_of_action, BPDM Process, UPDM OperationalCapability and/or UML UseCase model elements they realize, support&#xD;
        or fulfill.&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:ProcessDescription xmi:id="-7mNCBLSjIt-6eLR2UwP8-g" name="use_case_modelling,_c5O1AeKnEd-Knc6oCYT2Zw" guid="-7mNCBLSjIt-6eLR2UwP8-g">
    <mainDescription>This capability pattern describes a baseline workflow for use case modelling.</mainDescription>
    <purpose>&lt;ul>&#xD;
    &lt;li>&#xD;
        To define your system functionality, i.e. services,&amp;nbsp;and requirements.&#xD;
    &lt;/li>&#xD;
&lt;/ul></purpose>
  </org.eclipse.epf.uma:ProcessDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-X5caXCKh4NX8HxSNjW1Mmw" name="elicit_requirements,_nmisQOKnEd-Knc6oCYT2Zw" guid="-X5caXCKh4NX8HxSNjW1Mmw">
    <refinedDescription>&lt;p>&#xD;
    Non-functional requirements are requirements that do not fit into the use case template. For instance, some&#xD;
    non-functional requirements may be general for the whole system to be developed. These are described separately instead&#xD;
    of being described with every use case. The distribution aspect of the system as well as interoperation with legacy&#xD;
    systems and different software and hardware components might also be better described separate from the use cases.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-LD72hL5mZJxfIr9Ei-jBQw" name="requirements_analyst,_nmpZ8OKnEd-Knc6oCYT2Zw" guid="-LD72hL5mZJxfIr9Ei-jBQw">
    <refinedDescription>This role&amp;nbsp;has a very important role at the beginning of the development, because it gathers and analyzes the&#xD;
requirements which the service composition has to fulfil.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-08iVgplJeb5D-P-4KB5-Cw" name="non_functional_requirements,_nmqBAuKnEd-Knc6oCYT2Zw" guid="-08iVgplJeb5D-P-4KB5-Cw"/>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-9vYUhURC4k-AoQwQVpBrWA" name="define_system_boundary_model,_0ajxUOKnEd-Knc6oCYT2Zw" guid="-9vYUhURC4k-AoQwQVpBrWA">
    <refinedDescription>&lt;p>&#xD;
    The System Boundary Model describes the system boundaries, the actors and their responsibilities, and the services&#xD;
    offered by the system. Interactions between the system and its environment are identified and might also be detailed by&#xD;
    modelling stimuli and responses using UML sequence diagrams.&#xD;
&lt;/p>&#xD;
&lt;a id=&quot;N1004D&quot; name=&quot;N1004D&quot;>&lt;/a>&lt;a id=&quot;Goals&quot; name=&quot;Goals&quot;>&lt;/a> &#xD;
&lt;h4>&#xD;
    Goals&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    The System Boundary Model should:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Identify and describe system boundaries, main services and actors.&#xD;
    &lt;/li>&#xD;
    &lt;li style=&quot;LIST-STYLE-TYPE: none&quot;>&#xD;
        &lt;ul>&#xD;
            &lt;li>&#xD;
                Who uses the system?&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Who maintains the system?&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                What other systems use this system?&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Who gets information from the system?&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Who provides information to the system?&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Does anything happen automatically at present time?&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Who starts up and shuts down the system?&#xD;
            &lt;/li>&#xD;
        &lt;/ul>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Assure a common understanding of the system and its purpose.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Identify interactions between the system and its environment.&#xD;
    &lt;/li>&#xD;
    &lt;li style=&quot;LIST-STYLE-TYPE: none&quot;>&#xD;
        &lt;ul>&#xD;
            &lt;li>&#xD;
                What services are required from the system by the actor?&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Which events are/will be initiated by the actor, and which events are the actor interested in?&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Which events occur and who is/will be notified about them?&#xD;
            &lt;/li>&#xD;
        &lt;/ul>&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-JWVh7bbiZCJPQslN0xA_Ww" name="system_boundary_model,_0akYYOKnEd-Knc6oCYT2Zw" guid="-JWVh7bbiZCJPQslN0xA_Ww">
    <refinedDescription>&lt;h3 class=&quot;underlined_5&quot;>&#xD;
    System Boundary Model&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    The &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.requirements.use_case_modelling.base-sintef/workproducts/system_boundary_model_4296FE34.html&quot;&#xD;
    guid=&quot;_NUjPIN0VEd-xB8a51ZHHaA&quot;>System boundary model&lt;/a> describes the system boundaries, the actors and their&#xD;
    responsibilities, and the services offered by the system. Interactions between the system and its environment are&#xD;
    identified and might also be detailed by modelling stimuli and responses using UML sequence diagrams.&#xD;
&lt;/p>&#xD;
&lt;a id=&quot;N1004D&quot; name=&quot;N1004D&quot;>&lt;/a>&lt;a id=&quot;Goals&quot; name=&quot;Goals&quot;>&lt;/a> &#xD;
&lt;h4>&#xD;
    Goals&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    The &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.requirements.use_case_modelling.base-sintef/workproducts/system_boundary_model_4296FE34.html&quot;&#xD;
    guid=&quot;_NUjPIN0VEd-xB8a51ZHHaA&quot;>System boundary model&lt;/a>&amp;nbsp;should:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Identify and describe system boundaries, main services and actors.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Assure a common understanding of the system and its purpose.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Identify interactions between the system and its environment.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;a id=&quot;N1005A&quot; name=&quot;N1005A&quot;>&lt;/a>&lt;a id=&quot;Methods+and+techniques&quot; name=&quot;Methods+and+techniques&quot;>&lt;/a> &#xD;
&lt;h4>&#xD;
    Methods and techniques&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    The starting point for the development of the System &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.requirements.use_case_modelling.base-sintef/workproducts/system_boundary_model_4296FE34.html&quot;&#xD;
    guid=&quot;_NUjPIN0VEd-xB8a51ZHHaA&quot;>System boundary model&lt;/a> is provided by the Business Model work products, the Context&#xD;
    Statement, Vision for Change, Business Process and Role Model and Business Resource Model. Other important sources are&#xD;
    the business stakeholders, who should be involved when determining the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.requirements.use_case_modelling.base-sintef/workproducts/system_boundary_model_4296FE34.html&quot;&#xD;
    guid=&quot;_NUjPIN0VEd-xB8a51ZHHaA&quot;>System boundary model&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Defining the boundaries of the system means finding out what is inside the system and what is outside the system (the&#xD;
    &lt;em>outside&lt;/em> is what the system interfaces with). The boundaries of the system are determined by the roles of the&#xD;
    system in the Business Model. In the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.requirements.use_case_modelling.base-sintef/workproducts/system_boundary_model_4296FE34.html&quot;&#xD;
    guid=&quot;_NUjPIN0VEd-xB8a51ZHHaA&quot;>System boundary model&lt;/a>, the boundaries of the system are defined in terms of actors&#xD;
    and use cases. The actors are outside the system and represent the roles in the Business Model that interact with the&#xD;
    system roles (roles inside the system boundary); the use cases are inside and represent the behaviour of the system&#xD;
    roles.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Thus, UML actors are used to denote anything that interfaces with the system. Some examples are people, software,&#xD;
    hardware devices, data stores or networks. In the model we let each UML actor define a particular role and thereby&#xD;
    abstract the actual person or software system currently fulfilling the role. Hence, several actors may represent one&#xD;
    physical person, because that person takes on different roles with regard to the system. On the other hand, one actor&#xD;
    might represent several physical people, because they all take on the same role with regard to the system. Each role&#xD;
    specifying interactions with the system may be represented by one or more actors (hence, roles are recursive). To help&#xD;
    in defining actors the following questions might be helpful to elaborate:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Who uses the system?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Who maintains the system?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        What other systems use this system?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Who gets information from the system?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Who provides information to the system?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Does anything happen automatically at present time?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Who starts up and shuts down the system?&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Each actor needs a descriptive name and a brief description that is one or two sentences long. This description should&#xD;
    define the role represented by the actor with regard to the system.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Identify use cases: When the main actors are identified, the next step is to go through the list of actors and identify&#xD;
    use cases for each one. Use cases describe things that the actors want the system to do. At this stage, people that&#xD;
    will play roles defined by the actors should be involved.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    To help identify use cases the following questions might be helpful to elaborate:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        What services are required from the system by the actor?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Which events are/will be initiated by the actor, and which events are the actor interested in?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Which events occur and who is/will be notified about them?&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    When dealing with existing systems, go through the list of actors and identify what services the system actually&#xD;
    provides. Important sources of information would then be the user manuals, other documentation, source code, table&#xD;
    structures and information gathered by studying system behaviour at runtime.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Relate to goals! The use cases should be related to goals, this because the purpose of the use cases should be to&#xD;
    attain goals. It is important to be able to answer why to each use case. If you can't give a good answer to the&#xD;
    &quot;why-question&quot;, then it is probably not a proper use case. The relation to the goals is implicitly the answer to the&#xD;
    why question.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Describe stimuli and responses for the use cases identified. Each actor communicates with the system through a set of&#xD;
    use cases in order to reach their goals. The stimuli/response describe the stimuli sent to the system by the actor, and&#xD;
    the responses back from the system. We can use UML sequence diagrams to model the most important stimuli/responses.&#xD;
&lt;/p>&#xD;
&lt;a id=&quot;N10089&quot; name=&quot;N10089&quot;>&lt;/a>&lt;a id=&quot;Deliverables+and+notation&quot; name=&quot;Deliverables+and+notation&quot;>&lt;/a> &#xD;
&lt;h4>&#xD;
    Deliverables and notation&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    The work product contains the following:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        UML Use Case diagram showing the system boundary, the actors and the actors responsibilities.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        UML Use Case diagram exploring the system boundary use case that identifies the needs. Each use case should be&#xD;
        numbered for later reference&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        General extra requirements that applies for the complete system are associated with the System Boundary&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;a id=&quot;N10096&quot; name=&quot;N10096&quot;>&lt;/a>&lt;a id=&quot;Example&quot; name=&quot;Example&quot;>&lt;/a> &#xD;
&lt;h4>&#xD;
    Example&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    Figure 2 shows an example of parts of a system boundary for a meeting room booking example, which is described in a UML&#xD;
    use case diagram. The actors represent initiating system actors or external systems used by the meeting reservation&#xD;
    system (e.g. the Email information system).&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;img alt=&quot;&quot; src=&quot;./../../practice.requirements.use_case_modelling.base-sintef/workproducts/./resources/system_boundary_example.png&quot; width=&quot;600&quot; height=&quot;595&quot; />&lt;br />&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-DsD2KTCaiE7rNVibwD5yaQ" name="detail_use_case_scenarios,_05XNMOKnEd-Knc6oCYT2Zw" guid="-DsD2KTCaiE7rNVibwD5yaQ">
    <refinedDescription>&lt;p>&#xD;
    The &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.requirements.use_case_modelling.base-sintef/workproducts/use_case_scenario_model_9DF725B1.html&quot;&#xD;
    guid=&quot;_SMZu4N0VEd-xB8a51ZHHaA&quot;>Use case scenario model&lt;/a> digs into the identified use cases and describes these in&#xD;
    detail. The major input to determining the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.requirements.use_case_modelling.base-sintef/workproducts/use_case_scenario_model_9DF725B1.html&quot;&#xD;
    guid=&quot;_SMZu4N0VEd-xB8a51ZHHaA&quot;>Use case scenario model&lt;/a> is the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.requirements.use_case_modelling.base-sintef/workproducts/system_boundary_model_4296FE34.html&quot;&#xD;
    guid=&quot;_NUjPIN0VEd-xB8a51ZHHaA&quot;>System boundary model&lt;/a>, but the Business Model work products and early versions of&#xD;
    the Architecture Model are also valuable input.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.requirements.use_case_modelling.base-sintef/guidances/templates/use_case_template_4C60C8BB.html&quot;&#xD;
    guid=&quot;_u2nlkH1QEeCbp4UejqxsXg&quot;>Use case template&lt;/a> is the baseline for developing the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.requirements.use_case_modelling.base-sintef/workproducts/use_case_scenario_model_9DF725B1.html&quot;&#xD;
    guid=&quot;_SMZu4N0VEd-xB8a51ZHHaA&quot;>Use case scenario model&lt;/a>. Each use case identified in the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.requirements.use_case_modelling.base-sintef/workproducts/system_boundary_model_4296FE34.html&quot;&#xD;
    guid=&quot;_NUjPIN0VEd-xB8a51ZHHaA&quot;>System boundary model&lt;/a> is detailed using the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.requirements.use_case_modelling.base-sintef/guidances/templates/use_case_template_4C60C8BB.html&quot;&#xD;
    guid=&quot;_u2nlkH1QEeCbp4UejqxsXg&quot;>Use case template&lt;/a>. The &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.requirements.use_case_modelling.base-sintef/guidances/templates/use_case_template_4C60C8BB.html&quot;&#xD;
    guid=&quot;_u2nlkH1QEeCbp4UejqxsXg&quot;>Use case template&lt;/a> consists of the following parts:&#xD;
&lt;/p>&#xD;
&lt;table style=&quot;PAGE-BREAK-BEFORE: always&quot; border=&quot;1&quot; cellspacing=&quot;0&quot; bordercolor=&quot;#00000a&quot; cellpadding=&quot;7&quot; width=&quot;638&quot;>&#xD;
    &lt;colgroup>&#xD;
        &lt;col width=&quot;189&quot; />&#xD;
        &lt;col width=&quot;419&quot; />&#xD;
    &lt;/colgroup>&#xD;
    &lt;tbody>&#xD;
        &lt;tr valign=&quot;top&quot;>&#xD;
            &lt;td bgcolor=&quot;#e5e5e5&quot; height=&quot;23&quot; width=&quot;189&quot;>&#xD;
                &lt;p align=&quot;left&quot;>&#xD;
                    &lt;b>Use case template&lt;/b>&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td bgcolor=&quot;#e5e5e5&quot; width=&quot;419&quot;>&#xD;
                &lt;p>&#xD;
                    &lt;b>Description&lt;/b>&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr valign=&quot;top&quot;>&#xD;
            &lt;td height=&quot;24&quot; width=&quot;189&quot;>&#xD;
                &lt;p align=&quot;left&quot;>&#xD;
                    Use case name&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;419&quot;>&#xD;
                &lt;p>&#xD;
                    &amp;lt; The name is the goal as a short active verb phrase. &amp;gt;&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr valign=&quot;top&quot;>&#xD;
            &lt;td height=&quot;24&quot; width=&quot;189&quot;>&#xD;
                &lt;p align=&quot;left&quot;>&#xD;
                    Use case ID&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;419&quot;>&#xD;
                &lt;p align=&quot;left&quot;>&#xD;
                    &amp;lt; A unique identification of for the use case, e.g. UC01. &amp;gt;&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr valign=&quot;top&quot;>&#xD;
            &lt;td height=&quot;24&quot; width=&quot;189&quot;>&#xD;
                &lt;p align=&quot;left&quot;>&#xD;
                    Revision&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;419&quot;>&#xD;
                &lt;p align=&quot;left&quot;>&#xD;
                    &amp;lt; Revision number for the use case. &amp;gt;&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr valign=&quot;top&quot;>&#xD;
            &lt;td height=&quot;24&quot; width=&quot;189&quot;>&#xD;
                &lt;p align=&quot;left&quot;>&#xD;
                    Reference&lt;br />&#xD;
                    &lt;font color=&quot;#c00000&quot;>(optional)&lt;/font>&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;419&quot;>&#xD;
                &lt;p align=&quot;left&quot;>&#xD;
                    &amp;lt; URL pointing to the use case element in a UML model. &amp;gt;&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr valign=&quot;top&quot;>&#xD;
            &lt;td height=&quot;24&quot; width=&quot;189&quot;>&#xD;
                &lt;p align=&quot;left&quot;>&#xD;
                    Use case diagram&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;419&quot;>&#xD;
                &lt;p align=&quot;left&quot;>&#xD;
                    &amp;lt; UML use case diagram for the actual use case. The diagram should include extend and include&#xD;
                    relationships if there is any. &amp;gt;&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr valign=&quot;top&quot;>&#xD;
            &lt;td height=&quot;24&quot; width=&quot;189&quot;>&#xD;
                &lt;p align=&quot;left&quot;>&#xD;
                    Status&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;419&quot;>&#xD;
                &lt;p style=&quot;MARGIN-BOTTOM: 0cm&quot;>&#xD;
                    &amp;lt; Status of the use case. One of the following:&#xD;
                &lt;/p>&#xD;
                &lt;ul>&#xD;
                    &lt;li>&#xD;
                        &lt;p style=&quot;MARGIN-BOTTOM: 0cm&quot;>&#xD;
                            Active&#xD;
                        &lt;/p>&#xD;
                    &lt;/li>&#xD;
                    &lt;li>&#xD;
                        &lt;p style=&quot;MARGIN-BOTTOM: 0cm&quot;>&#xD;
                            Deprecated&#xD;
                        &lt;/p>&#xD;
                    &lt;/li>&#xD;
                &lt;/ul>&#xD;
                &lt;p>&#xD;
                    In the case of a deprecated use case please provide a reason, e.g. in the ‘notes’ field. &amp;gt;&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr valign=&quot;top&quot;>&#xD;
            &lt;td height=&quot;24&quot; width=&quot;189&quot;>&#xD;
                &lt;p align=&quot;left&quot;>&#xD;
                    Priority of accomplishment &lt;font color=&quot;#c00000&quot;>(optional)&lt;/font>&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;419&quot;>&#xD;
                &lt;p style=&quot;MARGIN-BOTTOM: 0cm&quot;>&#xD;
                    &amp;lt; One of the following:&#xD;
                &lt;/p>&#xD;
                &lt;ul>&#xD;
                    &lt;li>&#xD;
                        &lt;p style=&quot;MARGIN-BOTTOM: 0cm&quot;>&#xD;
                            Must have: The system must implement this goal/assumption to be accepted.&#xD;
                        &lt;/p>&#xD;
                    &lt;/li>&#xD;
                &lt;/ul>&#xD;
                &lt;ul>&#xD;
                    &lt;li>&#xD;
                        &lt;p style=&quot;MARGIN-BOTTOM: 0cm&quot;>&#xD;
                            Should have: The system should implement this goal/assumption: some deviation from the&#xD;
                            goal/assumption as stated may be acceptable.&#xD;
                        &lt;/p>&#xD;
                    &lt;/li>&#xD;
                    &lt;li>&#xD;
                        &lt;p>&#xD;
                            Could have: The system should implement this goal/assumption, but may be accepted without it.&#xD;
                            &amp;gt;&#xD;
                        &lt;/p>&#xD;
                    &lt;/li>&#xD;
                &lt;/ul>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr valign=&quot;top&quot;>&#xD;
            &lt;td height=&quot;24&quot; width=&quot;189&quot;>&#xD;
                &lt;p align=&quot;left&quot;>&#xD;
                    Goal&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;419&quot;>&#xD;
                &lt;p>&#xD;
                    &amp;lt; Description of the goal(s) for the use case. &amp;gt;&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr valign=&quot;top&quot;>&#xD;
            &lt;td height=&quot;24&quot; width=&quot;189&quot;>&#xD;
                &lt;p align=&quot;left&quot;>&#xD;
                    Summary&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;419&quot;>&#xD;
                &lt;p>&#xD;
                    &amp;lt; A short textual description of the use case. &amp;gt;&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr valign=&quot;top&quot;>&#xD;
            &lt;td height=&quot;24&quot; width=&quot;189&quot;>&#xD;
                &lt;p align=&quot;left&quot;>&#xD;
                    Category&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;419&quot;>&#xD;
                &lt;p align=&quot;left&quot;>&#xD;
                    &amp;lt; Categorisation of use cases according to an overall reference architecture defining scope, levels&#xD;
                    and main architectural elements. &amp;gt;&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr valign=&quot;top&quot;>&#xD;
            &lt;td height=&quot;24&quot; width=&quot;189&quot;>&#xD;
                &lt;p align=&quot;left&quot;>&#xD;
                    Actors&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;419&quot;>&#xD;
                &lt;p align=&quot;left&quot;>&#xD;
                    &amp;lt; All users that interact with the system, including other systems relied upon to accomplish use&#xD;
                    case. &amp;gt;&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr valign=&quot;top&quot;>&#xD;
            &lt;td height=&quot;24&quot; width=&quot;189&quot;>&#xD;
                &lt;p align=&quot;left&quot;>&#xD;
                    Primary actor&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;419&quot;>&#xD;
                &lt;p align=&quot;left&quot;>&#xD;
                    &amp;lt; A role name or description for the primary actor. The primary actor initiates the use case. &amp;gt;&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr valign=&quot;top&quot;>&#xD;
            &lt;td height=&quot;24&quot; width=&quot;189&quot;>&#xD;
                &lt;p align=&quot;left&quot;>&#xD;
                    Stakeholder&lt;br />&#xD;
                    &lt;font color=&quot;#c00000&quot;>(optional)&lt;/font>&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;419&quot;>&#xD;
                &lt;p align=&quot;left&quot;>&#xD;
                    &amp;lt; A list of stakeholder, i.e. individuals or organisations, that has an interest in the solution of&#xD;
                    the problem. &amp;gt;&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;td height=&quot;24&quot; width=&quot;189&quot;>&#xD;
                &lt;p style=&quot;MARGIN-BOTTOM: 0cm&quot;>&#xD;
                    Facade&lt;br />&#xD;
                    &lt;font color=&quot;#c00000&quot;>(optional)&lt;/font>&#xD;
                &lt;/p>&#xD;
                &lt;p align=&quot;left&quot;>&#xD;
                    &lt;br />&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td valign=&quot;top&quot; width=&quot;419&quot;>&#xD;
                &lt;p align=&quot;left&quot;>&#xD;
                    &amp;lt; A (simplified) interface for the use case. &amp;gt;&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr valign=&quot;top&quot;>&#xD;
            &lt;td height=&quot;24&quot; width=&quot;189&quot;>&#xD;
                &lt;p align=&quot;left&quot;>&#xD;
                    Preconditions&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;419&quot;>&#xD;
                &lt;p align=&quot;left&quot;>&#xD;
                    &amp;lt; Description of the pre conditions for the use case, i.e. what we expect is already the state of&#xD;
                    the world. &amp;gt;&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr valign=&quot;top&quot;>&#xD;
            &lt;td height=&quot;24&quot; width=&quot;189&quot;>&#xD;
                &lt;p align=&quot;left&quot;>&#xD;
                    Triggers&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;419&quot;>&#xD;
                &lt;p>&#xD;
                    &amp;lt; The action upon the system that starts the use case. &amp;gt;&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr valign=&quot;top&quot;>&#xD;
            &lt;td height=&quot;24&quot; width=&quot;189&quot;>&#xD;
                &lt;p align=&quot;left&quot;>&#xD;
                    Main success scenario&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;419&quot;>&#xD;
                &lt;p align=&quot;left&quot;>&#xD;
                    &amp;lt; Description of the use case scenarios. This includes the primary scenario and related secondary&#xD;
                    scenarios. The scenarios are described as a scenario of steps from trigger to goal delivery, and any&#xD;
                    cleanup after. &amp;gt;&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr valign=&quot;top&quot;>&#xD;
            &lt;td height=&quot;24&quot; width=&quot;189&quot;>&#xD;
                &lt;p align=&quot;left&quot;>&#xD;
                    Extensions&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;419&quot;>&#xD;
                &lt;p align=&quot;left&quot;>&#xD;
                    &amp;lt; Extensions are actions that will be executed additionally to the main scenario, optional actions,&#xD;
                    which refine the main actions, e.g. condition causing branching. &amp;gt;&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr valign=&quot;top&quot;>&#xD;
            &lt;td height=&quot;24&quot; width=&quot;189&quot;>&#xD;
                &lt;p align=&quot;left&quot;>&#xD;
                    Alternative paths&lt;br />&#xD;
                    &lt;font color=&quot;#c00000&quot;>(optional)&lt;/font>&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;419&quot;>&#xD;
                &lt;p align=&quot;left&quot;>&#xD;
                    &amp;lt; Alternative paths are actions which replace another action in the main scenario or from the&#xD;
                    extension actions. &amp;gt;&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr valign=&quot;top&quot;>&#xD;
            &lt;td height=&quot;24&quot; width=&quot;189&quot;>&#xD;
                &lt;p align=&quot;left&quot;>&#xD;
                    Post conditions&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;419&quot;>&#xD;
                &lt;p align=&quot;left&quot;>&#xD;
                    &amp;lt; Description of the post conditions for the use case. The post condition will often correspond to&#xD;
                    the goals. &amp;gt;&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr valign=&quot;top&quot;>&#xD;
            &lt;td height=&quot;24&quot; width=&quot;189&quot;>&#xD;
                &lt;p align=&quot;left&quot;>&#xD;
                    Non-functional requirements&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;419&quot;>&#xD;
                &lt;p align=&quot;left&quot;>&#xD;
                    &amp;lt; Description of non-functional requirements for this use case. These could be linked to a database&#xD;
                    containing the non-functional requirements for the system. &amp;gt;&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr valign=&quot;top&quot;>&#xD;
            &lt;td height=&quot;24&quot; width=&quot;189&quot;>&#xD;
                &lt;p align=&quot;left&quot;>&#xD;
                    Notes&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;419&quot;>&#xD;
                &lt;p align=&quot;left&quot;>&#xD;
                    &amp;lt; All important information that don’t match another item in the template. &amp;gt;&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr valign=&quot;top&quot;>&#xD;
            &lt;td height=&quot;23&quot; width=&quot;189&quot;>&#xD;
                &lt;p align=&quot;left&quot;>&#xD;
                    Author and date&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;419&quot;>&#xD;
                &lt;p style=&quot;PAGE-BREAK-AFTER: avoid&quot; align=&quot;left&quot;>&#xD;
                    &amp;lt; When and by whom the use case (version) was created. &amp;gt;&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
    &lt;/tbody>&#xD;
&lt;/table></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Ngf2vpL1wAiX9QWDN8WhDA" name="use_case_scenario_model,_05XNMeKnEd-Knc6oCYT2Zw" guid="-Ngf2vpL1wAiX9QWDN8WhDA">
    <refinedDescription>&lt;p>&#xD;
    This model describes the system in terms of actors, use cases and scenario descriptions. The model:&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Includes more detailed descriptions of the system resulting from further analysis using the common use case&#xD;
        detailing technique, by diving into a use case discovering new use cases and actors.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Use case scenarios are also described in this work product.&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-FDtEh1XqBhRVNekIvGLzZQ" name="develop_prototype,_1UPyYOKnEd-Knc6oCYT2Zw" guid="-FDtEh1XqBhRVNekIvGLzZQ">
    <refinedDescription>&lt;p>&#xD;
    The &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.requirements.use_case_modelling.base-sintef/workproducts/prototype_17EAC1A1.html&quot;&#xD;
    guid=&quot;_ufFW0N0UEd-xB8a51ZHHaA&quot;>Prototype&lt;/a>s are part of the requirements model. Prototyping is very important to be&#xD;
    able to reduce technical risks and to ensure end user involvement. &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.requirements.use_case_modelling.base-sintef/workproducts/prototype_17EAC1A1.html&quot;&#xD;
    guid=&quot;_ufFW0N0UEd-xB8a51ZHHaA&quot;>Prototype&lt;/a>s are commonly used to emphasise the UI, test critical use cases and test&#xD;
    risky parts of the architecture.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It is common to build some &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.requirements.use_case_modelling.base-sintef/workproducts/prototype_17EAC1A1.html&quot;&#xD;
    guid=&quot;_ufFW0N0UEd-xB8a51ZHHaA&quot;>Prototype&lt;/a>s during the elaboration phase to try out some ideas or to determine if a&#xD;
    high risk feature is possible. As a result of the prototyping effort, you may decide that a certain feature is not&#xD;
    feasible and remove it from the project. If that feature is key to the project it might even be decided to abandon the&#xD;
    project.&#xD;
&lt;/p>&#xD;
&lt;a id=&quot;N10135&quot; name=&quot;N10135&quot;>&lt;/a>&lt;a id=&quot;Goals-N10135&quot; name=&quot;Goals-N10135&quot;>&lt;/a> &#xD;
&lt;h3 class=&quot;underlined_5&quot;>&#xD;
    Goals&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    The prototypes should seek to:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Reduce technical risks.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Reduce the possibility of getting end user dissatisfaction.&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-etcDgNsmpmceglCurU2lTg" name="prototype,_1UPyYeKnEd-Knc6oCYT2Zw" guid="-etcDgNsmpmceglCurU2lTg">
    <refinedDescription>&lt;p>&#xD;
    One or more prototypes may be produced during development of the Product, in order to test understanding of the&#xD;
    requirement, or particular aspects of the design (e.g. HCI).&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-PKVTGaDZSqOI6o_RW4aMsQ" name="define_as_is_architecture_model,_zrCHIFCrEeCQQoyAiE5Lcw" guid="-PKVTGaDZSqOI6o_RW4aMsQ">
    <refinedDescription>&lt;p>&#xD;
    The main purpose of the &quot;as-is&quot; model is to describe all of the features of the legacy application that can be exposed&#xD;
    or re-implemented as services. Structure diagrams, e.g. UML class and component diagram should be used to describe and&#xD;
    document these features.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-rqZIYMUhyumWRVTnXipxOQ" name="system_architect,_CJNn8VCsEeCQQoyAiE5Lcw" guid="-rqZIYMUhyumWRVTnXipxOQ">
    <refinedDescription>This worker is involved in the design of the components which compose the software system. This worker is involved in the&#xD;
design of the architecture of the system, with its components and their interfaces.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-hF4_0I4ifJuAZOz1jFqvvQ" name="as_is_architecture_model,_CJO2EFCsEeCQQoyAiE5Lcw" guid="-hF4_0I4ifJuAZOz1jFqvvQ">
    <refinedDescription>&amp;lt;TBD&amp;gt;</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-C22mYjYSJjc3kZolJGMpGA" name="identify_candidate_services,_eHOVgFCtEeCQQoyAiE5Lcw" guid="-C22mYjYSJjc3kZolJGMpGA">
    <refinedDescription>Analyse the results from the &quot;as-is&quot; architecture model to find candidates that can be migrated to a service.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-EOqGoYAGutLiq6MmG_pIDQ" name="define_service_migration_model,_gXfH8FCtEeCQQoyAiE5Lcw" guid="-EOqGoYAGutLiq6MmG_pIDQ">
    <refinedDescription>&lt;p>&#xD;
    The &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.architecture.model_driven_migration.base-sintef/workproducts/service_migration_model_5EA7017F.html&quot;&#xD;
     guid=&quot;_kbzucFCsEeCQQoyAiE5Lcw&quot;>Service migration model&lt;/a> describes the IT perspective of an SOA and contains the&#xD;
    spesifications of service interfaces, interfaces and message types, opperation behaviours, service orchestration and&#xD;
    software componenst. The &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.architecture.model_driven_migration.base-sintef/workproducts/service_migration_model_5EA7017F.html&quot;&#xD;
     guid=&quot;_kbzucFCsEeCQQoyAiE5Lcw&quot;>Service migration model&lt;/a>&amp;nbsp; is built in the two tasks &lt;em>define service&#xD;
    interfaces&lt;/em> and &lt;em>define operation behaviours&lt;/em>.&lt;br />&#xD;
    The model represents a so-called platform-independent model (PIM) according&amp;nbsp;to the MDA approach.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-l4OxI8LzSukmwkYZ21rq-A" name="define_service_interfaces,_hAGAEFCtEeCQQoyAiE5Lcw" guid="-l4OxI8LzSukmwkYZ21rq-A">
    <refinedDescription>&lt;p>&#xD;
    The main purpose of the service interface is to provide structural features, and to specify the interactions between&#xD;
    the software components of the service-oriented architecture.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-x47rInXL-znGMdiH4KLnWA" name="define_operation_behaviours,_mQlCQFCtEeCQQoyAiE5Lcw" guid="-x47rInXL-znGMdiH4KLnWA">
    <refinedDescription>In this task behavioural features are defined&amp;nbsp;and they have to comply with the service interfaces that are defined in&#xD;
the previous task. The behaviours is specified using UML activity models using the behaviour stereotypes defined in the UML&#xD;
profile.&amp;nbsp;</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-gxSCD7_fHMlPJ5jzkBRmZA" name="generate_web_services,_ca4dkFCvEeCQQoyAiE5Lcw" guid="-gxSCD7_fHMlPJ5jzkBRmZA">
    <refinedDescription>Generate Web services using model transformation to text that specifies mapping rules from migration models to source code,&#xD;
i.e. structural elements of the models is mapped to structural elements and behavioural elements such as actions are mapped&#xD;
to statements during code generation.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-WSY3UvABjIqub3iK09Musg" name="implement_business_logic,_fHGMMFCvEeCQQoyAiE5Lcw" guid="-WSY3UvABjIqub3iK09Musg">
    <refinedDescription>Write business logic that coresponds to the operational behavioural spesifications.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-9FPzkSUpW3xfCWiSQw6Glg" name="service_migration_model,_TrlbqlOjEeCEwfF5AiV8xA" guid="-9FPzkSUpW3xfCWiSQw6Glg">
    <refinedDescription>&lt;p>&#xD;
    The service migration model describes the IT perspective of an SOA and contains the spesifications of service&#xD;
    interfaces, interfaces and message types, opperation behaviours, service orchestration and software componenst. The&#xD;
    service migration model is built in the two tasks &lt;em>define service interfaces&lt;/em> and &lt;em>define operation&#xD;
    behaviours&lt;/em>.&lt;br />&#xD;
    The model represents a so-called platform-independent model (PIM) according&amp;nbsp;to the MDA approach.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-NL5Kmzku5yZAOj9QW19MNQ" name="system_developer,_u_MhUVOkEeCEwfF5AiV8xA" guid="-NL5Kmzku5yZAOj9QW19MNQ">
    <refinedDescription>This worker is involved in the implementation of the business process, obtaining services needed to be part of the&#xD;
composition and developing the final script which can be executed by a specialized engine.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-fZQB2XdhOp_issbE0hu06A" name="perform_unit_and_integration_test,_zMVuEFCtEeCQQoyAiE5Lcw" guid="-fZQB2XdhOp_issbE0hu06A">
    <refinedDescription>&lt;p>&#xD;
    There are three different practices to choose from, &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.tech.concurrent_testing.base/guidances/practices/concurrent_testing_AF686531.html&quot;&#xD;
    guid=&quot;_9z1PgJ6NEdyQN-zRFaRrCQ&quot;>Concurrent Testing&lt;/a>, &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.tech.continuous_integration.base/guidances/practices/continous_integration_58673D65.html&quot;&#xD;
    guid=&quot;_rJNiMB4rEd2bS8fFOQ7WWA&quot;>Continuous Integration&lt;/a> and &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.tech.test_driven_development.base/guidances/guidelines/test_driven_development_F581182D.html&quot;&#xD;
    guid=&quot;_5s_DUJ03EdyQ3oTO93enUw&quot;>Test Driven Development&lt;/a>. Choose the practice that suits the project.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-QBoYY0iemvCeKK8FzKtmJg" name="tester,_Tsn9cVOjEeCEwfF5AiV8xA" guid="-QBoYY0iemvCeKK8FzKtmJg">
    <refinedDescription>&lt;p> The person in this role is primarily responsible for the following&amp;nbsp;tasks: 
&lt;/p>
&lt;ul>
  &lt;li> Identifying the tests&amp;nbsp;that need to&amp;nbsp;be performed &lt;/li>
  &lt;li> Identifying the most appropriate implementation approach for a given test 
  &lt;/li>
  &lt;li> Implementing individual tests &lt;/li>
  &lt;li> Setting up and running the tests &lt;/li>
  &lt;li> Logging outcomes and verifying that the tests have been run &lt;/li>
  &lt;li> Analyzing and guiding the recovery from execution errors &lt;/li>
  &lt;li> Communicating test results to the team &lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:ProcessDescription xmi:id="-QEXKrdW2M4r0CKntTwBA3g" name="reverse_engineering,_TxI1geaAEd-5YeUvCnM2dQ" guid="-QEXKrdW2M4r0CKntTwBA3g">
    <mainDescription>This capability pattern describes a baseline workflow for reverse engineering.</mainDescription>
    <purpose>&lt;ul>&#xD;
    &lt;li>&#xD;
        To describe an as-is architecture of the legacy systems.&#xD;
    &lt;/li>&#xD;
&lt;/ul></purpose>
  </org.eclipse.epf.uma:ProcessDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-kHhVa8MTX77CaXun_vTvRQ" name="system_developer,_i0xPsaCvEeCoT4Im6BOo8w" guid="-kHhVa8MTX77CaXun_vTvRQ">
    <refinedDescription>This worker is involved in the implementation of the business process, obtaining services needed to be part of the&#xD;
composition and developing the final script which can be executed by a specialized engine.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-3mKuKubkJBhoxoCQSsJWYA" name="service_migration_model,_i02vQaCvEeCoT4Im6BOo8w" guid="-3mKuKubkJBhoxoCQSsJWYA">
    <refinedDescription>&lt;p>&#xD;
    The service migration model describes the IT perspective of an SOA and contains the spesifications of service&#xD;
    interfaces, interfaces and message types, opperation behaviours, service orchestration and software componenst. The&#xD;
    service migration model is built in the two tasks &lt;em>define service interfaces&lt;/em> and &lt;em>define operation&#xD;
    behaviours&lt;/em>.&lt;br />&#xD;
    The model represents a so-called platform-independent model (PIM) according&amp;nbsp;to the MDA approach.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-1wXIWz6Szxddmmde_v9y-A" name="system_architect,_i1KRQaCvEeCoT4Im6BOo8w" guid="-1wXIWz6Szxddmmde_v9y-A">
    <refinedDescription>This worker is involved in the design of the components which compose the software system. This worker is involved in the&#xD;
design of the architecture of the system, with its components and their interfaces.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-fip1fWUhlXyhmzcNBE9mzA" name="tester,_i1LfYaCvEeCoT4Im6BOo8w" guid="-fip1fWUhlXyhmzcNBE9mzA">
    <refinedDescription>&lt;p> The person in this role is primarily responsible for the following&amp;nbsp;tasks: 
&lt;/p>
&lt;ul>
  &lt;li> Identifying the tests&amp;nbsp;that need to&amp;nbsp;be performed &lt;/li>
  &lt;li> Identifying the most appropriate implementation approach for a given test 
  &lt;/li>
  &lt;li> Implementing individual tests &lt;/li>
  &lt;li> Setting up and running the tests &lt;/li>
  &lt;li> Logging outcomes and verifying that the tests have been run &lt;/li>
  &lt;li> Analyzing and guiding the recovery from execution errors &lt;/li>
  &lt;li> Communicating test results to the team &lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-oogteIAJCD79_d8afw-bZQ" name="as_is_architecture_model,_i1UpUaCvEeCoT4Im6BOo8w" guid="-oogteIAJCD79_d8afw-bZQ">
    <refinedDescription>&amp;lt;TBD&amp;gt;</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-kOA5tiVWi5zwFefP7WvxOA" name="implement_web_service,_-pNJoJzCEeCwZfi5IJDs5w" guid="-kOA5tiVWi5zwFefP7WvxOA">
    <refinedDescription>This task describes how to implement a Web service using JEE technologies.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-olXS0VVp4_t7Y1bwU8AkMQ" name="system_developer,_-pOXwJzCEeCwZfi5IJDs5w" guid="-olXS0VVp4_t7Y1bwU8AkMQ">
    <refinedDescription>This worker is involved in the implementation of the business process, obtaining services needed to be part of the&#xD;
composition and developing the final script which can be executed by a specialized engine.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-HAUZhdAWLHONEvDzbeo-xw" name="deploy_web_service,_TKhRkJzDEeCwZfi5IJDs5w" guid="-HAUZhdAWLHONEvDzbeo-xw">
    <refinedDescription>This task defines the guided procedure for deploying a Web service using JEE technologies.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-A9-FyfYSlJrmVbcw9L89BA" name="build,_JqMvkaCtEeCoT4Im6BOo8w" guid="-A9-FyfYSlJrmVbcw9L89BA">
    <refinedDescription>&lt;p>
    This working version of the system or part of the system&amp;nbsp;is the result of putting the implementation through a
    build process (typically an automated build script) that creates an executable version, or one that runs. This
    executable version will typically have a number of supporting files that are also considered part of this artifact.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-8OGBemy51WF9_rv18hwuOQ" name="developer_test,_JqMvlKCtEeCoT4Im6BOo8w" guid="-8OGBemy51WF9_rv18hwuOQ">
    <refinedDescription>&lt;p>
    This artifact covers all of the steps to validate a specific aspect of an implementation element. For example, a test
    could ensure that the parameters of a method properly accept the uppermost and lowermost required values. A developer
    test specifies test entries, execution conditions, and expected results. These details are identified to evaluate a
    particular aspect of a scenario.
&lt;/p>
&lt;p>
    When you collect developer tests for a specific implementation element, you can validate that the element performs as
    specified.
&lt;/p>
&lt;p>
    The tests be self-documenting so that it is clear upon completion of the test whether the implementation element has
    run correctly.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-gRzerFKtEVWiYfBlHe4LpQ" name="implementation,_JqMvl6CtEeCoT4Im6BOo8w" guid="-gRzerFKtEVWiYfBlHe4LpQ">
    <refinedDescription>&lt;p> 
   This artifact is the collection of one or more of these elements: &lt;/p> &lt;ul>
&lt;li>         Source code files     &lt;/li>
&lt;li>         Data files     &lt;/li>
&lt;li>         Build scripts     &lt;/li>
&lt;li>         Other files that are transformed into the executable system 
   &lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-k8miLsTY2_jIkh1EEu33Mg" name="design,_JqMvmqCtEeCoT4Im6BOo8w" guid="-k8miLsTY2_jIkh1EEu33Mg">
    <refinedDescription>&lt;p>
    This product can describe multiple static and dynamic views of the system for examination. Although various views may
    focus on divergent, seemingly independent issues of how the system will be put together and work, they should fit
    together without contradiction.
&lt;/p>
&lt;p>
    It describes the elements that will make up the implemented system. It communicates abstractions of particular portions
    of the implementation and can describe an&amp;nbsp;encapsulated subsystem, a high-level analysis of the system, a view of
    the system in only one context, or other perspectives that explain a solution to a specific problem that needs to be
    communicated.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-aEV7oQzQyGf6INquARumXA" name="service_migration_model,_JqMvnaCtEeCoT4Im6BOo8w" guid="-aEV7oQzQyGf6INquARumXA">
    <refinedDescription>&lt;p>&#xD;
    The service migration model describes the IT perspective of an SOA and contains the spesifications of service&#xD;
    interfaces, interfaces and message types, opperation behaviours, service orchestration and software componenst. The&#xD;
    service migration model is built in the two tasks &lt;em>define service interfaces&lt;/em> and &lt;em>define operation&#xD;
    behaviours&lt;/em>.&lt;br />&#xD;
    The model represents a so-called platform-independent model (PIM) according&amp;nbsp;to the MDA approach.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-6drKNrpWdi4XKtOn2wnugQ" name="matlab_as_service,_JqWglKCtEeCoT4Im6BOo8w" guid="-6drKNrpWdi4XKtOn2wnugQ">
    <refinedDescription>&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>The usage of Providing MATLAB as a Service here will mainly satisfy the requirements from “Mathematic Modeling” and “Service Modeling“aspects.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;?xml:namespace prefix = o ns = &quot;urn:schemas-microsoft-com:office:office&quot; />&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>According to the introduction from MathWorks, there are three ways to deploy MATLAB as a web service currently&lt;?xml:namespace prefix = w ns = &quot;urn:schemas-microsoft-com:office:word&quot; />&lt;w:Sdt id=6082354 Citation=&quot;t&quot;>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>&lt;SPAN style=&quot;mso-spacerun: yes&quot;>&amp;nbsp;&lt;/SPAN>&lt;/SPAN>&lt;/w:Sdt>.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-INDENT: -18pt; MARGIN: 0cm 0cm 0pt 36pt; mso-list: l0 level1 lfo1&quot; class=BodyMain>&lt;SPAN style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;SPAN style=&quot;mso-list: Ignore&quot;>&lt;FONT size=3>·&lt;/FONT>&lt;SPAN style=&quot;FONT: 7pt 'Times New Roman'&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;FONT size=3 face=Calibri>Use MATLAB Builder NE to create a server-side .NET component;&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-INDENT: -18pt; MARGIN: 0cm 0cm 0pt 36pt; mso-list: l0 level1 lfo1&quot; class=BodyMain>&lt;SPAN style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;SPAN style=&quot;mso-list: Ignore&quot;>&lt;FONT size=3>·&lt;/FONT>&lt;SPAN style=&quot;FONT: 7pt 'Times New Roman'&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;FONT size=3 face=Calibri>Use MATLAB Builder JA to create a server-side Java component;&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-INDENT: -18pt; MARGIN: 0cm 0cm 0pt 36pt; mso-list: l0 level1 lfo1&quot; class=BodyMain>&lt;SPAN style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;SPAN style=&quot;mso-list: Ignore&quot;>&lt;FONT size=3>·&lt;/FONT>&lt;SPAN style=&quot;FONT: 7pt 'Times New Roman'&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;FONT size=3 face=Calibri>Use COM automation, CGI, or other technologies to access MATLAB through web.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=MsoNoSpacing>&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>With MATLAB Builder NE or JA, user can integrate MATLAB application with .NET and COM components, or Java program, and then deployed this application as web service. A .NET, or COM, or Java wrapper is used here to invoke the encrypted MATLAB functions. This wrapper runs against the MATLAB Compiler Runtime (MCR) and can share the MATLAB libraries. The MATLAB function is invoked as Java method or methods of any other COM or .NET class. &lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>MathWorks gives a mechanism to provide the MATLAB function into a deployable, portable, robust, scalable Web application, which we could see from the diagram below.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;PAGE-BREAK-AFTER: avoid; MARGIN: 0cm 0cm 0pt&quot; class=MsoNoSpacing>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>&lt;?xml:namespace prefix = v ns = &quot;urn:schemas-microsoft-com:vml&quot; />&lt;v:shapetype id=_x0000_t75 stroked=&quot;f&quot; filled=&quot;f&quot; path=&quot;m@4@5l@4@11@9@11@9@5xe&quot; o:preferrelative=&quot;t&quot; o:spt=&quot;75&quot; coordsize=&quot;21600,21600&quot;>&lt;v:stroke joinstyle=&quot;miter&quot;>&lt;/v:stroke>&lt;v:formulas>&lt;v:f eqn=&quot;if lineDrawn pixelLineWidth 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @0 1 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum 0 0 @1&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @2 1 2&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @3 21600 pixelWidth&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @3 21600 pixelHeight&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @0 0 1&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @6 1 2&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @7 21600 pixelWidth&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @8 21600 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @7 21600 pixelHeight&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @10 21600 0&quot;>&lt;/v:f>&lt;/v:formulas>&lt;v:path o:connecttype=&quot;rect&quot; gradientshapeok=&quot;t&quot; o:extrusionok=&quot;f&quot;>&lt;/v:path>&lt;o:lock aspectratio=&quot;t&quot; v:ext=&quot;edit&quot;>&lt;/o:lock>&lt;/v:shapetype>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-ALIGN: center; MARGIN: 0cm 0cm 10pt&quot; class=MsoCaption align=center>&lt;IMG alt=&quot;&quot; src=&quot;./../../practice.platform.matlab_modelica_development.base-sintef/workproducts/resources/MTALAB.bmp&quot; width=580 height=532>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-ALIGN: center; MARGIN: 0cm 0cm 10pt&quot; class=MsoCaption align=center>&lt;a name=&quot;_Toc238805380&quot;>&lt;STRONG>&lt;FONT color=#4f81bd face=Calibri>Figure &lt;/FONT>&lt;/STRONG>&lt;/a>&lt;STRONG>&lt;FONT color=#4f81bd>&lt;FONT face=Calibri>&lt;SPAN style=&quot;mso-bookmark: _Toc238805380&quot;>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>13&lt;/SPAN>&lt;/SPAN>&lt;SPAN style=&quot;mso-bookmark: _Toc238805380&quot;>. Architecture of Proving MATLAB as a Service&lt;/SPAN>&lt;/FONT>&lt;/FONT>&lt;/STRONG>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>For builder NE, users can integrate a MATLAB based .NET or COM component into an existing .NET or COM application by installing both the component and the MCR on the target machine. For Web applications, the builder also provides a .NET custom control that allows zoom, pan, and rotate functionality for figures created in MATLAB. Users can also use the custom control from the toolbox in Visual Studio. With the builder support for the .NET remoting API, users can also run their class as a persistent service or spread their processing across multiple processes. &lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>For builder JA, MATLAB allows users to present the MATLAB calculation or simulation results into servlets or Java Server Page. Users can integrate a MATLAB based Java class into an existing Java infrastructure by installing the class and the MCR on the target machine. For Web applications that use JSP technology or servlets, the builder provides AJAX-based zoom, pan, and rotate controls for figures created in MATLAB. Using the builder's Remote Method Invocation (RMI) interface, users can also run their class as a persistent service, or spread their processing across multiple processes. Java classes created with the builder can be distributed at no additional charge.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>A typical example of providing MATLAB as web service is shown in the website of MATLAB, which we could see in the following table. This example allows users to input parameters from web browser, then the parameter will be passed to MATLAB service and return the simulation result, the result will be present in client web browser.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=MsoNoSpacing>&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;PAGE-BREAK-AFTER: avoid; MARGIN: 0cm 0cm 0pt&quot; class=MsoNoSpacing>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-ALIGN: center; MARGIN: 0cm 0cm 10pt&quot; class=MsoCaption align=center>&lt;IMG alt=&quot;&quot; src=&quot;./../../practice.platform.matlab_modelica_development.base-sintef/workproducts/resources/MATLAB2.bmp&quot; width=580 height=488>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-ALIGN: center; MARGIN: 0cm 0cm 10pt&quot; class=MsoCaption align=center>&lt;a name=&quot;_Toc238805381&quot;>&lt;STRONG>&lt;FONT color=#4f81bd face=Calibri>Figure &lt;/FONT>&lt;/STRONG>&lt;/a>&lt;STRONG>&lt;FONT color=#4f81bd>&lt;FONT face=Calibri>&lt;SPAN style=&quot;mso-bookmark: _Toc238805381&quot;>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>14&lt;/SPAN>&lt;/SPAN>&lt;SPAN style=&quot;mso-bookmark: _Toc238805381&quot;>. Calculation Results from MATLAB Web Service&lt;/SPAN>&lt;/FONT>&lt;/FONT>&lt;/STRONG>&lt;/P></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-gdCMVQ9Js4jIV-AbpG-MjQ" name="modelica_design_time_model,_JqWgl6CtEeCoT4Im6BOo8w" guid="-gdCMVQ9Js4jIV-AbpG-MjQ">
    <refinedDescription>&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>The Designing Time Model is the way that the Modelica Complier is integrated with the target system as a server. As a result, the client application can compile the Modelica Model and do simulation dynamically.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;?xml:namespace prefix = o ns = &quot;urn:schemas-microsoft-com:office:office&quot; />&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>In the context of design time models, we would like to integrate the Modelica Server to our development process. We will have a model-based software development environment which allows interacting between Java program and Modelica Server dynamically. The OpenModelica API would be used here to integrate the Modelica Server with existing Java program. Domain concepts in Eclipse Ecore can also be used as a basis for automatically creating models (classes) in Modelica. The ideal Modelica invoke process would like:&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-INDENT: -18pt; MARGIN: 0cm 0cm 0pt 36pt; mso-list: l0 level1 lfo1&quot; class=BodyMain>&lt;SPAN style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;SPAN style=&quot;mso-list: Ignore&quot;>&lt;FONT size=3>·&lt;/FONT>&lt;SPAN style=&quot;FONT: 7pt 'Times New Roman'&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;FONT size=3 face=Calibri>The users can create the models in client side of target system;&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-INDENT: -18pt; MARGIN: 0cm 0cm 0pt 36pt; mso-list: l0 level1 lfo1&quot; class=BodyMain>&lt;SPAN style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;SPAN style=&quot;mso-list: Ignore&quot;>&lt;FONT size=3>·&lt;/FONT>&lt;SPAN style=&quot;FONT: 7pt 'Times New Roman'&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;FONT size=3 face=Calibri>The users send the models as required parameters to web server;&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-INDENT: -18pt; MARGIN: 0cm 0cm 0pt 36pt; mso-list: l0 level1 lfo1&quot; class=BodyMain>&lt;SPAN style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;SPAN style=&quot;mso-list: Ignore&quot;>&lt;FONT size=3>·&lt;/FONT>&lt;SPAN style=&quot;FONT: 7pt 'Times New Roman'&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;FONT size=3 face=Calibri>The web server interacts with Modelica Server and gets the calculated results or simulations;&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-INDENT: -18pt; MARGIN: 0cm 0cm 0pt 36pt; mso-list: l0 level1 lfo1&quot; class=BodyMain>&lt;SPAN style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;SPAN style=&quot;mso-list: Ignore&quot;>&lt;FONT size=3>·&lt;/FONT>&lt;SPAN style=&quot;FONT: 7pt 'Times New Roman'&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;FONT size=3 face=Calibri>The calculated results or simulations are sent to client side dynamically;&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 10pt&quot; class=MsoNormal>&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>The following is an architecture diagram we design for Modelica Web Service.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;PAGE-BREAK-AFTER: avoid; TEXT-ALIGN: center; MARGIN: 0cm 0cm 0pt&quot; class=MsoNoSpacing align=center>&lt;SPAN style=&quot;FONT-SIZE: 12pt; mso-no-proof: yes&quot;>&lt;?xml:namespace prefix = v ns = &quot;urn:schemas-microsoft-com:vml&quot; />&lt;v:shapetype id=_x0000_t75 stroked=&quot;f&quot; filled=&quot;f&quot; path=&quot;m@4@5l@4@11@9@11@9@5xe&quot; o:preferrelative=&quot;t&quot; o:spt=&quot;75&quot; coordsize=&quot;21600,21600&quot;>&lt;v:stroke joinstyle=&quot;miter&quot;>&lt;/v:stroke>&lt;v:formulas>&lt;v:f eqn=&quot;if lineDrawn pixelLineWidth 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @0 1 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum 0 0 @1&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @2 1 2&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @3 21600 pixelWidth&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @3 21600 pixelHeight&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @0 0 1&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @6 1 2&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @7 21600 pixelWidth&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @8 21600 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @7 21600 pixelHeight&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @10 21600 0&quot;>&lt;/v:f>&lt;/v:formulas>&lt;v:path o:connecttype=&quot;rect&quot; gradientshapeok=&quot;t&quot; o:extrusionok=&quot;f&quot;>&lt;/v:path>&lt;o:lock aspectratio=&quot;t&quot; v:ext=&quot;edit&quot;>&lt;/o:lock>&lt;/v:shapetype>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-ALIGN: center; MARGIN: 0cm 0cm 10pt&quot; class=MsoCaption align=center>&lt;IMG alt=&quot;&quot; src=&quot;./../../practice.platform.matlab_modelica_development.base-sintef/workproducts/resources/untitled.bmp&quot; width=532 height=492>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-ALIGN: center; MARGIN: 0cm 0cm 10pt&quot; class=MsoCaption align=center>&lt;a name=&quot;_Toc238805383&quot;>&lt;STRONG>&lt;FONT color=#4f81bd face=Calibri>Figure &lt;/FONT>&lt;/STRONG>&lt;/a>&lt;STRONG>&lt;FONT color=#4f81bd>&lt;FONT face=Calibri>&lt;SPAN style=&quot;mso-bookmark: _Toc238805383&quot;>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>16&lt;/SPAN>&lt;/SPAN>&lt;SPAN style=&quot;mso-bookmark: _Toc238805383&quot;>. Modelica Web Service Architecture&lt;/SPAN>&lt;/FONT>&lt;/FONT>&lt;/STRONG>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=MsoNoSpacing>&lt;SPAN style=&quot;FONT-SIZE: 12pt&quot;>&lt;o:p>&lt;FONT face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>Run time models integration is a simple way of invoking Modelica model and it just support the Modelica functionalities in run time. However, the final target of the methodology is to provide a web service mechanism for design-time interaction, and it can typically used for tool integration. For instants, it can provide integrating editors with the OpenModelica compiler.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&amp;nbsp;&lt;/P></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-iAOPoonU7Lgaovvi1klo6Q" name="modelica_web_service,_JqWgmqCtEeCoT4Im6BOo8w" guid="-iAOPoonU7Lgaovvi1klo6Q">
    <refinedDescription>&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>The Running Time Model is the way that the Modelica Model can be invoked as a program at the operating-system level, which is usually a Java class here.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;?xml:namespace prefix = o ns = &quot;urn:schemas-microsoft-com:office:office&quot; />&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>We have recognized the OpenModelica Project&lt;SPAN style=&quot;mso-spacerun: yes&quot;>&amp;nbsp;&amp;nbsp; &lt;/SPAN>as a good chance to achieve the above benefits with a reasonable amount of time and effort. The OpenModelica Project is an open source project and the OpenModelica Compiler (OMC) is by default targeted to C code generation. It would be possible to wrap the C code of a model into a Java wrapper code to be used by the Java Web Service with Java Native Interface technology. However, this approach leads to unmanaged native code to be called. More, they are not easily portable because of the need to be compiled separately for each target platform.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>The following picture shows translation phases of OpenModelica Compiler&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;PAGE-BREAK-AFTER: avoid; TEXT-ALIGN: center; MARGIN: 0cm 0cm 10pt&quot; class=MsoNormal align=center>&lt;?xml:namespace prefix = v ns = &quot;urn:schemas-microsoft-com:vml&quot; />&lt;v:shapetype id=_x0000_t75 stroked=&quot;f&quot; filled=&quot;f&quot; path=&quot;m@4@5l@4@11@9@11@9@5xe&quot; o:preferrelative=&quot;t&quot; o:spt=&quot;75&quot; coordsize=&quot;21600,21600&quot;>&lt;v:stroke joinstyle=&quot;miter&quot;>&lt;/v:stroke>&lt;v:formulas>&lt;v:f eqn=&quot;if lineDrawn pixelLineWidth 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @0 1 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum 0 0 @1&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @2 1 2&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @3 21600 pixelWidth&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @3 21600 pixelHeight&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @0 0 1&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @6 1 2&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @7 21600 pixelWidth&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @8 21600 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @7 21600 pixelHeight&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @10 21600 0&quot;>&lt;/v:f>&lt;/v:formulas>&lt;v:path o:connecttype=&quot;rect&quot; gradientshapeok=&quot;t&quot; o:extrusionok=&quot;f&quot;>&lt;/v:path>&lt;o:lock aspectratio=&quot;t&quot; v:ext=&quot;edit&quot;>&lt;IMG alt=&quot;&quot; src=&quot;./../../practice.platform.matlab_modelica_development.base-sintef/workproducts/resources/MOdelica Runtime.bmp&quot; width=512 height=384>&lt;/o:lock>&lt;/v:shapetype>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-ALIGN: center; MARGIN: 0cm 0cm 10pt&quot; class=MsoCaption align=center>&lt;a name=&quot;_Toc238805382&quot;>&lt;STRONG>&lt;FONT color=#4f81bd face=Calibri>Figure &lt;/FONT>&lt;/STRONG>&lt;/a>&lt;STRONG>&lt;FONT color=#4f81bd>&lt;FONT face=Calibri>&lt;SPAN style=&quot;mso-bookmark: _Toc238805382&quot;>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>15&lt;/SPAN>&lt;/SPAN>&lt;SPAN style=&quot;mso-bookmark: _Toc238805382&quot;>. OpenModelica Translation Phases&lt;/SPAN>&lt;/FONT>&lt;/FONT>&lt;/STRONG>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>In short description of the translation process of Modelica models, the OMC takes the source code of a model and translates it through several transformations into an internal representation of simulation code. In the last phase, C code is generated, compiled and linked with a simulation runtime into the final executable file. The simulation of the model is done by running the executable.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>In the context of run time models, system architect invoke model in this way:&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-INDENT: -18pt; MARGIN: 0cm 0cm 0pt 36pt; mso-list: l0 level1 lfo1&quot; class=BodyMain>&lt;SPAN style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;SPAN style=&quot;mso-list: Ignore&quot;>&lt;FONT size=3>·&lt;/FONT>&lt;SPAN style=&quot;FONT: 7pt 'Times New Roman'&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;FONT size=3 face=Calibri>Model the functionality according to the requirement, present the models as Modelica Script;&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-INDENT: -18pt; MARGIN: 0cm 0cm 0pt 36pt; mso-list: l0 level1 lfo1&quot; class=BodyMain>&lt;SPAN style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;SPAN style=&quot;mso-list: Ignore&quot;>&lt;FONT size=3>·&lt;/FONT>&lt;SPAN style=&quot;FONT: 7pt 'Times New Roman'&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;FONT size=3 face=Calibri>See how these Modelica Script is compiled in Modelica compilers like OpenModelica, get the compiled results. Usually they are some C++ files; &lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-INDENT: -18pt; MARGIN: 0cm 0cm 0pt 36pt; mso-list: l0 level1 lfo1&quot; class=BodyMain>&lt;SPAN style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;SPAN style=&quot;mso-list: Ignore&quot;>&lt;FONT size=3>·&lt;/FONT>&lt;SPAN style=&quot;FONT: 7pt 'Times New Roman'&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;FONT size=3 face=Calibri>Use pre-compiled Java program units to invoke the executables C++ Modelica method for existing system through Java Native Interface.&lt;/FONT>&lt;/P></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-qsrslbLdbAUnTnhwyPZdFw" name="define_service_migration_model,_gXfH8FCtEeCQQoyAiE5Lcw" guid="-qsrslbLdbAUnTnhwyPZdFw">
    <refinedDescription>&lt;p>&#xD;
    The &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.architecture.model_driven_migration.base-sintef/workproducts/service_migration_model_5EA7017F.html&quot;&#xD;
     guid=&quot;_kbzucFCsEeCQQoyAiE5Lcw&quot;>Service migration model&lt;/a> describes the IT perspective of an SOA and contains the&#xD;
    spesifications of service interfaces, interfaces and message types, opperation behaviours, service orchestration and&#xD;
    software componenst. The &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.architecture.model_driven_migration.base-sintef/workproducts/service_migration_model_5EA7017F.html&quot;&#xD;
     guid=&quot;_kbzucFCsEeCQQoyAiE5Lcw&quot;>Service migration model&lt;/a>&amp;nbsp; is built in the two tasks &lt;em>define service&#xD;
    interfaces&lt;/em> and &lt;em>define operation behaviours&lt;/em>.&lt;br />&#xD;
    The model represents a so-called platform-independent model (PIM) according&amp;nbsp;to the MDA approach.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-xixakq-4kgSiwaWr2D9cMQ" name="define_service_interfaces,_hAGAEFCtEeCQQoyAiE5Lcw" guid="-xixakq-4kgSiwaWr2D9cMQ">
    <refinedDescription>&lt;p>&#xD;
    The main purpose of the service interface is to provide structural features, and to specify the interactions between&#xD;
    the software components of the service-oriented architecture.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-7_vlXbU-w8fiV-090i44Zg" name="define_operation_behaviours,_mQlCQFCtEeCQQoyAiE5Lcw" guid="-7_vlXbU-w8fiV-090i44Zg">
    <refinedDescription>In this task behavioural features are defined&amp;nbsp;and they have to comply with the service interfaces that are defined in&#xD;
the previous task. The behaviours is specified using UML activity models using the behaviour stereotypes defined in the UML&#xD;
profile.&amp;nbsp;</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-7kG8XWUn3JhoT0K_1Rzngg" name="generate_web_services,_ca4dkFCvEeCQQoyAiE5Lcw" guid="-7kG8XWUn3JhoT0K_1Rzngg">
    <refinedDescription>Generate Web services using model transformation to text that specifies mapping rules from migration models to source code,&#xD;
i.e. structural elements of the models is mapped to structural elements and behavioural elements such as actions are mapped&#xD;
to statements during code generation.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-PHXV2AybyjwVk9WQw6Dqzg" name="implement_business_logic,_fHGMMFCvEeCQQoyAiE5Lcw" guid="-PHXV2AybyjwVk9WQw6Dqzg">
    <refinedDescription>Write business logic that coresponds to the operational behavioural spesifications.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-JNlWSMvUpOkTB2VuJnuSoA" name="system_architect,_TrlbpFOjEeCEwfF5AiV8xA" guid="-JNlWSMvUpOkTB2VuJnuSoA">
    <refinedDescription>This worker is involved in the design of the components which compose the software system. This worker is involved in the&#xD;
design of the architecture of the system, with its components and their interfaces.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-ti3G2DtvLwGWtB4Xz6hxLQ" name="tester,_Trlbp1OjEeCEwfF5AiV8xA" guid="-ti3G2DtvLwGWtB4Xz6hxLQ">
    <refinedDescription>&lt;p> The person in this role is primarily responsible for the following&amp;nbsp;tasks: 
&lt;/p>
&lt;ul>
  &lt;li> Identifying the tests&amp;nbsp;that need to&amp;nbsp;be performed &lt;/li>
  &lt;li> Identifying the most appropriate implementation approach for a given test 
  &lt;/li>
  &lt;li> Implementing individual tests &lt;/li>
  &lt;li> Setting up and running the tests &lt;/li>
  &lt;li> Logging outcomes and verifying that the tests have been run &lt;/li>
  &lt;li> Analyzing and guiding the recovery from execution errors &lt;/li>
  &lt;li> Communicating test results to the team &lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-7CUk5zFwghV6o_OHhqoyUQ" name="service_migration_model,_TrlbqlOjEeCEwfF5AiV8xA" guid="-7CUk5zFwghV6o_OHhqoyUQ">
    <refinedDescription>&lt;p>&#xD;
    The service migration model describes the IT perspective of an SOA and contains the spesifications of service&#xD;
    interfaces, interfaces and message types, opperation behaviours, service orchestration and software componenst. The&#xD;
    service migration model is built in the two tasks &lt;em>define service interfaces&lt;/em> and &lt;em>define operation&#xD;
    behaviours&lt;/em>.&lt;br />&#xD;
    The model represents a so-called platform-independent model (PIM) according&amp;nbsp;to the MDA approach.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-eY6ttrH5HN2WKDMlKYSWVw" name="as_is_architecture_model,_TrvMpFOjEeCEwfF5AiV8xA" guid="-eY6ttrH5HN2WKDMlKYSWVw">
    <refinedDescription>&amp;lt;TBD&amp;gt;</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-k0RoZO9jHruxqmzphtxPKg" name="system_developer,_u_MhUVOkEeCEwfF5AiV8xA" guid="-k0RoZO9jHruxqmzphtxPKg">
    <refinedDescription>This worker is involved in the implementation of the business process, obtaining services needed to be part of the&#xD;
composition and developing the final script which can be executed by a specialized engine.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-A9-MrbfAUMlkDu-zC8a3Gg" name="architecture_notebook,_JiUl8aCtEeCoT4Im6BOo8w" guid="-A9-MrbfAUMlkDu-zC8a3Gg">
    <refinedDescription>&lt;p>
    This artifact&amp;nbsp;describes the &lt;a class=&quot;elementLink&quot; href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/software_architecture_59A08DE0.html&quot; guid=&quot;__O7tAMVvEduLYZUGfgZrkQ&quot;>Software Architecture&lt;/a>.
&lt;/p>
&lt;p> It provides a place for maintaining the list of architectural issues, along 
  with the associated architectural decisions, designs, patterns, code documented 
  (or pointed to), and so forth -- all at appropriate levels to make it easy to 
  understand what architectural decisions have been made and remain to be made. 
&lt;/p>
&lt;p> It is helpful for architects to use this artifact to collaborate with other 
  team members in developing the architecture and to help team members understand 
  the motivation behind architectural decisions so that those decisions can be 
  robustly implemented. For example, the architect may put constraints on how 
  data is packaged and communicated between different parts of the system. This 
  may appear to be a burden, but the justification in the Architecture Notebook 
  can explain that there is a significant performance bottleneck when communicating 
  with a legacy system. The rest of the system must adapt to this bottleneck by 
  following a specific data packaging scheme. &lt;/p>
&lt;p> This artifact should also inform the team members how the system is partitioned 
  or organized so that the team can adapt to the needs of the system. It also 
  gives a first glimpse of the system and its technical motivations to whoever 
  must maintain and change the architecture later.&lt;br />
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-5filnhBY3XwnQrg4SyYwaw" name="service_interface_and_component_model,_JiUl9KCtEeCoT4Im6BOo8w" guid="-5filnhBY3XwnQrg4SyYwaw">
    <refinedDescription>&lt;p>&#xD;
    A SoaML model aims to define the following:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Identifying services, the requirements they are intended to fulfill, and the anticipated dependencies between them.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Specifying services including the functional capabilities they provide, what capabilities consumers are expected to&#xD;
        provide, the protocols or rules for using them, and the service information exchanged between consumers and&#xD;
        providers.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defining service consumers and providers, what requisition and services they consume and provide, how they are&#xD;
        connected and how the service functional capabilities are used by consumers and implemented by providers in a&#xD;
        manner consistent with both the service specification protocols and fulfilled requirements.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The policies for using and providing services.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The ability to define classification schemes having aspects to support a broad range of architectural,&#xD;
        organizational and physical partitioning schemes and constraints.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Defining service and service usage requirements and linking them to related OMG metamodels, such as the BMM&#xD;
        course_of_action, BPDM Process, UPDM OperationalCapability and/or UML UseCase model elements they realize, support&#xD;
        or fulfill.&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-voziyb-TV_w1hEK5NO9fBw" name="behavior_diagram,_JiUl96CtEeCoT4Im6BOo8w" guid="-voziyb-TV_w1hEK5NO9fBw">
    <refinedDescription>&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>The following diagram is a BPMN example which show the details process of how Temperature Monitoring System get real time temperature and report feedback.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;?xml:namespace prefix = o ns = &quot;urn:schemas-microsoft-com:office:office&quot; />&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;PAGE-BREAK-AFTER: avoid; TEXT-ALIGN: center; MARGIN: 0cm 0cm 0pt&quot; class=BodyMain align=center>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>&lt;?xml:namespace prefix = v ns = &quot;urn:schemas-microsoft-com:vml&quot; />&lt;v:shapetype id=_x0000_t75 stroked=&quot;f&quot; filled=&quot;f&quot; path=&quot;m@4@5l@4@11@9@11@9@5xe&quot; o:preferrelative=&quot;t&quot; o:spt=&quot;75&quot; coordsize=&quot;21600,21600&quot;>&lt;v:stroke joinstyle=&quot;miter&quot;>&lt;/v:stroke>&lt;v:formulas>&lt;v:f eqn=&quot;if lineDrawn pixelLineWidth 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @0 1 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum 0 0 @1&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @2 1 2&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @3 21600 pixelWidth&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @3 21600 pixelHeight&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @0 0 1&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @6 1 2&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @7 21600 pixelWidth&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @8 21600 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @7 21600 pixelHeight&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @10 21600 0&quot;>&lt;/v:f>&lt;/v:formulas>&lt;v:path o:connecttype=&quot;rect&quot; gradientshapeok=&quot;t&quot; o:extrusionok=&quot;f&quot;>&lt;/v:path>&lt;o:lock aspectratio=&quot;t&quot; v:ext=&quot;edit&quot;>&lt;/o:lock>&lt;/v:shapetype>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-ALIGN: center; MARGIN: 0cm 0cm 10pt&quot; class=MsoCaption align=center>&lt;IMG alt=BPMN src=&quot;./../../practice.architecture.mathematical_systems_engineering.base-sintef/workproducts/resources/BPMN.png&quot; width=600 height=423>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-ALIGN: center; MARGIN: 0cm 0cm 10pt&quot; class=MsoCaption align=center>&lt;a name=&quot;_Toc238805376&quot;>&lt;STRONG>&lt;FONT color=#4f81bd face=Calibri>Figure &lt;/FONT>&lt;/STRONG>&lt;/a>&lt;STRONG>&lt;FONT color=#4f81bd>&lt;FONT face=Calibri>&lt;SPAN style=&quot;mso-bookmark: _Toc238805376&quot;>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>9&lt;/SPAN>&lt;/SPAN>&lt;SPAN style=&quot;mso-bookmark: _Toc238805376&quot;>. BPMN example for Real Time Temperature Report&lt;/SPAN>&lt;/FONT>&lt;/FONT>&lt;/STRONG>&lt;/P></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-W_1Of0Bi9G0sRoVgVRtOBQ" name="community_services_architecture,_JiUl-qCtEeCoT4Im6BOo8w" guid="-W_1Of0Bi9G0sRoVgVRtOBQ">
    <refinedDescription>&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>Because we use the top down approach solution, with the “community services architecture”, we can have the top level view of how participants work together for some purpose. The services architecture of a community does not assume or require any one controlling entity or process. Other services architectures and service contracts may be used here. A community Services Architecture is defined using a UML Collaboration.&lt;SPAN style=&quot;mso-spacerun: yes&quot;>&amp;nbsp; &lt;/SPAN>The purpose of collaboration is to illustrate how kinds of entities work together for some purpose. The services architecture serves to define the requirements of each of the participants. . The participant roles are filled by participants with service ports required of the entities that fill these roles and are then bound by the services architectures in which they participate.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;?xml:namespace prefix = o ns = &quot;urn:schemas-microsoft-com:office:office&quot; />&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>This is a service architecture diagram for Scientific Temperature Monitoring System. It shows the Service Orient Architecture design of how user uses the Temperature Monitoring System.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;IMG alt=&quot;SoaML Service Architecture&quot; src=&quot;./../../practice.architecture.mathematical_systems_engineering.base-sintef/workproducts/resources/SoaML Service Architecture.png&quot; width=600 height=365>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;PAGE-BREAK-AFTER: avoid; MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>&lt;?xml:namespace prefix = v ns = &quot;urn:schemas-microsoft-com:vml&quot; />&lt;v:shapetype id=_x0000_t75 stroked=&quot;f&quot; filled=&quot;f&quot; path=&quot;m@4@5l@4@11@9@11@9@5xe&quot; o:preferrelative=&quot;t&quot; o:spt=&quot;75&quot; coordsize=&quot;21600,21600&quot;>&lt;v:stroke joinstyle=&quot;miter&quot;>&lt;/v:stroke>&lt;v:formulas>&lt;v:f eqn=&quot;if lineDrawn pixelLineWidth 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @0 1 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum 0 0 @1&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @2 1 2&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @3 21600 pixelWidth&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @3 21600 pixelHeight&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @0 0 1&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @6 1 2&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @7 21600 pixelWidth&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @8 21600 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @7 21600 pixelHeight&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @10 21600 0&quot;>&lt;/v:f>&lt;/v:formulas>&lt;v:path o:connecttype=&quot;rect&quot; gradientshapeok=&quot;t&quot; o:extrusionok=&quot;f&quot;>&lt;/v:path>&lt;o:lock aspectratio=&quot;t&quot; v:ext=&quot;edit&quot;>&lt;/o:lock>&lt;/v:shapetype>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-ALIGN: center; MARGIN: 0cm 0cm 10pt&quot; class=MsoCaption align=center>&lt;a name=&quot;_Toc238805375&quot;>&lt;STRONG>&lt;FONT color=#4f81bd face=Calibri>Figure &lt;/FONT>&lt;/STRONG>&lt;/a>&lt;STRONG>&lt;FONT color=#4f81bd>&lt;FONT face=Calibri>&lt;SPAN style=&quot;mso-bookmark: _Toc238805375&quot;>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>8&lt;/SPAN>&lt;/SPAN>&lt;SPAN style=&quot;mso-bookmark: _Toc238805375&quot;>. Service Architecture example&lt;/SPAN>&lt;/FONT>&lt;/FONT>&lt;/STRONG>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>There are three service participants in this model: Operator, Administrator, and Temperature System. The three participants communicate with each other through different service collaboration services.&lt;/FONT>&lt;/P></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-UOgRtIq_aEzwxdfSJmaf_w" name="participant_services_architecture,_Jidv4aCtEeCoT4Im6BOo8w" guid="-UOgRtIq_aEzwxdfSJmaf_w">
    <refinedDescription>&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>An example of participant service architecture for “Temperature Monitor” is shown in the following diagram.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;?xml:namespace prefix = o ns = &quot;urn:schemas-microsoft-com:office:office&quot; />&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;PAGE-BREAK-AFTER: avoid; MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>&lt;?xml:namespace prefix = v ns = &quot;urn:schemas-microsoft-com:vml&quot; />&lt;v:shapetype id=_x0000_t75 stroked=&quot;f&quot; filled=&quot;f&quot; path=&quot;m@4@5l@4@11@9@11@9@5xe&quot; o:preferrelative=&quot;t&quot; o:spt=&quot;75&quot; coordsize=&quot;21600,21600&quot;>&lt;v:stroke joinstyle=&quot;miter&quot;>&lt;/v:stroke>&lt;v:formulas>&lt;v:f eqn=&quot;if lineDrawn pixelLineWidth 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @0 1 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum 0 0 @1&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @2 1 2&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @3 21600 pixelWidth&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @3 21600 pixelHeight&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @0 0 1&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @6 1 2&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @7 21600 pixelWidth&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @8 21600 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @7 21600 pixelHeight&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @10 21600 0&quot;>&lt;/v:f>&lt;/v:formulas>&lt;v:path o:connecttype=&quot;rect&quot; gradientshapeok=&quot;t&quot; o:extrusionok=&quot;f&quot;>&lt;/v:path>&lt;o:lock aspectratio=&quot;t&quot; v:ext=&quot;edit&quot;>&lt;/o:lock>&lt;/v:shapetype>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-ALIGN: center; MARGIN: 0cm 0cm 10pt&quot; class=MsoCaption align=center>&lt;IMG alt=&quot;Participant Services Architecture&quot; src=&quot;./../../practice.architecture.mathematical_systems_engineering.base-sintef/workproducts/resources/Participant Services Architecture.png&quot; width=537 height=277>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-ALIGN: center; MARGIN: 0cm 0cm 10pt&quot; class=MsoCaption align=center>&lt;a name=&quot;_Toc238805377&quot;>&lt;STRONG>&lt;FONT color=#4f81bd face=Calibri>Figure &lt;/FONT>&lt;/STRONG>&lt;/a>&lt;STRONG>&lt;FONT color=#4f81bd>&lt;FONT face=Calibri>&lt;SPAN style=&quot;mso-bookmark: _Toc238805377&quot;>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>10&lt;/SPAN>&lt;/SPAN>&lt;SPAN style=&quot;mso-bookmark: _Toc238805377&quot;>. Participant services architecture Example&lt;/SPAN>&lt;/FONT>&lt;/FONT>&lt;/STRONG>&lt;/P></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-_SCDhzpam0lIInfOZMalww" name="requirement_diagram_and_use_case_diagram,_Jidv5KCtEeCoT4Im6BOo8w" guid="-_SCDhzpam0lIInfOZMalww">
    <refinedDescription>&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>The following diagram is a requirement diagram of Temperature Monitoring Scientific software.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>&lt;/FONT>&amp;nbsp;&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>&lt;IMG alt=&quot;Requirement Diagram&quot; src=&quot;./../../practice.architecture.mathematical_systems_engineering.base-sintef/workproducts/./resources/Requirement Diagram.png&quot; width=588 height=290>&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-ALIGN: center; MARGIN: 0cm 0cm 0pt&quot; class=BodyMain align=center>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>&lt;?xml:namespace prefix = v ns = &quot;urn:schemas-microsoft-com:vml&quot; />&lt;v:shapetype id=_x0000_t75 coordsize=&quot;21600,21600&quot; o:spt=&quot;75&quot; o:preferrelative=&quot;t&quot; path=&quot;m@4@5l@4@11@9@11@9@5xe&quot; filled=&quot;f&quot; stroked=&quot;f&quot;>&lt;v:stroke joinstyle=&quot;miter&quot;>&lt;/v:stroke>&lt;v:formulas>&lt;v:f eqn=&quot;if lineDrawn pixelLineWidth 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @0 1 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum 0 0 @1&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @2 1 2&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @3 21600 pixelWidth&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @3 21600 pixelHeight&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @0 0 1&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @6 1 2&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @7 21600 pixelWidth&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @8 21600 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @7 21600 pixelHeight&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @10 21600 0&quot;>&lt;/v:f>&lt;/v:formulas>&lt;v:path o:extrusionok=&quot;f&quot; gradientshapeok=&quot;t&quot; o:connecttype=&quot;rect&quot;>&lt;/v:path>&lt;?xml:namespace prefix = o ns = &quot;urn:schemas-microsoft-com:office:office&quot; />&lt;o:lock v:ext=&quot;edit&quot; aspectratio=&quot;t&quot;>&lt;/o:lock>&lt;/v:shapetype>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-ALIGN: center; MARGIN: 0cm 0cm 10pt&quot; class=MsoCaption align=center>&lt;a name=&quot;_Toc238805373&quot;>&lt;STRONG>&lt;FONT color=#4f81bd face=Calibri>Figure &lt;/FONT>&lt;/STRONG>&lt;/a>&lt;STRONG>&lt;FONT color=#4f81bd>&lt;FONT face=Calibri>&lt;SPAN style=&quot;mso-bookmark: _Toc238805373&quot;>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>6&lt;/SPAN>&lt;/SPAN>&lt;SPAN style=&quot;mso-bookmark: _Toc238805373&quot;>. MOSiSaS Methodology Requirement Diagram&lt;/SPAN>&lt;/FONT>&lt;/FONT>&lt;/STRONG>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>This requirement diagram presents the requirements from two aspects: Functionality and Operating Environment. There are also some sub requirements in each specific aspect.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3>&lt;FONT face=Calibri>The requirement diagram includes all the requirements while use case diagram presents the functional requirements. Use case is considered as a mechanism to capture the functional system requirement.&lt;SPAN style=&quot;mso-spacerun: yes&quot;>&amp;nbsp; &lt;/SPAN>&lt;/FONT>&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>The following diagram is a use case diagram shows the functional requirement in the scientific temperature monitoring system:&lt;/FONT>&lt;SPAN style=&quot;BORDER-BOTTOM: black 1pt; BORDER-LEFT: black 1pt; PADDING-BOTTOM: 0cm; PADDING-LEFT: 0cm; LAYOUT-GRID-MODE: line; PADDING-RIGHT: 0cm; FONT-FAMILY: 'Times New Roman','serif'; BACKGROUND: black; COLOR: black; FONT-SIZE: 0pt; BORDER-TOP: black 1pt; BORDER-RIGHT: black 1pt; PADDING-TOP: 0cm; mso-fareast-font-family: 'Times New Roman'; mso-border-alt: none black 0cm; mso-font-width: 0%&quot;> &lt;/SPAN>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-ALIGN: center; MARGIN: 0cm 0cm 10pt&quot; class=MsoCaption align=center>&lt;STRONG>&lt;FONT color=#4f81bd>&lt;FONT face=Calibri>&lt;SPAN style=&quot;mso-bookmark: _Toc238805374&quot;>&lt;/SPAN>&lt;/FONT>&lt;/FONT>&lt;/STRONG>&amp;nbsp;&lt;/P>&#xD;
&lt;P style=&quot;TEXT-ALIGN: center; MARGIN: 0cm 0cm 10pt&quot; class=MsoCaption align=center>&lt;STRONG>&lt;FONT color=#4f81bd>&lt;FONT face=Calibri>&lt;SPAN style=&quot;mso-bookmark: _Toc238805374&quot;>&lt;IMG alt=&quot;Use Case&quot; src=&quot;./../../practice.architecture.mathematical_systems_engineering.base-sintef/workproducts/./resources/Use Case.png&quot; width=600 height=420>&lt;/SPAN>&lt;/FONT>&lt;/FONT>&lt;/STRONG>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-ALIGN: center; MARGIN: 0cm 0cm 10pt&quot; class=MsoCaption align=center>&lt;STRONG>&lt;FONT color=#4f81bd>&lt;FONT face=Calibri>&lt;SPAN style=&quot;mso-bookmark: _Toc238805374&quot;>&lt;a name=&quot;_Toc238805374&quot;>&lt;STRONG>&lt;FONT color=#4f81bd face=Calibri>Figure &lt;/FONT>&lt;/STRONG>&lt;/a>&lt;STRONG>&lt;FONT color=#4f81bd>&lt;FONT face=Calibri>&lt;SPAN style=&quot;mso-bookmark: _Toc238805374&quot;>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>7&lt;/SPAN>&lt;/SPAN>&lt;SPAN style=&quot;mso-bookmark: _Toc238805374&quot;>. Use Case example&lt;/SPAN>&lt;/FONT>&lt;/FONT>&lt;/STRONG>&lt;/SPAN>&lt;/FONT>&lt;/FONT>&lt;/STRONG>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>The system actors, such as Administrator and Operator, have different use cases, which stand for the functional requirements from different actors. The relationship between Use Cases could be include or extend.&lt;/FONT>&lt;/P></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-vNh3ke753BX2PtEmzD3yYQ" name="logical_architecture,_Jidv56CtEeCoT4Im6BOo8w" guid="-vNh3ke753BX2PtEmzD3yYQ">
    <refinedDescription>&amp;lt;TBD&amp;gt;</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-fdEvLw92ZJAMGe6Er2nSLQ" name="matlab_or_modelica_mathematical_model,_Jidv6qCtEeCoT4Im6BOo8w" guid="-fdEvLw92ZJAMGe6Er2nSLQ">
    <refinedDescription>&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>Here we use Temperature Constrains as an example to show how to use Modelica Language. &lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;?xml:namespace prefix = o ns = &quot;urn:schemas-microsoft-com:office:office&quot; />&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>The temperature checking algorithm Modelica script:&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;SPAN style=&quot;COLOR: #0070c0; FONT-SIZE: 11pt&quot;>&lt;FONT face=Calibri>function temperatureConstrains&lt;o:p>&lt;/o:p>&lt;/FONT>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;SPAN style=&quot;COLOR: #0070c0; FONT-SIZE: 11pt&quot;>&lt;FONT face=Calibri>&lt;SPAN style=&quot;mso-tab-count: 1&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>input&lt;SPAN style=&quot;mso-tab-count: 1&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>Real temperature;&lt;o:p>&lt;/o:p>&lt;/FONT>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;SPAN style=&quot;COLOR: #0070c0; FONT-SIZE: 11pt&quot;>&lt;FONT face=Calibri>&lt;SPAN style=&quot;mso-tab-count: 1&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>output&lt;SPAN style=&quot;mso-tab-count: 1&quot;>&amp;nbsp; &lt;/SPAN>String feedback;&lt;o:p>&lt;/o:p>&lt;/FONT>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;SPAN style=&quot;COLOR: #0070c0; FONT-SIZE: 11pt&quot;>&lt;FONT face=Calibri>protected&lt;o:p>&lt;/o:p>&lt;/FONT>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;SPAN style=&quot;COLOR: #0070c0; FONT-SIZE: 11pt&quot;>&lt;FONT face=Calibri>&lt;SPAN style=&quot;mso-tab-count: 1&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>constant Real max = 2000;&lt;o:p>&lt;/o:p>&lt;/FONT>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;SPAN style=&quot;COLOR: #0070c0; FONT-SIZE: 11pt&quot;>&lt;FONT face=Calibri>&lt;SPAN style=&quot;mso-tab-count: 1&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>constant Real min = -200;&lt;o:p>&lt;/o:p>&lt;/FONT>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;SPAN style=&quot;COLOR: #0070c0; FONT-SIZE: 11pt&quot;>&lt;o:p>&lt;FONT face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;SPAN style=&quot;COLOR: #0070c0; FONT-SIZE: 11pt&quot;>&lt;FONT face=Calibri>algorithm&lt;o:p>&lt;/o:p>&lt;/FONT>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;SPAN style=&quot;COLOR: #0070c0; FONT-SIZE: 11pt&quot;>&lt;FONT face=Calibri>&lt;SPAN style=&quot;mso-tab-count: 1&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>if temperature &amp;gt; max then&lt;o:p>&lt;/o:p>&lt;/FONT>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;SPAN style=&quot;COLOR: #0070c0; FONT-SIZE: 11pt&quot;>&lt;FONT face=Calibri>&lt;SPAN style=&quot;mso-tab-count: 2&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>feedback := &quot;Dangerous! Temperature too high.&quot;;&lt;o:p>&lt;/o:p>&lt;/FONT>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;SPAN style=&quot;COLOR: #0070c0; FONT-SIZE: 11pt&quot;>&lt;FONT face=Calibri>&lt;SPAN style=&quot;mso-tab-count: 1&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>elseif temperature &amp;lt; min then&lt;o:p>&lt;/o:p>&lt;/FONT>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;SPAN style=&quot;COLOR: #0070c0; FONT-SIZE: 11pt&quot;>&lt;FONT face=Calibri>&lt;SPAN style=&quot;mso-tab-count: 2&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>feedback := &quot;Dangerous! Temperature too low.&quot;;&lt;o:p>&lt;/o:p>&lt;/FONT>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;SPAN style=&quot;COLOR: #0070c0; FONT-SIZE: 11pt&quot;>&lt;FONT face=Calibri>&lt;SPAN style=&quot;mso-tab-count: 1&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>else &lt;o:p>&lt;/o:p>&lt;/FONT>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;SPAN style=&quot;COLOR: #0070c0; FONT-SIZE: 11pt&quot;>&lt;FONT face=Calibri>&lt;SPAN style=&quot;mso-tab-count: 2&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>feedback := &quot;Temperature is in secure range&quot;;&lt;o:p>&lt;/o:p>&lt;/FONT>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;SPAN style=&quot;COLOR: #0070c0; FONT-SIZE: 11pt&quot;>&lt;FONT face=Calibri>&lt;SPAN style=&quot;mso-tab-count: 1&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>end if;&lt;o:p>&lt;/o:p>&lt;/FONT>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;SPAN style=&quot;COLOR: #0070c0; FONT-SIZE: 11pt&quot;>&lt;o:p>&lt;FONT face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;SPAN style=&quot;COLOR: #0070c0; FONT-SIZE: 11pt&quot;>&lt;FONT face=Calibri>end temperatureConstrains;&lt;o:p>&lt;/o:p>&lt;/FONT>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>If we input the temperature like 500, the algorithm should give output like “Temperature is in secure range”.&lt;/FONT>&lt;/P></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-X5j3Olmx7g_u5U6N0S5RdQ" name="service_specification,_Jidv7aCtEeCoT4Im6BOo8w" guid="-X5j3Olmx7g_u5U6N0S5RdQ">
    <refinedDescription>&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>The following model is service specification diagram. It shows how Temperature Monitor provides service to and receives service from other participants. &lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;?xml:namespace prefix = o ns = &quot;urn:schemas-microsoft-com:office:office&quot; />&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;PAGE-BREAK-AFTER: avoid; TEXT-ALIGN: center; MARGIN: 0cm 0cm 0pt&quot; class=BodyMain align=center>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>&lt;?xml:namespace prefix = v ns = &quot;urn:schemas-microsoft-com:vml&quot; />&lt;v:shapetype id=_x0000_t75 stroked=&quot;f&quot; filled=&quot;f&quot; path=&quot;m@4@5l@4@11@9@11@9@5xe&quot; o:preferrelative=&quot;t&quot; o:spt=&quot;75&quot; coordsize=&quot;21600,21600&quot;>&lt;v:stroke joinstyle=&quot;miter&quot;>&lt;/v:stroke>&lt;v:formulas>&lt;v:f eqn=&quot;if lineDrawn pixelLineWidth 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @0 1 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum 0 0 @1&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @2 1 2&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @3 21600 pixelWidth&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @3 21600 pixelHeight&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @0 0 1&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @6 1 2&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @7 21600 pixelWidth&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @8 21600 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @7 21600 pixelHeight&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @10 21600 0&quot;>&lt;/v:f>&lt;/v:formulas>&lt;v:path o:connecttype=&quot;rect&quot; gradientshapeok=&quot;t&quot; o:extrusionok=&quot;f&quot;>&lt;/v:path>&lt;o:lock aspectratio=&quot;t&quot; v:ext=&quot;edit&quot;>&lt;/o:lock>&lt;/v:shapetype>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-ALIGN: center; MARGIN: 0cm 0cm 10pt&quot; class=MsoCaption align=center>&lt;IMG alt=&quot;Service Specfication Example&quot; src=&quot;./../../practice.architecture.mathematical_systems_engineering.base-sintef/workproducts/resources/Service Specfication Example.png&quot; width=360 height=326>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-ALIGN: center; MARGIN: 0cm 0cm 10pt&quot; class=MsoCaption align=center>&lt;a name=&quot;_Toc238805379&quot;>&lt;STRONG>&lt;FONT color=#4f81bd face=Calibri>Figure &lt;/FONT>&lt;/STRONG>&lt;/a>&lt;STRONG>&lt;FONT color=#4f81bd>&lt;FONT face=Calibri>&lt;SPAN style=&quot;mso-bookmark: _Toc238805379&quot;>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>12&lt;/SPAN>&lt;/SPAN>&lt;SPAN style=&quot;mso-bookmark: _Toc238805379&quot;>. Service Specification Example&lt;/SPAN>&lt;/FONT>&lt;/FONT>&lt;/STRONG>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>From this model we can see there are two service interfaces for the service provider Temperature Monitor. The required interface “DataReceiverInterface” provides two functions, which allows user to receive and filter temperature data. &lt;SPAN style=&quot;mso-spacerun: yes&quot;>&amp;nbsp;&lt;/SPAN>The provided interface “DataAnalyserInterface” provides two functions, which can check temperature and send the feedback to operators.&lt;/FONT>&lt;/P></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Y1qNqyrSv-49CsnFSh7_lg" name="structure_diagram,_Jidv8KCtEeCoT4Im6BOo8w" guid="-Y1qNqyrSv-49CsnFSh7_lg">
    <refinedDescription>&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>The following diagram is a block model for Temperature Monitor. &lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;?xml:namespace prefix = o ns = &quot;urn:schemas-microsoft-com:office:office&quot; />&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;o:p>&lt;IMG alt=&quot;Block diagram example&quot; src=&quot;./../../practice.architecture.mathematical_systems_engineering.base-sintef/workproducts/resources/Block.png&quot; width=545 height=270>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;PAGE-BREAK-AFTER: avoid; MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>&lt;?xml:namespace prefix = v ns = &quot;urn:schemas-microsoft-com:vml&quot; />&lt;v:shapetype id=_x0000_t75 stroked=&quot;f&quot; filled=&quot;f&quot; path=&quot;m@4@5l@4@11@9@11@9@5xe&quot; o:preferrelative=&quot;t&quot; o:spt=&quot;75&quot; coordsize=&quot;21600,21600&quot;>&lt;v:stroke joinstyle=&quot;miter&quot;>&lt;/v:stroke>&lt;v:formulas>&lt;v:f eqn=&quot;if lineDrawn pixelLineWidth 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @0 1 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum 0 0 @1&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @2 1 2&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @3 21600 pixelWidth&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @3 21600 pixelHeight&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @0 0 1&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @6 1 2&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @7 21600 pixelWidth&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @8 21600 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @7 21600 pixelHeight&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @10 21600 0&quot;>&lt;/v:f>&lt;/v:formulas>&lt;v:path o:connecttype=&quot;rect&quot; gradientshapeok=&quot;t&quot; o:extrusionok=&quot;f&quot;>&lt;/v:path>&lt;o:lock aspectratio=&quot;t&quot; v:ext=&quot;edit&quot;>&lt;/o:lock>&lt;/v:shapetype>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-ALIGN: center; MARGIN: 0cm 0cm 10pt&quot; class=MsoCaption align=center>&lt;a name=&quot;_Toc238805378&quot;>&lt;STRONG>&lt;FONT color=#4f81bd face=Calibri>Figure &lt;/FONT>&lt;/STRONG>&lt;/a>&lt;STRONG>&lt;FONT color=#4f81bd>&lt;FONT face=Calibri>&lt;SPAN style=&quot;mso-bookmark: _Toc238805378&quot;>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>11&lt;/SPAN>&lt;/SPAN>&lt;SPAN style=&quot;mso-bookmark: _Toc238805378&quot;>. Block diagram example&lt;/SPAN>&lt;/FONT>&lt;/FONT>&lt;/STRONG>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>We can see there are two internal blocks inside Temperature Monitor, and they are Data Receiver and Temperature Analyzer. The “Data Receiver” gets the real time temperature data and filters the useless data.&lt;SPAN style=&quot;mso-spacerun: yes&quot;>&amp;nbsp; &lt;/SPAN>Then the temperature data is passed to Block “Temperature Analyzer” gets the data and checks whether the data is in safe range. According to the checked result, the feedback result is sent to operator.&lt;/FONT>&lt;/P></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-jR09JZbBcytR1YYYzTELuw" name="build,_Ji6b0aCtEeCoT4Im6BOo8w" guid="-jR09JZbBcytR1YYYzTELuw">
    <refinedDescription>&lt;p>
    This working version of the system or part of the system&amp;nbsp;is the result of putting the implementation through a
    build process (typically an automated build script) that creates an executable version, or one that runs. This
    executable version will typically have a number of supporting files that are also considered part of this artifact.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-gWPo1mtzlQDVTUPpic8kHw" name="developer_test,_Ji6b1KCtEeCoT4Im6BOo8w" guid="-gWPo1mtzlQDVTUPpic8kHw">
    <refinedDescription>&lt;p>
    This artifact covers all of the steps to validate a specific aspect of an implementation element. For example, a test
    could ensure that the parameters of a method properly accept the uppermost and lowermost required values. A developer
    test specifies test entries, execution conditions, and expected results. These details are identified to evaluate a
    particular aspect of a scenario.
&lt;/p>
&lt;p>
    When you collect developer tests for a specific implementation element, you can validate that the element performs as
    specified.
&lt;/p>
&lt;p>
    The tests be self-documenting so that it is clear upon completion of the test whether the implementation element has
    run correctly.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Cbw7AnQJ6LmGpOfgGeD2xw" name="implementation,_Ji6b16CtEeCoT4Im6BOo8w" guid="-Cbw7AnQJ6LmGpOfgGeD2xw">
    <refinedDescription>&lt;p> 
   This artifact is the collection of one or more of these elements: &lt;/p> &lt;ul>
&lt;li>         Source code files     &lt;/li>
&lt;li>         Data files     &lt;/li>
&lt;li>         Build scripts     &lt;/li>
&lt;li>         Other files that are transformed into the executable system 
   &lt;/li>
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-ejNkTjOTci31utsS2wE0Og" name="design,_Ji6b2qCtEeCoT4Im6BOo8w" guid="-ejNkTjOTci31utsS2wE0Og">
    <refinedDescription>&lt;p>
    This product can describe multiple static and dynamic views of the system for examination. Although various views may
    focus on divergent, seemingly independent issues of how the system will be put together and work, they should fit
    together without contradiction.
&lt;/p>
&lt;p>
    It describes the elements that will make up the implemented system. It communicates abstractions of particular portions
    of the implementation and can describe an&amp;nbsp;encapsulated subsystem, a high-level analysis of the system, a view of
    the system in only one context, or other perspectives that explain a solution to a specific problem that needs to be
    communicated.
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-t5ACXuco8vu_rJnQDS5-Yw" name="matlab_as_service,_Ji6b3aCtEeCoT4Im6BOo8w" guid="-t5ACXuco8vu_rJnQDS5-Yw">
    <refinedDescription>&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>The usage of Providing MATLAB as a Service here will mainly satisfy the requirements from “Mathematic Modeling” and “Service Modeling“aspects.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;?xml:namespace prefix = o ns = &quot;urn:schemas-microsoft-com:office:office&quot; />&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>According to the introduction from MathWorks, there are three ways to deploy MATLAB as a web service currently&lt;?xml:namespace prefix = w ns = &quot;urn:schemas-microsoft-com:office:word&quot; />&lt;w:Sdt id=6082354 Citation=&quot;t&quot;>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>&lt;SPAN style=&quot;mso-spacerun: yes&quot;>&amp;nbsp;&lt;/SPAN>&lt;/SPAN>&lt;/w:Sdt>.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-INDENT: -18pt; MARGIN: 0cm 0cm 0pt 36pt; mso-list: l0 level1 lfo1&quot; class=BodyMain>&lt;SPAN style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;SPAN style=&quot;mso-list: Ignore&quot;>&lt;FONT size=3>·&lt;/FONT>&lt;SPAN style=&quot;FONT: 7pt 'Times New Roman'&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;FONT size=3 face=Calibri>Use MATLAB Builder NE to create a server-side .NET component;&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-INDENT: -18pt; MARGIN: 0cm 0cm 0pt 36pt; mso-list: l0 level1 lfo1&quot; class=BodyMain>&lt;SPAN style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;SPAN style=&quot;mso-list: Ignore&quot;>&lt;FONT size=3>·&lt;/FONT>&lt;SPAN style=&quot;FONT: 7pt 'Times New Roman'&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;FONT size=3 face=Calibri>Use MATLAB Builder JA to create a server-side Java component;&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-INDENT: -18pt; MARGIN: 0cm 0cm 0pt 36pt; mso-list: l0 level1 lfo1&quot; class=BodyMain>&lt;SPAN style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;SPAN style=&quot;mso-list: Ignore&quot;>&lt;FONT size=3>·&lt;/FONT>&lt;SPAN style=&quot;FONT: 7pt 'Times New Roman'&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;FONT size=3 face=Calibri>Use COM automation, CGI, or other technologies to access MATLAB through web.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=MsoNoSpacing>&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>With MATLAB Builder NE or JA, user can integrate MATLAB application with .NET and COM components, or Java program, and then deployed this application as web service. A .NET, or COM, or Java wrapper is used here to invoke the encrypted MATLAB functions. This wrapper runs against the MATLAB Compiler Runtime (MCR) and can share the MATLAB libraries. The MATLAB function is invoked as Java method or methods of any other COM or .NET class. &lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>MathWorks gives a mechanism to provide the MATLAB function into a deployable, portable, robust, scalable Web application, which we could see from the diagram below.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;PAGE-BREAK-AFTER: avoid; MARGIN: 0cm 0cm 0pt&quot; class=MsoNoSpacing>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>&lt;?xml:namespace prefix = v ns = &quot;urn:schemas-microsoft-com:vml&quot; />&lt;v:shapetype id=_x0000_t75 stroked=&quot;f&quot; filled=&quot;f&quot; path=&quot;m@4@5l@4@11@9@11@9@5xe&quot; o:preferrelative=&quot;t&quot; o:spt=&quot;75&quot; coordsize=&quot;21600,21600&quot;>&lt;v:stroke joinstyle=&quot;miter&quot;>&lt;/v:stroke>&lt;v:formulas>&lt;v:f eqn=&quot;if lineDrawn pixelLineWidth 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @0 1 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum 0 0 @1&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @2 1 2&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @3 21600 pixelWidth&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @3 21600 pixelHeight&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @0 0 1&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @6 1 2&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @7 21600 pixelWidth&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @8 21600 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @7 21600 pixelHeight&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @10 21600 0&quot;>&lt;/v:f>&lt;/v:formulas>&lt;v:path o:connecttype=&quot;rect&quot; gradientshapeok=&quot;t&quot; o:extrusionok=&quot;f&quot;>&lt;/v:path>&lt;o:lock aspectratio=&quot;t&quot; v:ext=&quot;edit&quot;>&lt;/o:lock>&lt;/v:shapetype>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-ALIGN: center; MARGIN: 0cm 0cm 10pt&quot; class=MsoCaption align=center>&lt;IMG alt=&quot;&quot; src=&quot;./../../practice.platform.matlab_modelica_development.base-sintef/workproducts/resources/MTALAB.bmp&quot; width=580 height=532>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-ALIGN: center; MARGIN: 0cm 0cm 10pt&quot; class=MsoCaption align=center>&lt;a name=&quot;_Toc238805380&quot;>&lt;STRONG>&lt;FONT color=#4f81bd face=Calibri>Figure &lt;/FONT>&lt;/STRONG>&lt;/a>&lt;STRONG>&lt;FONT color=#4f81bd>&lt;FONT face=Calibri>&lt;SPAN style=&quot;mso-bookmark: _Toc238805380&quot;>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>13&lt;/SPAN>&lt;/SPAN>&lt;SPAN style=&quot;mso-bookmark: _Toc238805380&quot;>. Architecture of Proving MATLAB as a Service&lt;/SPAN>&lt;/FONT>&lt;/FONT>&lt;/STRONG>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>For builder NE, users can integrate a MATLAB based .NET or COM component into an existing .NET or COM application by installing both the component and the MCR on the target machine. For Web applications, the builder also provides a .NET custom control that allows zoom, pan, and rotate functionality for figures created in MATLAB. Users can also use the custom control from the toolbox in Visual Studio. With the builder support for the .NET remoting API, users can also run their class as a persistent service or spread their processing across multiple processes. &lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>For builder JA, MATLAB allows users to present the MATLAB calculation or simulation results into servlets or Java Server Page. Users can integrate a MATLAB based Java class into an existing Java infrastructure by installing the class and the MCR on the target machine. For Web applications that use JSP technology or servlets, the builder provides AJAX-based zoom, pan, and rotate controls for figures created in MATLAB. Using the builder's Remote Method Invocation (RMI) interface, users can also run their class as a persistent service, or spread their processing across multiple processes. Java classes created with the builder can be distributed at no additional charge.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>A typical example of providing MATLAB as web service is shown in the website of MATLAB, which we could see in the following table. This example allows users to input parameters from web browser, then the parameter will be passed to MATLAB service and return the simulation result, the result will be present in client web browser.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=MsoNoSpacing>&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;PAGE-BREAK-AFTER: avoid; MARGIN: 0cm 0cm 0pt&quot; class=MsoNoSpacing>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-ALIGN: center; MARGIN: 0cm 0cm 10pt&quot; class=MsoCaption align=center>&lt;IMG alt=&quot;&quot; src=&quot;./../../practice.platform.matlab_modelica_development.base-sintef/workproducts/resources/MATLAB2.bmp&quot; width=580 height=488>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-ALIGN: center; MARGIN: 0cm 0cm 10pt&quot; class=MsoCaption align=center>&lt;a name=&quot;_Toc238805381&quot;>&lt;STRONG>&lt;FONT color=#4f81bd face=Calibri>Figure &lt;/FONT>&lt;/STRONG>&lt;/a>&lt;STRONG>&lt;FONT color=#4f81bd>&lt;FONT face=Calibri>&lt;SPAN style=&quot;mso-bookmark: _Toc238805381&quot;>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>14&lt;/SPAN>&lt;/SPAN>&lt;SPAN style=&quot;mso-bookmark: _Toc238805381&quot;>. Calculation Results from MATLAB Web Service&lt;/SPAN>&lt;/FONT>&lt;/FONT>&lt;/STRONG>&lt;/P></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-rc3MC14guIwf_ZQ9tZFT0w" name="modelica_design_time_model,_JjEM0aCtEeCoT4Im6BOo8w" guid="-rc3MC14guIwf_ZQ9tZFT0w">
    <refinedDescription>&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>The Designing Time Model is the way that the Modelica Complier is integrated with the target system as a server. As a result, the client application can compile the Modelica Model and do simulation dynamically.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;?xml:namespace prefix = o ns = &quot;urn:schemas-microsoft-com:office:office&quot; />&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>In the context of design time models, we would like to integrate the Modelica Server to our development process. We will have a model-based software development environment which allows interacting between Java program and Modelica Server dynamically. The OpenModelica API would be used here to integrate the Modelica Server with existing Java program. Domain concepts in Eclipse Ecore can also be used as a basis for automatically creating models (classes) in Modelica. The ideal Modelica invoke process would like:&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-INDENT: -18pt; MARGIN: 0cm 0cm 0pt 36pt; mso-list: l0 level1 lfo1&quot; class=BodyMain>&lt;SPAN style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;SPAN style=&quot;mso-list: Ignore&quot;>&lt;FONT size=3>·&lt;/FONT>&lt;SPAN style=&quot;FONT: 7pt 'Times New Roman'&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;FONT size=3 face=Calibri>The users can create the models in client side of target system;&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-INDENT: -18pt; MARGIN: 0cm 0cm 0pt 36pt; mso-list: l0 level1 lfo1&quot; class=BodyMain>&lt;SPAN style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;SPAN style=&quot;mso-list: Ignore&quot;>&lt;FONT size=3>·&lt;/FONT>&lt;SPAN style=&quot;FONT: 7pt 'Times New Roman'&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;FONT size=3 face=Calibri>The users send the models as required parameters to web server;&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-INDENT: -18pt; MARGIN: 0cm 0cm 0pt 36pt; mso-list: l0 level1 lfo1&quot; class=BodyMain>&lt;SPAN style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;SPAN style=&quot;mso-list: Ignore&quot;>&lt;FONT size=3>·&lt;/FONT>&lt;SPAN style=&quot;FONT: 7pt 'Times New Roman'&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;FONT size=3 face=Calibri>The web server interacts with Modelica Server and gets the calculated results or simulations;&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-INDENT: -18pt; MARGIN: 0cm 0cm 0pt 36pt; mso-list: l0 level1 lfo1&quot; class=BodyMain>&lt;SPAN style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;SPAN style=&quot;mso-list: Ignore&quot;>&lt;FONT size=3>·&lt;/FONT>&lt;SPAN style=&quot;FONT: 7pt 'Times New Roman'&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;FONT size=3 face=Calibri>The calculated results or simulations are sent to client side dynamically;&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 10pt&quot; class=MsoNormal>&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>The following is an architecture diagram we design for Modelica Web Service.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;PAGE-BREAK-AFTER: avoid; TEXT-ALIGN: center; MARGIN: 0cm 0cm 0pt&quot; class=MsoNoSpacing align=center>&lt;SPAN style=&quot;FONT-SIZE: 12pt; mso-no-proof: yes&quot;>&lt;?xml:namespace prefix = v ns = &quot;urn:schemas-microsoft-com:vml&quot; />&lt;v:shapetype id=_x0000_t75 stroked=&quot;f&quot; filled=&quot;f&quot; path=&quot;m@4@5l@4@11@9@11@9@5xe&quot; o:preferrelative=&quot;t&quot; o:spt=&quot;75&quot; coordsize=&quot;21600,21600&quot;>&lt;v:stroke joinstyle=&quot;miter&quot;>&lt;/v:stroke>&lt;v:formulas>&lt;v:f eqn=&quot;if lineDrawn pixelLineWidth 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @0 1 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum 0 0 @1&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @2 1 2&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @3 21600 pixelWidth&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @3 21600 pixelHeight&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @0 0 1&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @6 1 2&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @7 21600 pixelWidth&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @8 21600 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @7 21600 pixelHeight&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @10 21600 0&quot;>&lt;/v:f>&lt;/v:formulas>&lt;v:path o:connecttype=&quot;rect&quot; gradientshapeok=&quot;t&quot; o:extrusionok=&quot;f&quot;>&lt;/v:path>&lt;o:lock aspectratio=&quot;t&quot; v:ext=&quot;edit&quot;>&lt;/o:lock>&lt;/v:shapetype>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-ALIGN: center; MARGIN: 0cm 0cm 10pt&quot; class=MsoCaption align=center>&lt;IMG alt=&quot;&quot; src=&quot;./../../practice.platform.matlab_modelica_development.base-sintef/workproducts/resources/untitled.bmp&quot; width=532 height=492>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-ALIGN: center; MARGIN: 0cm 0cm 10pt&quot; class=MsoCaption align=center>&lt;a name=&quot;_Toc238805383&quot;>&lt;STRONG>&lt;FONT color=#4f81bd face=Calibri>Figure &lt;/FONT>&lt;/STRONG>&lt;/a>&lt;STRONG>&lt;FONT color=#4f81bd>&lt;FONT face=Calibri>&lt;SPAN style=&quot;mso-bookmark: _Toc238805383&quot;>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>16&lt;/SPAN>&lt;/SPAN>&lt;SPAN style=&quot;mso-bookmark: _Toc238805383&quot;>. Modelica Web Service Architecture&lt;/SPAN>&lt;/FONT>&lt;/FONT>&lt;/STRONG>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=MsoNoSpacing>&lt;SPAN style=&quot;FONT-SIZE: 12pt&quot;>&lt;o:p>&lt;FONT face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>Run time models integration is a simple way of invoking Modelica model and it just support the Modelica functionalities in run time. However, the final target of the methodology is to provide a web service mechanism for design-time interaction, and it can typically used for tool integration. For instants, it can provide integrating editors with the OpenModelica compiler.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&amp;nbsp;&lt;/P></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-L3HSinOFhFOpGO8kNYx0nQ" name="modelica_web_service,_JjEM1KCtEeCoT4Im6BOo8w" guid="-L3HSinOFhFOpGO8kNYx0nQ">
    <refinedDescription>&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>The Running Time Model is the way that the Modelica Model can be invoked as a program at the operating-system level, which is usually a Java class here.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;?xml:namespace prefix = o ns = &quot;urn:schemas-microsoft-com:office:office&quot; />&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>We have recognized the OpenModelica Project&lt;SPAN style=&quot;mso-spacerun: yes&quot;>&amp;nbsp;&amp;nbsp; &lt;/SPAN>as a good chance to achieve the above benefits with a reasonable amount of time and effort. The OpenModelica Project is an open source project and the OpenModelica Compiler (OMC) is by default targeted to C code generation. It would be possible to wrap the C code of a model into a Java wrapper code to be used by the Java Web Service with Java Native Interface technology. However, this approach leads to unmanaged native code to be called. More, they are not easily portable because of the need to be compiled separately for each target platform.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>The following picture shows translation phases of OpenModelica Compiler&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;PAGE-BREAK-AFTER: avoid; TEXT-ALIGN: center; MARGIN: 0cm 0cm 10pt&quot; class=MsoNormal align=center>&lt;?xml:namespace prefix = v ns = &quot;urn:schemas-microsoft-com:vml&quot; />&lt;v:shapetype id=_x0000_t75 stroked=&quot;f&quot; filled=&quot;f&quot; path=&quot;m@4@5l@4@11@9@11@9@5xe&quot; o:preferrelative=&quot;t&quot; o:spt=&quot;75&quot; coordsize=&quot;21600,21600&quot;>&lt;v:stroke joinstyle=&quot;miter&quot;>&lt;/v:stroke>&lt;v:formulas>&lt;v:f eqn=&quot;if lineDrawn pixelLineWidth 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @0 1 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum 0 0 @1&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @2 1 2&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @3 21600 pixelWidth&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @3 21600 pixelHeight&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @0 0 1&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @6 1 2&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @7 21600 pixelWidth&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @8 21600 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @7 21600 pixelHeight&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @10 21600 0&quot;>&lt;/v:f>&lt;/v:formulas>&lt;v:path o:connecttype=&quot;rect&quot; gradientshapeok=&quot;t&quot; o:extrusionok=&quot;f&quot;>&lt;/v:path>&lt;o:lock aspectratio=&quot;t&quot; v:ext=&quot;edit&quot;>&lt;IMG alt=&quot;&quot; src=&quot;./../../practice.platform.matlab_modelica_development.base-sintef/workproducts/resources/MOdelica Runtime.bmp&quot; width=512 height=384>&lt;/o:lock>&lt;/v:shapetype>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-ALIGN: center; MARGIN: 0cm 0cm 10pt&quot; class=MsoCaption align=center>&lt;a name=&quot;_Toc238805382&quot;>&lt;STRONG>&lt;FONT color=#4f81bd face=Calibri>Figure &lt;/FONT>&lt;/STRONG>&lt;/a>&lt;STRONG>&lt;FONT color=#4f81bd>&lt;FONT face=Calibri>&lt;SPAN style=&quot;mso-bookmark: _Toc238805382&quot;>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>15&lt;/SPAN>&lt;/SPAN>&lt;SPAN style=&quot;mso-bookmark: _Toc238805382&quot;>. OpenModelica Translation Phases&lt;/SPAN>&lt;/FONT>&lt;/FONT>&lt;/STRONG>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>In short description of the translation process of Modelica models, the OMC takes the source code of a model and translates it through several transformations into an internal representation of simulation code. In the last phase, C code is generated, compiled and linked with a simulation runtime into the final executable file. The simulation of the model is done by running the executable.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>In the context of run time models, system architect invoke model in this way:&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-INDENT: -18pt; MARGIN: 0cm 0cm 0pt 36pt; mso-list: l0 level1 lfo1&quot; class=BodyMain>&lt;SPAN style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;SPAN style=&quot;mso-list: Ignore&quot;>&lt;FONT size=3>·&lt;/FONT>&lt;SPAN style=&quot;FONT: 7pt 'Times New Roman'&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;FONT size=3 face=Calibri>Model the functionality according to the requirement, present the models as Modelica Script;&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-INDENT: -18pt; MARGIN: 0cm 0cm 0pt 36pt; mso-list: l0 level1 lfo1&quot; class=BodyMain>&lt;SPAN style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;SPAN style=&quot;mso-list: Ignore&quot;>&lt;FONT size=3>·&lt;/FONT>&lt;SPAN style=&quot;FONT: 7pt 'Times New Roman'&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;FONT size=3 face=Calibri>See how these Modelica Script is compiled in Modelica compilers like OpenModelica, get the compiled results. Usually they are some C++ files; &lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-INDENT: -18pt; MARGIN: 0cm 0cm 0pt 36pt; mso-list: l0 level1 lfo1&quot; class=BodyMain>&lt;SPAN style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;SPAN style=&quot;mso-list: Ignore&quot;>&lt;FONT size=3>·&lt;/FONT>&lt;SPAN style=&quot;FONT: 7pt 'Times New Roman'&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;FONT size=3 face=Calibri>Use pre-compiled Java program units to invoke the executables C++ Modelica method for existing system through Java Native Interface.&lt;/FONT>&lt;/P></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-j8CL-ytKTjL088Oj2k6yuQ" name="test_case,_JjXHwaCtEeCoT4Im6BOo8w" guid="-j8CL-ytKTjL088Oj2k6yuQ">
    <refinedDescription>&lt;p>A
test case specifies the conditions that must be validated to enable an assessment
of aspects of the system under test.  A test case is more formal than a test
idea; typically, a test case takes the form of a specification. In less formal
environments, you can create test cases by identifying a unique ID, name,
associated test data, and expected results.  &lt;/p> &lt;p> Test cases can be derived
from many sources, and typically include a subset of the requirements (such
as use cases, performance characteristics, and reliability concerns) and other
types of quality attributes. For more  information on types of tests and their
relationships to quality test attributes, see &lt;a class=&quot;elementLinkWithType&quot;
href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/testing_qualitative_rqmts_CAE80710.html&quot;
guid=&quot;_0aJ6cMlgEdmt3adZL5Dmdw&quot;>Concept: Testing Qualitative Requirements&lt;/a>. &lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-mP3p-HsuHbLdklm6F6csZg" name="test_log,_JjXHxKCtEeCoT4Im6BOo8w" guid="-mP3p-HsuHbLdklm6F6csZg">
    <refinedDescription>This
artifact provides a detailed, typically time-based record that both verifies
that a set of tests were run, and provides information that relates to the
success of those tests.  The focus is typically on providing an accurate audit
trail, which enables you to undertake a post-run diagnosis of failures. This
raw data is subsequently analyzed to determine the results of an aspect of
the test effort.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:ProcessDescription xmi:id="-4xt1d33XonTw6Q59-MICDw" name="model_driven_migration,_Px-uoaGIEeC6m4lNxCxazg" guid="-4xt1d33XonTw6Q59-MICDw"/>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-NFX1r_SGkYuaN3vkt5IZJA" name="define_service_migration_model,_TmT74KGIEeC6m4lNxCxazg" guid="-NFX1r_SGkYuaN3vkt5IZJA">
    <refinedDescription>&lt;p>&#xD;
    The &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.architecture.model_driven_migration.base-sintef/workproducts/service_migration_model_5EA7017F.html&quot;&#xD;
     guid=&quot;_kbzucFCsEeCQQoyAiE5Lcw&quot;>Service migration model&lt;/a> describes the IT perspective of an SOA and contains the&#xD;
    spesifications of service interfaces, interfaces and message types, opperation behaviours, service orchestration and&#xD;
    software componenst. The &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.architecture.model_driven_migration.base-sintef/workproducts/service_migration_model_5EA7017F.html&quot;&#xD;
     guid=&quot;_kbzucFCsEeCQQoyAiE5Lcw&quot;>Service migration model&lt;/a>&amp;nbsp; is built in the two tasks &lt;em>define service&#xD;
    interfaces&lt;/em> and &lt;em>define operation behaviours&lt;/em>.&lt;br />&#xD;
    The model represents a so-called platform-independent model (PIM) according&amp;nbsp;to the MDA approach.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Y_XW5sMvnC0jSopYRT2leg" name="system_developer,_TmT74aGIEeC6m4lNxCxazg" guid="-Y_XW5sMvnC0jSopYRT2leg">
    <refinedDescription>This worker is involved in the implementation of the business process, obtaining services needed to be part of the&#xD;
composition and developing the final script which can be executed by a specialized engine.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-zTPT_5-hBBRjGGytDcEDGg" name="system_architect,_TmT746GIEeC6m4lNxCxazg" guid="-zTPT_5-hBBRjGGytDcEDGg">
    <refinedDescription>This worker is involved in the design of the components which compose the software system. This worker is involved in the&#xD;
design of the architecture of the system, with its components and their interfaces.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-tBvYNtXhT3ksmpDIvTKkKA" name="tester,_TmT75aGIEeC6m4lNxCxazg" guid="-tBvYNtXhT3ksmpDIvTKkKA">
    <refinedDescription>&lt;p>&#xD;
    The person in this role is primarily responsible for the following&amp;nbsp;tasks:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Identifying the tests&amp;nbsp;that need to&amp;nbsp;be performed&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Identifying the most appropriate implementation approach for a given test&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Implementing individual tests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Setting up and running the tests&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Logging outcomes and verifying that the tests have been run&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Analyzing and guiding the recovery from execution errors&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Communicating test results to the team&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-1ZUUxFQyqxzsTJ6wCwSlVA" name="service_migration_model,_TmdF0KGIEeC6m4lNxCxazg" guid="-1ZUUxFQyqxzsTJ6wCwSlVA">
    <refinedDescription>&lt;p>&#xD;
    The service migration model describes the IT perspective of an SOA and contains the spesifications of service&#xD;
    interfaces, interfaces and message types, opperation behaviours, service orchestration and software componenst. The&#xD;
    service migration model is built in the two tasks &lt;em>define service interfaces&lt;/em> and &lt;em>define operation&#xD;
    behaviours&lt;/em>.&lt;br />&#xD;
    The model represents a so-called platform-independent model (PIM) according&amp;nbsp;to the MDA approach.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Pqu2emwFXdUe1P8SzS42AA" name="as_is_architecture_model,_Tm5xwaGIEeC6m4lNxCxazg" guid="-Pqu2emwFXdUe1P8SzS42AA">
    <refinedDescription>&amp;lt;TBD&amp;gt;</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-FxPZRwu29IQ7OFrCuaZIgQ" name="define_service_interfaces,_UXJi8KGIEeC6m4lNxCxazg" guid="-FxPZRwu29IQ7OFrCuaZIgQ">
    <refinedDescription>&lt;p>&#xD;
    The main purpose of the service interface is to provide structural features, and to specify the interactions between&#xD;
    the software components of the service-oriented architecture.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-ifm5dUeDy-MKG7SElsNc9Q" name="define_operation_behaviours,_VYlKwKGIEeC6m4lNxCxazg" guid="-ifm5dUeDy-MKG7SElsNc9Q">
    <refinedDescription>In this task behavioural features are defined&amp;nbsp;and they have to comply with the service interfaces that are defined in&#xD;
the previous task. The behaviours is specified using UML activity models using the behaviour stereotypes defined in the UML&#xD;
profile.&amp;nbsp;</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-vhadWwV90c1maHPvXT5LAQ" name="service_migration_model,_s0oNAb6pEeCzZIVdfIDtYQ" guid="-vhadWwV90c1maHPvXT5LAQ">
    <refinedDescription>&lt;p>&#xD;
    The service migration model describes the IT perspective of an SOA and contains the spesifications of service&#xD;
    interfaces, interfaces and message types, opperation behaviours, service orchestration and software componenst. The&#xD;
    service migration model is built in the two tasks &lt;em>define service interfaces&lt;/em> and &lt;em>define operation&#xD;
    behaviours&lt;/em>.&lt;br />&#xD;
    The model represents a so-called platform-independent model (PIM) according&amp;nbsp;to the MDA approach.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-bqb3EH3tG2grSQs4Yb6rtQ" name="as_is_architecture_model,_s1E49L6pEeCzZIVdfIDtYQ" guid="-bqb3EH3tG2grSQs4Yb6rtQ">
    <refinedDescription>&amp;lt;TBD&amp;gt;</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-nFAMyJn4I0twPzonqSIgtg" name="service_migration_model,_6uULgdVkEeCbz_HpayPmUw" guid="-nFAMyJn4I0twPzonqSIgtg">
    <refinedDescription>&lt;p>&#xD;
    The service migration model describes the IT perspective of an SOA and contains the spesifications of service&#xD;
    interfaces, interfaces and message types, opperation behaviours, service orchestration and software componenst. The&#xD;
    service migration model is built in the two tasks &lt;em>define service interfaces&lt;/em> and &lt;em>define operation&#xD;
    behaviours&lt;/em>.&lt;br />&#xD;
    The model represents a so-called platform-independent model (PIM) according&amp;nbsp;to the MDA approach.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-E4SHylHMM8YTC61diTzaOw" name="developer_test,_CWrEAdVlEeCbz_HpayPmUw" guid="-E4SHylHMM8YTC61diTzaOw">
    <refinedDescription>&lt;p>&#xD;
    This artifact covers all of the steps to validate a specific aspect of an implementation element. For example, a test&#xD;
    could ensure that the parameters of a method properly accept the uppermost and lowermost required values. A developer&#xD;
    test specifies test entries, execution conditions, and expected results. These details are identified to evaluate a&#xD;
    particular aspect of a scenario.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    When you collect developer tests for a specific implementation element, you can validate that the element performs as&#xD;
    specified.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The tests be self-documenting so that it is clear upon completion of the test whether the implementation element has&#xD;
    run correctly.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-a3cJib6zstGTrNspDEQCgA" name="implementation,_CWrEBNVlEeCbz_HpayPmUw" guid="-a3cJib6zstGTrNspDEQCgA">
    <refinedDescription>&lt;p>&#xD;
    This artifact is the collection of one or more of these elements:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Source code files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Data files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Build scripts&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Other files that are transformed into the executable system&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-F_q3lm6MntE2B5WN0A12yQ" name="matlab_as_service,_CWrEB9VlEeCbz_HpayPmUw" guid="-F_q3lm6MntE2B5WN0A12yQ">
    <refinedDescription>&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>The usage of Providing MATLAB as a Service here will mainly satisfy the requirements from “Mathematic Modeling” and “Service Modeling“aspects.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;?xml:namespace prefix = o ns = &quot;urn:schemas-microsoft-com:office:office&quot; />&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>According to the introduction from MathWorks, there are three ways to deploy MATLAB as a web service currently&lt;?xml:namespace prefix = w ns = &quot;urn:schemas-microsoft-com:office:word&quot; />&lt;w:Sdt id=6082354 Citation=&quot;t&quot;>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>&lt;SPAN style=&quot;mso-spacerun: yes&quot;>&amp;nbsp;&lt;/SPAN>&lt;/SPAN>&lt;/w:Sdt>.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-INDENT: -18pt; MARGIN: 0cm 0cm 0pt 36pt; mso-list: l0 level1 lfo1&quot; class=BodyMain>&lt;SPAN style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;SPAN style=&quot;mso-list: Ignore&quot;>&lt;FONT size=3>·&lt;/FONT>&lt;SPAN style=&quot;FONT: 7pt 'Times New Roman'&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;FONT size=3 face=Calibri>Use MATLAB Builder NE to create a server-side .NET component;&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-INDENT: -18pt; MARGIN: 0cm 0cm 0pt 36pt; mso-list: l0 level1 lfo1&quot; class=BodyMain>&lt;SPAN style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;SPAN style=&quot;mso-list: Ignore&quot;>&lt;FONT size=3>·&lt;/FONT>&lt;SPAN style=&quot;FONT: 7pt 'Times New Roman'&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;FONT size=3 face=Calibri>Use MATLAB Builder JA to create a server-side Java component;&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-INDENT: -18pt; MARGIN: 0cm 0cm 0pt 36pt; mso-list: l0 level1 lfo1&quot; class=BodyMain>&lt;SPAN style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;SPAN style=&quot;mso-list: Ignore&quot;>&lt;FONT size=3>·&lt;/FONT>&lt;SPAN style=&quot;FONT: 7pt 'Times New Roman'&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;FONT size=3 face=Calibri>Use COM automation, CGI, or other technologies to access MATLAB through web.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=MsoNoSpacing>&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>With MATLAB Builder NE or JA, user can integrate MATLAB application with .NET and COM components, or Java program, and then deployed this application as web service. A .NET, or COM, or Java wrapper is used here to invoke the encrypted MATLAB functions. This wrapper runs against the MATLAB Compiler Runtime (MCR) and can share the MATLAB libraries. The MATLAB function is invoked as Java method or methods of any other COM or .NET class. &lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>MathWorks gives a mechanism to provide the MATLAB function into a deployable, portable, robust, scalable Web application, which we could see from the diagram below.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;PAGE-BREAK-AFTER: avoid; MARGIN: 0cm 0cm 0pt&quot; class=MsoNoSpacing>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>&lt;?xml:namespace prefix = v ns = &quot;urn:schemas-microsoft-com:vml&quot; />&lt;v:shapetype id=_x0000_t75 stroked=&quot;f&quot; filled=&quot;f&quot; path=&quot;m@4@5l@4@11@9@11@9@5xe&quot; o:preferrelative=&quot;t&quot; o:spt=&quot;75&quot; coordsize=&quot;21600,21600&quot;>&lt;v:stroke joinstyle=&quot;miter&quot;>&lt;/v:stroke>&lt;v:formulas>&lt;v:f eqn=&quot;if lineDrawn pixelLineWidth 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @0 1 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum 0 0 @1&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @2 1 2&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @3 21600 pixelWidth&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @3 21600 pixelHeight&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @0 0 1&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @6 1 2&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @7 21600 pixelWidth&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @8 21600 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @7 21600 pixelHeight&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @10 21600 0&quot;>&lt;/v:f>&lt;/v:formulas>&lt;v:path o:connecttype=&quot;rect&quot; gradientshapeok=&quot;t&quot; o:extrusionok=&quot;f&quot;>&lt;/v:path>&lt;o:lock aspectratio=&quot;t&quot; v:ext=&quot;edit&quot;>&lt;/o:lock>&lt;/v:shapetype>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-ALIGN: center; MARGIN: 0cm 0cm 10pt&quot; class=MsoCaption align=center>&lt;IMG alt=&quot;&quot; src=&quot;./../../practice.platform.matlab_modelica_development.base-sintef/workproducts/resources/MTALAB.bmp&quot; width=580 height=532>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-ALIGN: center; MARGIN: 0cm 0cm 10pt&quot; class=MsoCaption align=center>&lt;a name=&quot;_Toc238805380&quot;>&lt;STRONG>&lt;FONT color=#4f81bd face=Calibri>Figure &lt;/FONT>&lt;/STRONG>&lt;/a>&lt;STRONG>&lt;FONT color=#4f81bd>&lt;FONT face=Calibri>&lt;SPAN style=&quot;mso-bookmark: _Toc238805380&quot;>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>13&lt;/SPAN>&lt;/SPAN>&lt;SPAN style=&quot;mso-bookmark: _Toc238805380&quot;>. Architecture of Proving MATLAB as a Service&lt;/SPAN>&lt;/FONT>&lt;/FONT>&lt;/STRONG>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>For builder NE, users can integrate a MATLAB based .NET or COM component into an existing .NET or COM application by installing both the component and the MCR on the target machine. For Web applications, the builder also provides a .NET custom control that allows zoom, pan, and rotate functionality for figures created in MATLAB. Users can also use the custom control from the toolbox in Visual Studio. With the builder support for the .NET remoting API, users can also run their class as a persistent service or spread their processing across multiple processes. &lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>For builder JA, MATLAB allows users to present the MATLAB calculation or simulation results into servlets or Java Server Page. Users can integrate a MATLAB based Java class into an existing Java infrastructure by installing the class and the MCR on the target machine. For Web applications that use JSP technology or servlets, the builder provides AJAX-based zoom, pan, and rotate controls for figures created in MATLAB. Using the builder's Remote Method Invocation (RMI) interface, users can also run their class as a persistent service, or spread their processing across multiple processes. Java classes created with the builder can be distributed at no additional charge.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>A typical example of providing MATLAB as web service is shown in the website of MATLAB, which we could see in the following table. This example allows users to input parameters from web browser, then the parameter will be passed to MATLAB service and return the simulation result, the result will be present in client web browser.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=MsoNoSpacing>&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;PAGE-BREAK-AFTER: avoid; MARGIN: 0cm 0cm 0pt&quot; class=MsoNoSpacing>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-ALIGN: center; MARGIN: 0cm 0cm 10pt&quot; class=MsoCaption align=center>&lt;IMG alt=&quot;&quot; src=&quot;./../../practice.platform.matlab_modelica_development.base-sintef/workproducts/resources/MATLAB2.bmp&quot; width=580 height=488>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-ALIGN: center; MARGIN: 0cm 0cm 10pt&quot; class=MsoCaption align=center>&lt;a name=&quot;_Toc238805381&quot;>&lt;STRONG>&lt;FONT color=#4f81bd face=Calibri>Figure &lt;/FONT>&lt;/STRONG>&lt;/a>&lt;STRONG>&lt;FONT color=#4f81bd>&lt;FONT face=Calibri>&lt;SPAN style=&quot;mso-bookmark: _Toc238805381&quot;>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>14&lt;/SPAN>&lt;/SPAN>&lt;SPAN style=&quot;mso-bookmark: _Toc238805381&quot;>. Calculation Results from MATLAB Web Service&lt;/SPAN>&lt;/FONT>&lt;/FONT>&lt;/STRONG>&lt;/P></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-T4hmafUnFEYyk67J1qtT6w" name="modelica_design_time_model,_CWrECtVlEeCbz_HpayPmUw" guid="-T4hmafUnFEYyk67J1qtT6w">
    <refinedDescription>&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>The Designing Time Model is the way that the Modelica Complier is integrated with the target system as a server. As a result, the client application can compile the Modelica Model and do simulation dynamically.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;?xml:namespace prefix = o ns = &quot;urn:schemas-microsoft-com:office:office&quot; />&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>In the context of design time models, we would like to integrate the Modelica Server to our development process. We will have a model-based software development environment which allows interacting between Java program and Modelica Server dynamically. The OpenModelica API would be used here to integrate the Modelica Server with existing Java program. Domain concepts in Eclipse Ecore can also be used as a basis for automatically creating models (classes) in Modelica. The ideal Modelica invoke process would like:&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-INDENT: -18pt; MARGIN: 0cm 0cm 0pt 36pt; mso-list: l0 level1 lfo1&quot; class=BodyMain>&lt;SPAN style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;SPAN style=&quot;mso-list: Ignore&quot;>&lt;FONT size=3>·&lt;/FONT>&lt;SPAN style=&quot;FONT: 7pt 'Times New Roman'&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;FONT size=3 face=Calibri>The users can create the models in client side of target system;&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-INDENT: -18pt; MARGIN: 0cm 0cm 0pt 36pt; mso-list: l0 level1 lfo1&quot; class=BodyMain>&lt;SPAN style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;SPAN style=&quot;mso-list: Ignore&quot;>&lt;FONT size=3>·&lt;/FONT>&lt;SPAN style=&quot;FONT: 7pt 'Times New Roman'&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;FONT size=3 face=Calibri>The users send the models as required parameters to web server;&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-INDENT: -18pt; MARGIN: 0cm 0cm 0pt 36pt; mso-list: l0 level1 lfo1&quot; class=BodyMain>&lt;SPAN style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;SPAN style=&quot;mso-list: Ignore&quot;>&lt;FONT size=3>·&lt;/FONT>&lt;SPAN style=&quot;FONT: 7pt 'Times New Roman'&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;FONT size=3 face=Calibri>The web server interacts with Modelica Server and gets the calculated results or simulations;&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-INDENT: -18pt; MARGIN: 0cm 0cm 0pt 36pt; mso-list: l0 level1 lfo1&quot; class=BodyMain>&lt;SPAN style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;SPAN style=&quot;mso-list: Ignore&quot;>&lt;FONT size=3>·&lt;/FONT>&lt;SPAN style=&quot;FONT: 7pt 'Times New Roman'&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;FONT size=3 face=Calibri>The calculated results or simulations are sent to client side dynamically;&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 10pt&quot; class=MsoNormal>&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>The following is an architecture diagram we design for Modelica Web Service.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;PAGE-BREAK-AFTER: avoid; TEXT-ALIGN: center; MARGIN: 0cm 0cm 0pt&quot; class=MsoNoSpacing align=center>&lt;SPAN style=&quot;FONT-SIZE: 12pt; mso-no-proof: yes&quot;>&lt;?xml:namespace prefix = v ns = &quot;urn:schemas-microsoft-com:vml&quot; />&lt;v:shapetype id=_x0000_t75 stroked=&quot;f&quot; filled=&quot;f&quot; path=&quot;m@4@5l@4@11@9@11@9@5xe&quot; o:preferrelative=&quot;t&quot; o:spt=&quot;75&quot; coordsize=&quot;21600,21600&quot;>&lt;v:stroke joinstyle=&quot;miter&quot;>&lt;/v:stroke>&lt;v:formulas>&lt;v:f eqn=&quot;if lineDrawn pixelLineWidth 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @0 1 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum 0 0 @1&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @2 1 2&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @3 21600 pixelWidth&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @3 21600 pixelHeight&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @0 0 1&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @6 1 2&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @7 21600 pixelWidth&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @8 21600 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @7 21600 pixelHeight&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @10 21600 0&quot;>&lt;/v:f>&lt;/v:formulas>&lt;v:path o:connecttype=&quot;rect&quot; gradientshapeok=&quot;t&quot; o:extrusionok=&quot;f&quot;>&lt;/v:path>&lt;o:lock aspectratio=&quot;t&quot; v:ext=&quot;edit&quot;>&lt;/o:lock>&lt;/v:shapetype>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-ALIGN: center; MARGIN: 0cm 0cm 10pt&quot; class=MsoCaption align=center>&lt;IMG alt=&quot;&quot; src=&quot;./../../practice.platform.matlab_modelica_development.base-sintef/workproducts/resources/untitled.bmp&quot; width=532 height=492>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-ALIGN: center; MARGIN: 0cm 0cm 10pt&quot; class=MsoCaption align=center>&lt;a name=&quot;_Toc238805383&quot;>&lt;STRONG>&lt;FONT color=#4f81bd face=Calibri>Figure &lt;/FONT>&lt;/STRONG>&lt;/a>&lt;STRONG>&lt;FONT color=#4f81bd>&lt;FONT face=Calibri>&lt;SPAN style=&quot;mso-bookmark: _Toc238805383&quot;>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>16&lt;/SPAN>&lt;/SPAN>&lt;SPAN style=&quot;mso-bookmark: _Toc238805383&quot;>. Modelica Web Service Architecture&lt;/SPAN>&lt;/FONT>&lt;/FONT>&lt;/STRONG>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=MsoNoSpacing>&lt;SPAN style=&quot;FONT-SIZE: 12pt&quot;>&lt;o:p>&lt;FONT face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>Run time models integration is a simple way of invoking Modelica model and it just support the Modelica functionalities in run time. However, the final target of the methodology is to provide a web service mechanism for design-time interaction, and it can typically used for tool integration. For instants, it can provide integrating editors with the OpenModelica compiler.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&amp;nbsp;&lt;/P></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-DGTGvMM4oum6eIc_DsdRMg" name="modelica_web_service,_CWrEDdVlEeCbz_HpayPmUw" guid="-DGTGvMM4oum6eIc_DsdRMg">
    <refinedDescription>&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>The Running Time Model is the way that the Modelica Model can be invoked as a program at the operating-system level, which is usually a Java class here.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;?xml:namespace prefix = o ns = &quot;urn:schemas-microsoft-com:office:office&quot; />&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>We have recognized the OpenModelica Project&lt;SPAN style=&quot;mso-spacerun: yes&quot;>&amp;nbsp;&amp;nbsp; &lt;/SPAN>as a good chance to achieve the above benefits with a reasonable amount of time and effort. The OpenModelica Project is an open source project and the OpenModelica Compiler (OMC) is by default targeted to C code generation. It would be possible to wrap the C code of a model into a Java wrapper code to be used by the Java Web Service with Java Native Interface technology. However, this approach leads to unmanaged native code to be called. More, they are not easily portable because of the need to be compiled separately for each target platform.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>The following picture shows translation phases of OpenModelica Compiler&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;PAGE-BREAK-AFTER: avoid; TEXT-ALIGN: center; MARGIN: 0cm 0cm 10pt&quot; class=MsoNormal align=center>&lt;?xml:namespace prefix = v ns = &quot;urn:schemas-microsoft-com:vml&quot; />&lt;v:shapetype id=_x0000_t75 stroked=&quot;f&quot; filled=&quot;f&quot; path=&quot;m@4@5l@4@11@9@11@9@5xe&quot; o:preferrelative=&quot;t&quot; o:spt=&quot;75&quot; coordsize=&quot;21600,21600&quot;>&lt;v:stroke joinstyle=&quot;miter&quot;>&lt;/v:stroke>&lt;v:formulas>&lt;v:f eqn=&quot;if lineDrawn pixelLineWidth 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @0 1 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum 0 0 @1&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @2 1 2&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @3 21600 pixelWidth&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @3 21600 pixelHeight&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @0 0 1&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @6 1 2&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @7 21600 pixelWidth&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @8 21600 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @7 21600 pixelHeight&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @10 21600 0&quot;>&lt;/v:f>&lt;/v:formulas>&lt;v:path o:connecttype=&quot;rect&quot; gradientshapeok=&quot;t&quot; o:extrusionok=&quot;f&quot;>&lt;/v:path>&lt;o:lock aspectratio=&quot;t&quot; v:ext=&quot;edit&quot;>&lt;IMG alt=&quot;&quot; src=&quot;./../../practice.platform.matlab_modelica_development.base-sintef/workproducts/resources/MOdelica Runtime.bmp&quot; width=512 height=384>&lt;/o:lock>&lt;/v:shapetype>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-ALIGN: center; MARGIN: 0cm 0cm 10pt&quot; class=MsoCaption align=center>&lt;a name=&quot;_Toc238805382&quot;>&lt;STRONG>&lt;FONT color=#4f81bd face=Calibri>Figure &lt;/FONT>&lt;/STRONG>&lt;/a>&lt;STRONG>&lt;FONT color=#4f81bd>&lt;FONT face=Calibri>&lt;SPAN style=&quot;mso-bookmark: _Toc238805382&quot;>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>15&lt;/SPAN>&lt;/SPAN>&lt;SPAN style=&quot;mso-bookmark: _Toc238805382&quot;>. OpenModelica Translation Phases&lt;/SPAN>&lt;/FONT>&lt;/FONT>&lt;/STRONG>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>In short description of the translation process of Modelica models, the OMC takes the source code of a model and translates it through several transformations into an internal representation of simulation code. In the last phase, C code is generated, compiled and linked with a simulation runtime into the final executable file. The simulation of the model is done by running the executable.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>In the context of run time models, system architect invoke model in this way:&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-INDENT: -18pt; MARGIN: 0cm 0cm 0pt 36pt; mso-list: l0 level1 lfo1&quot; class=BodyMain>&lt;SPAN style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;SPAN style=&quot;mso-list: Ignore&quot;>&lt;FONT size=3>·&lt;/FONT>&lt;SPAN style=&quot;FONT: 7pt 'Times New Roman'&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;FONT size=3 face=Calibri>Model the functionality according to the requirement, present the models as Modelica Script;&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-INDENT: -18pt; MARGIN: 0cm 0cm 0pt 36pt; mso-list: l0 level1 lfo1&quot; class=BodyMain>&lt;SPAN style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;SPAN style=&quot;mso-list: Ignore&quot;>&lt;FONT size=3>·&lt;/FONT>&lt;SPAN style=&quot;FONT: 7pt 'Times New Roman'&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;FONT size=3 face=Calibri>See how these Modelica Script is compiled in Modelica compilers like OpenModelica, get the compiled results. Usually they are some C++ files; &lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-INDENT: -18pt; MARGIN: 0cm 0cm 0pt 36pt; mso-list: l0 level1 lfo1&quot; class=BodyMain>&lt;SPAN style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;SPAN style=&quot;mso-list: Ignore&quot;>&lt;FONT size=3>·&lt;/FONT>&lt;SPAN style=&quot;FONT: 7pt 'Times New Roman'&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;FONT size=3 face=Calibri>Use pre-compiled Java program units to invoke the executables C++ Modelica method for existing system through Java Native Interface.&lt;/FONT>&lt;/P></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-qx972lZMa3idDqQMwwlM0A" name="as_is_architecture_model,_6tuVpNVkEeCbz_HpayPmUw" guid="-qx972lZMa3idDqQMwwlM0A">
    <refinedDescription>&amp;lt;TBD&amp;gt;</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-_gB40WiXCSdp9sLSfVfPZw" name="test_case,_CVCFQdVlEeCbz_HpayPmUw" guid="-_gB40WiXCSdp9sLSfVfPZw">
    <refinedDescription>&lt;p>&#xD;
    A test case specifies the conditions that must be validated to enable an assessment of aspects of the system under&#xD;
    test. A test case is more formal than a test idea; typically, a test case takes the form of a specification. In less&#xD;
    formal environments, you can create test cases by identifying a unique ID, name, associated test data, and expected&#xD;
    results.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Test cases can be derived from many sources, and typically include a subset of the requirements (such as use cases,&#xD;
    performance characteristics, and reliability concerns) and other types of quality attributes. For more information on&#xD;
    types of tests and their relationships to quality test attributes, see &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../core.tech.common.extend_supp/guidances/concepts/testing_qualitative_rqmts_CAE80710.html&quot;&#xD;
    guid=&quot;_0aJ6cMlgEdmt3adZL5Dmdw&quot;>Concept: Testing Qualitative Requirements&lt;/a>.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-C7jpo6kCBXjda1QttYEung" name="test_log,_CVL2QdVlEeCbz_HpayPmUw" guid="-C7jpo6kCBXjda1QttYEung">
    <refinedDescription>This artifact provides a detailed, typically time-based record that both verifies that a set of tests were run, and&#xD;
provides information that relates to the success of those tests. The focus is typically on providing an accurate audit&#xD;
trail, which enables you to undertake a post-run diagnosis of failures. This raw data is subsequently analyzed to determine&#xD;
the results of an aspect of the test effort.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-JKSWbBLAxS8JAYDybOphNg" name="developer_test,_CVL2R9VlEeCbz_HpayPmUw" guid="-JKSWbBLAxS8JAYDybOphNg">
    <refinedDescription>&lt;p>&#xD;
    This artifact covers all of the steps to validate a specific aspect of an implementation element. For example, a test&#xD;
    could ensure that the parameters of a method properly accept the uppermost and lowermost required values. A developer&#xD;
    test specifies test entries, execution conditions, and expected results. These details are identified to evaluate a&#xD;
    particular aspect of a scenario.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    When you collect developer tests for a specific implementation element, you can validate that the element performs as&#xD;
    specified.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The tests be self-documenting so that it is clear upon completion of the test whether the implementation element has&#xD;
    run correctly.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-O9qmC_k9rUkwz0nrrBR-bQ" name="implementation,_CVVAMdVlEeCbz_HpayPmUw" guid="-O9qmC_k9rUkwz0nrrBR-bQ">
    <refinedDescription>&lt;p>&#xD;
    This artifact is the collection of one or more of these elements:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Source code files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Data files&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Build scripts&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Other files that are transformed into the executable system&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-wS-XVlvpRxkn2LQEZogyMg" name="matlab_as_service,_CVVAN9VlEeCbz_HpayPmUw" guid="-wS-XVlvpRxkn2LQEZogyMg">
    <refinedDescription>&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>The usage of Providing MATLAB as a Service here will mainly satisfy the requirements from “Mathematic Modeling” and “Service Modeling“aspects.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;?xml:namespace prefix = o ns = &quot;urn:schemas-microsoft-com:office:office&quot; />&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>According to the introduction from MathWorks, there are three ways to deploy MATLAB as a web service currently&lt;?xml:namespace prefix = w ns = &quot;urn:schemas-microsoft-com:office:word&quot; />&lt;w:Sdt id=6082354 Citation=&quot;t&quot;>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>&lt;SPAN style=&quot;mso-spacerun: yes&quot;>&amp;nbsp;&lt;/SPAN>&lt;/SPAN>&lt;/w:Sdt>.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-INDENT: -18pt; MARGIN: 0cm 0cm 0pt 36pt; mso-list: l0 level1 lfo1&quot; class=BodyMain>&lt;SPAN style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;SPAN style=&quot;mso-list: Ignore&quot;>&lt;FONT size=3>·&lt;/FONT>&lt;SPAN style=&quot;FONT: 7pt 'Times New Roman'&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;FONT size=3 face=Calibri>Use MATLAB Builder NE to create a server-side .NET component;&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-INDENT: -18pt; MARGIN: 0cm 0cm 0pt 36pt; mso-list: l0 level1 lfo1&quot; class=BodyMain>&lt;SPAN style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;SPAN style=&quot;mso-list: Ignore&quot;>&lt;FONT size=3>·&lt;/FONT>&lt;SPAN style=&quot;FONT: 7pt 'Times New Roman'&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;FONT size=3 face=Calibri>Use MATLAB Builder JA to create a server-side Java component;&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-INDENT: -18pt; MARGIN: 0cm 0cm 0pt 36pt; mso-list: l0 level1 lfo1&quot; class=BodyMain>&lt;SPAN style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;SPAN style=&quot;mso-list: Ignore&quot;>&lt;FONT size=3>·&lt;/FONT>&lt;SPAN style=&quot;FONT: 7pt 'Times New Roman'&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;FONT size=3 face=Calibri>Use COM automation, CGI, or other technologies to access MATLAB through web.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=MsoNoSpacing>&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>With MATLAB Builder NE or JA, user can integrate MATLAB application with .NET and COM components, or Java program, and then deployed this application as web service. A .NET, or COM, or Java wrapper is used here to invoke the encrypted MATLAB functions. This wrapper runs against the MATLAB Compiler Runtime (MCR) and can share the MATLAB libraries. The MATLAB function is invoked as Java method or methods of any other COM or .NET class. &lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>MathWorks gives a mechanism to provide the MATLAB function into a deployable, portable, robust, scalable Web application, which we could see from the diagram below.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;PAGE-BREAK-AFTER: avoid; MARGIN: 0cm 0cm 0pt&quot; class=MsoNoSpacing>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>&lt;?xml:namespace prefix = v ns = &quot;urn:schemas-microsoft-com:vml&quot; />&lt;v:shapetype id=_x0000_t75 stroked=&quot;f&quot; filled=&quot;f&quot; path=&quot;m@4@5l@4@11@9@11@9@5xe&quot; o:preferrelative=&quot;t&quot; o:spt=&quot;75&quot; coordsize=&quot;21600,21600&quot;>&lt;v:stroke joinstyle=&quot;miter&quot;>&lt;/v:stroke>&lt;v:formulas>&lt;v:f eqn=&quot;if lineDrawn pixelLineWidth 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @0 1 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum 0 0 @1&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @2 1 2&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @3 21600 pixelWidth&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @3 21600 pixelHeight&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @0 0 1&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @6 1 2&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @7 21600 pixelWidth&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @8 21600 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @7 21600 pixelHeight&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @10 21600 0&quot;>&lt;/v:f>&lt;/v:formulas>&lt;v:path o:connecttype=&quot;rect&quot; gradientshapeok=&quot;t&quot; o:extrusionok=&quot;f&quot;>&lt;/v:path>&lt;o:lock aspectratio=&quot;t&quot; v:ext=&quot;edit&quot;>&lt;/o:lock>&lt;/v:shapetype>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-ALIGN: center; MARGIN: 0cm 0cm 10pt&quot; class=MsoCaption align=center>&lt;IMG alt=&quot;&quot; src=&quot;./../../practice.platform.matlab_modelica_development.base-sintef/workproducts/resources/MTALAB.bmp&quot; width=580 height=532>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-ALIGN: center; MARGIN: 0cm 0cm 10pt&quot; class=MsoCaption align=center>&lt;a name=&quot;_Toc238805380&quot;>&lt;STRONG>&lt;FONT color=#4f81bd face=Calibri>Figure &lt;/FONT>&lt;/STRONG>&lt;/a>&lt;STRONG>&lt;FONT color=#4f81bd>&lt;FONT face=Calibri>&lt;SPAN style=&quot;mso-bookmark: _Toc238805380&quot;>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>13&lt;/SPAN>&lt;/SPAN>&lt;SPAN style=&quot;mso-bookmark: _Toc238805380&quot;>. Architecture of Proving MATLAB as a Service&lt;/SPAN>&lt;/FONT>&lt;/FONT>&lt;/STRONG>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>For builder NE, users can integrate a MATLAB based .NET or COM component into an existing .NET or COM application by installing both the component and the MCR on the target machine. For Web applications, the builder also provides a .NET custom control that allows zoom, pan, and rotate functionality for figures created in MATLAB. Users can also use the custom control from the toolbox in Visual Studio. With the builder support for the .NET remoting API, users can also run their class as a persistent service or spread their processing across multiple processes. &lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>For builder JA, MATLAB allows users to present the MATLAB calculation or simulation results into servlets or Java Server Page. Users can integrate a MATLAB based Java class into an existing Java infrastructure by installing the class and the MCR on the target machine. For Web applications that use JSP technology or servlets, the builder provides AJAX-based zoom, pan, and rotate controls for figures created in MATLAB. Using the builder's Remote Method Invocation (RMI) interface, users can also run their class as a persistent service, or spread their processing across multiple processes. Java classes created with the builder can be distributed at no additional charge.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>A typical example of providing MATLAB as web service is shown in the website of MATLAB, which we could see in the following table. This example allows users to input parameters from web browser, then the parameter will be passed to MATLAB service and return the simulation result, the result will be present in client web browser.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=MsoNoSpacing>&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;PAGE-BREAK-AFTER: avoid; MARGIN: 0cm 0cm 0pt&quot; class=MsoNoSpacing>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-ALIGN: center; MARGIN: 0cm 0cm 10pt&quot; class=MsoCaption align=center>&lt;IMG alt=&quot;&quot; src=&quot;./../../practice.platform.matlab_modelica_development.base-sintef/workproducts/resources/MATLAB2.bmp&quot; width=580 height=488>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-ALIGN: center; MARGIN: 0cm 0cm 10pt&quot; class=MsoCaption align=center>&lt;a name=&quot;_Toc238805381&quot;>&lt;STRONG>&lt;FONT color=#4f81bd face=Calibri>Figure &lt;/FONT>&lt;/STRONG>&lt;/a>&lt;STRONG>&lt;FONT color=#4f81bd>&lt;FONT face=Calibri>&lt;SPAN style=&quot;mso-bookmark: _Toc238805381&quot;>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>14&lt;/SPAN>&lt;/SPAN>&lt;SPAN style=&quot;mso-bookmark: _Toc238805381&quot;>. Calculation Results from MATLAB Web Service&lt;/SPAN>&lt;/FONT>&lt;/FONT>&lt;/STRONG>&lt;/P></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-SM_SRRHa1PHBAEzVhnfBpw" name="modelica_design_time_model,_CVVAOtVlEeCbz_HpayPmUw" guid="-SM_SRRHa1PHBAEzVhnfBpw">
    <refinedDescription>&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>The Designing Time Model is the way that the Modelica Complier is integrated with the target system as a server. As a result, the client application can compile the Modelica Model and do simulation dynamically.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;?xml:namespace prefix = o ns = &quot;urn:schemas-microsoft-com:office:office&quot; />&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>In the context of design time models, we would like to integrate the Modelica Server to our development process. We will have a model-based software development environment which allows interacting between Java program and Modelica Server dynamically. The OpenModelica API would be used here to integrate the Modelica Server with existing Java program. Domain concepts in Eclipse Ecore can also be used as a basis for automatically creating models (classes) in Modelica. The ideal Modelica invoke process would like:&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-INDENT: -18pt; MARGIN: 0cm 0cm 0pt 36pt; mso-list: l0 level1 lfo1&quot; class=BodyMain>&lt;SPAN style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;SPAN style=&quot;mso-list: Ignore&quot;>&lt;FONT size=3>·&lt;/FONT>&lt;SPAN style=&quot;FONT: 7pt 'Times New Roman'&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;FONT size=3 face=Calibri>The users can create the models in client side of target system;&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-INDENT: -18pt; MARGIN: 0cm 0cm 0pt 36pt; mso-list: l0 level1 lfo1&quot; class=BodyMain>&lt;SPAN style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;SPAN style=&quot;mso-list: Ignore&quot;>&lt;FONT size=3>·&lt;/FONT>&lt;SPAN style=&quot;FONT: 7pt 'Times New Roman'&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;FONT size=3 face=Calibri>The users send the models as required parameters to web server;&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-INDENT: -18pt; MARGIN: 0cm 0cm 0pt 36pt; mso-list: l0 level1 lfo1&quot; class=BodyMain>&lt;SPAN style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;SPAN style=&quot;mso-list: Ignore&quot;>&lt;FONT size=3>·&lt;/FONT>&lt;SPAN style=&quot;FONT: 7pt 'Times New Roman'&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;FONT size=3 face=Calibri>The web server interacts with Modelica Server and gets the calculated results or simulations;&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-INDENT: -18pt; MARGIN: 0cm 0cm 0pt 36pt; mso-list: l0 level1 lfo1&quot; class=BodyMain>&lt;SPAN style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;SPAN style=&quot;mso-list: Ignore&quot;>&lt;FONT size=3>·&lt;/FONT>&lt;SPAN style=&quot;FONT: 7pt 'Times New Roman'&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;FONT size=3 face=Calibri>The calculated results or simulations are sent to client side dynamically;&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 10pt&quot; class=MsoNormal>&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>The following is an architecture diagram we design for Modelica Web Service.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;PAGE-BREAK-AFTER: avoid; TEXT-ALIGN: center; MARGIN: 0cm 0cm 0pt&quot; class=MsoNoSpacing align=center>&lt;SPAN style=&quot;FONT-SIZE: 12pt; mso-no-proof: yes&quot;>&lt;?xml:namespace prefix = v ns = &quot;urn:schemas-microsoft-com:vml&quot; />&lt;v:shapetype id=_x0000_t75 stroked=&quot;f&quot; filled=&quot;f&quot; path=&quot;m@4@5l@4@11@9@11@9@5xe&quot; o:preferrelative=&quot;t&quot; o:spt=&quot;75&quot; coordsize=&quot;21600,21600&quot;>&lt;v:stroke joinstyle=&quot;miter&quot;>&lt;/v:stroke>&lt;v:formulas>&lt;v:f eqn=&quot;if lineDrawn pixelLineWidth 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @0 1 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum 0 0 @1&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @2 1 2&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @3 21600 pixelWidth&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @3 21600 pixelHeight&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @0 0 1&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @6 1 2&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @7 21600 pixelWidth&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @8 21600 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @7 21600 pixelHeight&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @10 21600 0&quot;>&lt;/v:f>&lt;/v:formulas>&lt;v:path o:connecttype=&quot;rect&quot; gradientshapeok=&quot;t&quot; o:extrusionok=&quot;f&quot;>&lt;/v:path>&lt;o:lock aspectratio=&quot;t&quot; v:ext=&quot;edit&quot;>&lt;/o:lock>&lt;/v:shapetype>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-ALIGN: center; MARGIN: 0cm 0cm 10pt&quot; class=MsoCaption align=center>&lt;IMG alt=&quot;&quot; src=&quot;./../../practice.platform.matlab_modelica_development.base-sintef/workproducts/resources/untitled.bmp&quot; width=532 height=492>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-ALIGN: center; MARGIN: 0cm 0cm 10pt&quot; class=MsoCaption align=center>&lt;a name=&quot;_Toc238805383&quot;>&lt;STRONG>&lt;FONT color=#4f81bd face=Calibri>Figure &lt;/FONT>&lt;/STRONG>&lt;/a>&lt;STRONG>&lt;FONT color=#4f81bd>&lt;FONT face=Calibri>&lt;SPAN style=&quot;mso-bookmark: _Toc238805383&quot;>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>16&lt;/SPAN>&lt;/SPAN>&lt;SPAN style=&quot;mso-bookmark: _Toc238805383&quot;>. Modelica Web Service Architecture&lt;/SPAN>&lt;/FONT>&lt;/FONT>&lt;/STRONG>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=MsoNoSpacing>&lt;SPAN style=&quot;FONT-SIZE: 12pt&quot;>&lt;o:p>&lt;FONT face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>Run time models integration is a simple way of invoking Modelica model and it just support the Modelica functionalities in run time. However, the final target of the methodology is to provide a web service mechanism for design-time interaction, and it can typically used for tool integration. For instants, it can provide integrating editors with the OpenModelica compiler.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&amp;nbsp;&lt;/P></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-vJejmbmE4w6tIEWI3CzOnw" name="modelica_web_service,_CVVAPdVlEeCbz_HpayPmUw" guid="-vJejmbmE4w6tIEWI3CzOnw">
    <refinedDescription>&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>The Running Time Model is the way that the Modelica Model can be invoked as a program at the operating-system level, which is usually a Java class here.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;?xml:namespace prefix = o ns = &quot;urn:schemas-microsoft-com:office:office&quot; />&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>We have recognized the OpenModelica Project&lt;SPAN style=&quot;mso-spacerun: yes&quot;>&amp;nbsp;&amp;nbsp; &lt;/SPAN>as a good chance to achieve the above benefits with a reasonable amount of time and effort. The OpenModelica Project is an open source project and the OpenModelica Compiler (OMC) is by default targeted to C code generation. It would be possible to wrap the C code of a model into a Java wrapper code to be used by the Java Web Service with Java Native Interface technology. However, this approach leads to unmanaged native code to be called. More, they are not easily portable because of the need to be compiled separately for each target platform.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>The following picture shows translation phases of OpenModelica Compiler&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;PAGE-BREAK-AFTER: avoid; TEXT-ALIGN: center; MARGIN: 0cm 0cm 10pt&quot; class=MsoNormal align=center>&lt;?xml:namespace prefix = v ns = &quot;urn:schemas-microsoft-com:vml&quot; />&lt;v:shapetype id=_x0000_t75 stroked=&quot;f&quot; filled=&quot;f&quot; path=&quot;m@4@5l@4@11@9@11@9@5xe&quot; o:preferrelative=&quot;t&quot; o:spt=&quot;75&quot; coordsize=&quot;21600,21600&quot;>&lt;v:stroke joinstyle=&quot;miter&quot;>&lt;/v:stroke>&lt;v:formulas>&lt;v:f eqn=&quot;if lineDrawn pixelLineWidth 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @0 1 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum 0 0 @1&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @2 1 2&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @3 21600 pixelWidth&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @3 21600 pixelHeight&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @0 0 1&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @6 1 2&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @7 21600 pixelWidth&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @8 21600 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @7 21600 pixelHeight&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @10 21600 0&quot;>&lt;/v:f>&lt;/v:formulas>&lt;v:path o:connecttype=&quot;rect&quot; gradientshapeok=&quot;t&quot; o:extrusionok=&quot;f&quot;>&lt;/v:path>&lt;o:lock aspectratio=&quot;t&quot; v:ext=&quot;edit&quot;>&lt;IMG alt=&quot;&quot; src=&quot;./../../practice.platform.matlab_modelica_development.base-sintef/workproducts/resources/MOdelica Runtime.bmp&quot; width=512 height=384>&lt;/o:lock>&lt;/v:shapetype>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-ALIGN: center; MARGIN: 0cm 0cm 10pt&quot; class=MsoCaption align=center>&lt;a name=&quot;_Toc238805382&quot;>&lt;STRONG>&lt;FONT color=#4f81bd face=Calibri>Figure &lt;/FONT>&lt;/STRONG>&lt;/a>&lt;STRONG>&lt;FONT color=#4f81bd>&lt;FONT face=Calibri>&lt;SPAN style=&quot;mso-bookmark: _Toc238805382&quot;>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>15&lt;/SPAN>&lt;/SPAN>&lt;SPAN style=&quot;mso-bookmark: _Toc238805382&quot;>. OpenModelica Translation Phases&lt;/SPAN>&lt;/FONT>&lt;/FONT>&lt;/STRONG>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>In short description of the translation process of Modelica models, the OMC takes the source code of a model and translates it through several transformations into an internal representation of simulation code. In the last phase, C code is generated, compiled and linked with a simulation runtime into the final executable file. The simulation of the model is done by running the executable.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>In the context of run time models, system architect invoke model in this way:&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-INDENT: -18pt; MARGIN: 0cm 0cm 0pt 36pt; mso-list: l0 level1 lfo1&quot; class=BodyMain>&lt;SPAN style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;SPAN style=&quot;mso-list: Ignore&quot;>&lt;FONT size=3>·&lt;/FONT>&lt;SPAN style=&quot;FONT: 7pt 'Times New Roman'&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;FONT size=3 face=Calibri>Model the functionality according to the requirement, present the models as Modelica Script;&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-INDENT: -18pt; MARGIN: 0cm 0cm 0pt 36pt; mso-list: l0 level1 lfo1&quot; class=BodyMain>&lt;SPAN style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;SPAN style=&quot;mso-list: Ignore&quot;>&lt;FONT size=3>·&lt;/FONT>&lt;SPAN style=&quot;FONT: 7pt 'Times New Roman'&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;FONT size=3 face=Calibri>See how these Modelica Script is compiled in Modelica compilers like OpenModelica, get the compiled results. Usually they are some C++ files; &lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-INDENT: -18pt; MARGIN: 0cm 0cm 0pt 36pt; mso-list: l0 level1 lfo1&quot; class=BodyMain>&lt;SPAN style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;SPAN style=&quot;mso-list: Ignore&quot;>&lt;FONT size=3>·&lt;/FONT>&lt;SPAN style=&quot;FONT: 7pt 'Times New Roman'&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;FONT size=3 face=Calibri>Use pre-compiled Java program units to invoke the executables C++ Modelica method for existing system through Java Native Interface.&lt;/FONT>&lt;/P></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-xhBLGL1j0PE_ZNNV_u_Cew" name="architecture_model.rename,_CVexMdVlEeCbz_HpayPmUw" guid="-xhBLGL1j0PE_ZNNV_u_Cew">
    <refinedDescription>&lt;p>&#xD;
    The &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../core.default.cat_def.extend_mdse-sintef/workproducts/architecture_model_5B0FB7A.html&quot;&#xD;
    guid=&quot;_vIqTYOG2Ed-AyrTFSpVP8g&quot;>Architecture model&lt;/a> describes the overall architecture of the system and its&#xD;
    partitioning into components in terms of collaborations of components and subsystems, component structures, component&#xD;
    interactions, and component interfaces and protocols. It describes two aspects of the component collaboration, namely&#xD;
    the static (structure) and dynamic (behaviour). The structural model describes the components, their dependencies, and&#xD;
    their interfaces; the dynamic model describes the component interactions and protocols. The result is to define&#xD;
    components in terms of what interfaces they provide, what interfaces they use, and how these interfaces should be used&#xD;
    (protocol).&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-eZn_tT_Ni6uxSJdgvfgbEw" name="behavior_diagram,_CVexNNVlEeCbz_HpayPmUw" guid="-eZn_tT_Ni6uxSJdgvfgbEw">
    <refinedDescription>&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>The following diagram is a BPMN example which show the details process of how Temperature Monitoring System get real time temperature and report feedback.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;?xml:namespace prefix = o ns = &quot;urn:schemas-microsoft-com:office:office&quot; />&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;PAGE-BREAK-AFTER: avoid; TEXT-ALIGN: center; MARGIN: 0cm 0cm 0pt&quot; class=BodyMain align=center>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>&lt;?xml:namespace prefix = v ns = &quot;urn:schemas-microsoft-com:vml&quot; />&lt;v:shapetype id=_x0000_t75 stroked=&quot;f&quot; filled=&quot;f&quot; path=&quot;m@4@5l@4@11@9@11@9@5xe&quot; o:preferrelative=&quot;t&quot; o:spt=&quot;75&quot; coordsize=&quot;21600,21600&quot;>&lt;v:stroke joinstyle=&quot;miter&quot;>&lt;/v:stroke>&lt;v:formulas>&lt;v:f eqn=&quot;if lineDrawn pixelLineWidth 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @0 1 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum 0 0 @1&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @2 1 2&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @3 21600 pixelWidth&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @3 21600 pixelHeight&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @0 0 1&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @6 1 2&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @7 21600 pixelWidth&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @8 21600 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @7 21600 pixelHeight&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @10 21600 0&quot;>&lt;/v:f>&lt;/v:formulas>&lt;v:path o:connecttype=&quot;rect&quot; gradientshapeok=&quot;t&quot; o:extrusionok=&quot;f&quot;>&lt;/v:path>&lt;o:lock aspectratio=&quot;t&quot; v:ext=&quot;edit&quot;>&lt;/o:lock>&lt;/v:shapetype>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-ALIGN: center; MARGIN: 0cm 0cm 10pt&quot; class=MsoCaption align=center>&lt;IMG alt=BPMN src=&quot;./../../practice.architecture.mathematical_systems_engineering.base-sintef/workproducts/resources/BPMN.png&quot; width=600 height=423>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-ALIGN: center; MARGIN: 0cm 0cm 10pt&quot; class=MsoCaption align=center>&lt;a name=&quot;_Toc238805376&quot;>&lt;STRONG>&lt;FONT color=#4f81bd face=Calibri>Figure &lt;/FONT>&lt;/STRONG>&lt;/a>&lt;STRONG>&lt;FONT color=#4f81bd>&lt;FONT face=Calibri>&lt;SPAN style=&quot;mso-bookmark: _Toc238805376&quot;>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>9&lt;/SPAN>&lt;/SPAN>&lt;SPAN style=&quot;mso-bookmark: _Toc238805376&quot;>. BPMN example for Real Time Temperature Report&lt;/SPAN>&lt;/FONT>&lt;/FONT>&lt;/STRONG>&lt;/P></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-XTSePGK5cAJvRqlHGPkGzA" name="community_services_architecture,_CVn7IdVlEeCbz_HpayPmUw" guid="-XTSePGK5cAJvRqlHGPkGzA">
    <refinedDescription>&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>Because we use the top down approach solution, with the “community services architecture”, we can have the top level view of how participants work together for some purpose. The services architecture of a community does not assume or require any one controlling entity or process. Other services architectures and service contracts may be used here. A community Services Architecture is defined using a UML Collaboration.&lt;SPAN style=&quot;mso-spacerun: yes&quot;>&amp;nbsp; &lt;/SPAN>The purpose of collaboration is to illustrate how kinds of entities work together for some purpose. The services architecture serves to define the requirements of each of the participants. . The participant roles are filled by participants with service ports required of the entities that fill these roles and are then bound by the services architectures in which they participate.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;?xml:namespace prefix = o ns = &quot;urn:schemas-microsoft-com:office:office&quot; />&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>This is a service architecture diagram for Scientific Temperature Monitoring System. It shows the Service Orient Architecture design of how user uses the Temperature Monitoring System.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;IMG alt=&quot;SoaML Service Architecture&quot; src=&quot;./../../practice.architecture.mathematical_systems_engineering.base-sintef/workproducts/resources/SoaML Service Architecture.png&quot; width=600 height=365>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;PAGE-BREAK-AFTER: avoid; MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>&lt;?xml:namespace prefix = v ns = &quot;urn:schemas-microsoft-com:vml&quot; />&lt;v:shapetype id=_x0000_t75 stroked=&quot;f&quot; filled=&quot;f&quot; path=&quot;m@4@5l@4@11@9@11@9@5xe&quot; o:preferrelative=&quot;t&quot; o:spt=&quot;75&quot; coordsize=&quot;21600,21600&quot;>&lt;v:stroke joinstyle=&quot;miter&quot;>&lt;/v:stroke>&lt;v:formulas>&lt;v:f eqn=&quot;if lineDrawn pixelLineWidth 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @0 1 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum 0 0 @1&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @2 1 2&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @3 21600 pixelWidth&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @3 21600 pixelHeight&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @0 0 1&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @6 1 2&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @7 21600 pixelWidth&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @8 21600 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @7 21600 pixelHeight&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @10 21600 0&quot;>&lt;/v:f>&lt;/v:formulas>&lt;v:path o:connecttype=&quot;rect&quot; gradientshapeok=&quot;t&quot; o:extrusionok=&quot;f&quot;>&lt;/v:path>&lt;o:lock aspectratio=&quot;t&quot; v:ext=&quot;edit&quot;>&lt;/o:lock>&lt;/v:shapetype>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-ALIGN: center; MARGIN: 0cm 0cm 10pt&quot; class=MsoCaption align=center>&lt;a name=&quot;_Toc238805375&quot;>&lt;STRONG>&lt;FONT color=#4f81bd face=Calibri>Figure &lt;/FONT>&lt;/STRONG>&lt;/a>&lt;STRONG>&lt;FONT color=#4f81bd>&lt;FONT face=Calibri>&lt;SPAN style=&quot;mso-bookmark: _Toc238805375&quot;>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>8&lt;/SPAN>&lt;/SPAN>&lt;SPAN style=&quot;mso-bookmark: _Toc238805375&quot;>. Service Architecture example&lt;/SPAN>&lt;/FONT>&lt;/FONT>&lt;/STRONG>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>There are three service participants in this model: Operator, Administrator, and Temperature System. The three participants communicate with each other through different service collaboration services.&lt;/FONT>&lt;/P></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-abcLzsBxtDNIFtsDp_zprQ" name="participant_services_architecture,_CVn7JNVlEeCbz_HpayPmUw" guid="-abcLzsBxtDNIFtsDp_zprQ">
    <refinedDescription>&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>An example of participant service architecture for “Temperature Monitor” is shown in the following diagram.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;?xml:namespace prefix = o ns = &quot;urn:schemas-microsoft-com:office:office&quot; />&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;PAGE-BREAK-AFTER: avoid; MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>&lt;?xml:namespace prefix = v ns = &quot;urn:schemas-microsoft-com:vml&quot; />&lt;v:shapetype id=_x0000_t75 stroked=&quot;f&quot; filled=&quot;f&quot; path=&quot;m@4@5l@4@11@9@11@9@5xe&quot; o:preferrelative=&quot;t&quot; o:spt=&quot;75&quot; coordsize=&quot;21600,21600&quot;>&lt;v:stroke joinstyle=&quot;miter&quot;>&lt;/v:stroke>&lt;v:formulas>&lt;v:f eqn=&quot;if lineDrawn pixelLineWidth 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @0 1 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum 0 0 @1&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @2 1 2&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @3 21600 pixelWidth&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @3 21600 pixelHeight&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @0 0 1&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @6 1 2&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @7 21600 pixelWidth&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @8 21600 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @7 21600 pixelHeight&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @10 21600 0&quot;>&lt;/v:f>&lt;/v:formulas>&lt;v:path o:connecttype=&quot;rect&quot; gradientshapeok=&quot;t&quot; o:extrusionok=&quot;f&quot;>&lt;/v:path>&lt;o:lock aspectratio=&quot;t&quot; v:ext=&quot;edit&quot;>&lt;/o:lock>&lt;/v:shapetype>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-ALIGN: center; MARGIN: 0cm 0cm 10pt&quot; class=MsoCaption align=center>&lt;IMG alt=&quot;Participant Services Architecture&quot; src=&quot;./../../practice.architecture.mathematical_systems_engineering.base-sintef/workproducts/resources/Participant Services Architecture.png&quot; width=537 height=277>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-ALIGN: center; MARGIN: 0cm 0cm 10pt&quot; class=MsoCaption align=center>&lt;a name=&quot;_Toc238805377&quot;>&lt;STRONG>&lt;FONT color=#4f81bd face=Calibri>Figure &lt;/FONT>&lt;/STRONG>&lt;/a>&lt;STRONG>&lt;FONT color=#4f81bd>&lt;FONT face=Calibri>&lt;SPAN style=&quot;mso-bookmark: _Toc238805377&quot;>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>10&lt;/SPAN>&lt;/SPAN>&lt;SPAN style=&quot;mso-bookmark: _Toc238805377&quot;>. Participant services architecture Example&lt;/SPAN>&lt;/FONT>&lt;/FONT>&lt;/STRONG>&lt;/P></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-w8wv8zvidGIjj2nokrmSOw" name="requirement_diagram_and_use_case_diagram,_CVn7J9VlEeCbz_HpayPmUw" guid="-w8wv8zvidGIjj2nokrmSOw">
    <refinedDescription>&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>The following diagram is a requirement diagram of Temperature Monitoring Scientific software.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>&lt;/FONT>&amp;nbsp;&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>&lt;IMG alt=&quot;Requirement Diagram&quot; src=&quot;./../../practice.architecture.mathematical_systems_engineering.base-sintef/workproducts/./resources/Requirement Diagram.png&quot; width=588 height=290>&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-ALIGN: center; MARGIN: 0cm 0cm 0pt&quot; class=BodyMain align=center>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>&lt;?xml:namespace prefix = v ns = &quot;urn:schemas-microsoft-com:vml&quot; />&lt;v:shapetype id=_x0000_t75 coordsize=&quot;21600,21600&quot; o:spt=&quot;75&quot; o:preferrelative=&quot;t&quot; path=&quot;m@4@5l@4@11@9@11@9@5xe&quot; filled=&quot;f&quot; stroked=&quot;f&quot;>&lt;v:stroke joinstyle=&quot;miter&quot;>&lt;/v:stroke>&lt;v:formulas>&lt;v:f eqn=&quot;if lineDrawn pixelLineWidth 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @0 1 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum 0 0 @1&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @2 1 2&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @3 21600 pixelWidth&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @3 21600 pixelHeight&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @0 0 1&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @6 1 2&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @7 21600 pixelWidth&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @8 21600 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @7 21600 pixelHeight&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @10 21600 0&quot;>&lt;/v:f>&lt;/v:formulas>&lt;v:path o:extrusionok=&quot;f&quot; gradientshapeok=&quot;t&quot; o:connecttype=&quot;rect&quot;>&lt;/v:path>&lt;?xml:namespace prefix = o ns = &quot;urn:schemas-microsoft-com:office:office&quot; />&lt;o:lock v:ext=&quot;edit&quot; aspectratio=&quot;t&quot;>&lt;/o:lock>&lt;/v:shapetype>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-ALIGN: center; MARGIN: 0cm 0cm 10pt&quot; class=MsoCaption align=center>&lt;a name=&quot;_Toc238805373&quot;>&lt;STRONG>&lt;FONT color=#4f81bd face=Calibri>Figure &lt;/FONT>&lt;/STRONG>&lt;/a>&lt;STRONG>&lt;FONT color=#4f81bd>&lt;FONT face=Calibri>&lt;SPAN style=&quot;mso-bookmark: _Toc238805373&quot;>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>6&lt;/SPAN>&lt;/SPAN>&lt;SPAN style=&quot;mso-bookmark: _Toc238805373&quot;>. MOSiSaS Methodology Requirement Diagram&lt;/SPAN>&lt;/FONT>&lt;/FONT>&lt;/STRONG>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>This requirement diagram presents the requirements from two aspects: Functionality and Operating Environment. There are also some sub requirements in each specific aspect.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3>&lt;FONT face=Calibri>The requirement diagram includes all the requirements while use case diagram presents the functional requirements. Use case is considered as a mechanism to capture the functional system requirement.&lt;SPAN style=&quot;mso-spacerun: yes&quot;>&amp;nbsp; &lt;/SPAN>&lt;/FONT>&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>The following diagram is a use case diagram shows the functional requirement in the scientific temperature monitoring system:&lt;/FONT>&lt;SPAN style=&quot;BORDER-BOTTOM: black 1pt; BORDER-LEFT: black 1pt; PADDING-BOTTOM: 0cm; PADDING-LEFT: 0cm; LAYOUT-GRID-MODE: line; PADDING-RIGHT: 0cm; FONT-FAMILY: 'Times New Roman','serif'; BACKGROUND: black; COLOR: black; FONT-SIZE: 0pt; BORDER-TOP: black 1pt; BORDER-RIGHT: black 1pt; PADDING-TOP: 0cm; mso-fareast-font-family: 'Times New Roman'; mso-border-alt: none black 0cm; mso-font-width: 0%&quot;> &lt;/SPAN>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-ALIGN: center; MARGIN: 0cm 0cm 10pt&quot; class=MsoCaption align=center>&lt;STRONG>&lt;FONT color=#4f81bd>&lt;FONT face=Calibri>&lt;SPAN style=&quot;mso-bookmark: _Toc238805374&quot;>&lt;/SPAN>&lt;/FONT>&lt;/FONT>&lt;/STRONG>&amp;nbsp;&lt;/P>&#xD;
&lt;P style=&quot;TEXT-ALIGN: center; MARGIN: 0cm 0cm 10pt&quot; class=MsoCaption align=center>&lt;STRONG>&lt;FONT color=#4f81bd>&lt;FONT face=Calibri>&lt;SPAN style=&quot;mso-bookmark: _Toc238805374&quot;>&lt;IMG alt=&quot;Use Case&quot; src=&quot;./../../practice.architecture.mathematical_systems_engineering.base-sintef/workproducts/./resources/Use Case.png&quot; width=600 height=420>&lt;/SPAN>&lt;/FONT>&lt;/FONT>&lt;/STRONG>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-ALIGN: center; MARGIN: 0cm 0cm 10pt&quot; class=MsoCaption align=center>&lt;STRONG>&lt;FONT color=#4f81bd>&lt;FONT face=Calibri>&lt;SPAN style=&quot;mso-bookmark: _Toc238805374&quot;>&lt;a name=&quot;_Toc238805374&quot;>&lt;STRONG>&lt;FONT color=#4f81bd face=Calibri>Figure &lt;/FONT>&lt;/STRONG>&lt;/a>&lt;STRONG>&lt;FONT color=#4f81bd>&lt;FONT face=Calibri>&lt;SPAN style=&quot;mso-bookmark: _Toc238805374&quot;>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>7&lt;/SPAN>&lt;/SPAN>&lt;SPAN style=&quot;mso-bookmark: _Toc238805374&quot;>. Use Case example&lt;/SPAN>&lt;/FONT>&lt;/FONT>&lt;/STRONG>&lt;/SPAN>&lt;/FONT>&lt;/FONT>&lt;/STRONG>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>The system actors, such as Administrator and Operator, have different use cases, which stand for the functional requirements from different actors. The relationship between Use Cases could be include or extend.&lt;/FONT>&lt;/P></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-JhiXOX6-fCaACQsz5cDGsw" name="logical_architecture,_CVn7KtVlEeCbz_HpayPmUw" guid="-JhiXOX6-fCaACQsz5cDGsw">
    <refinedDescription>&amp;lt;TBD&amp;gt;</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-3XkQlVswVen877wwJe9h5w" name="matlab_or_modelica_mathematical_model,_CVn7LdVlEeCbz_HpayPmUw" guid="-3XkQlVswVen877wwJe9h5w">
    <refinedDescription>&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>Here we use Temperature Constrains as an example to show how to use Modelica Language. &lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;?xml:namespace prefix = o ns = &quot;urn:schemas-microsoft-com:office:office&quot; />&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>The temperature checking algorithm Modelica script:&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;SPAN style=&quot;COLOR: #0070c0; FONT-SIZE: 11pt&quot;>&lt;FONT face=Calibri>function temperatureConstrains&lt;o:p>&lt;/o:p>&lt;/FONT>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;SPAN style=&quot;COLOR: #0070c0; FONT-SIZE: 11pt&quot;>&lt;FONT face=Calibri>&lt;SPAN style=&quot;mso-tab-count: 1&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>input&lt;SPAN style=&quot;mso-tab-count: 1&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>Real temperature;&lt;o:p>&lt;/o:p>&lt;/FONT>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;SPAN style=&quot;COLOR: #0070c0; FONT-SIZE: 11pt&quot;>&lt;FONT face=Calibri>&lt;SPAN style=&quot;mso-tab-count: 1&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>output&lt;SPAN style=&quot;mso-tab-count: 1&quot;>&amp;nbsp; &lt;/SPAN>String feedback;&lt;o:p>&lt;/o:p>&lt;/FONT>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;SPAN style=&quot;COLOR: #0070c0; FONT-SIZE: 11pt&quot;>&lt;FONT face=Calibri>protected&lt;o:p>&lt;/o:p>&lt;/FONT>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;SPAN style=&quot;COLOR: #0070c0; FONT-SIZE: 11pt&quot;>&lt;FONT face=Calibri>&lt;SPAN style=&quot;mso-tab-count: 1&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>constant Real max = 2000;&lt;o:p>&lt;/o:p>&lt;/FONT>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;SPAN style=&quot;COLOR: #0070c0; FONT-SIZE: 11pt&quot;>&lt;FONT face=Calibri>&lt;SPAN style=&quot;mso-tab-count: 1&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>constant Real min = -200;&lt;o:p>&lt;/o:p>&lt;/FONT>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;SPAN style=&quot;COLOR: #0070c0; FONT-SIZE: 11pt&quot;>&lt;o:p>&lt;FONT face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;SPAN style=&quot;COLOR: #0070c0; FONT-SIZE: 11pt&quot;>&lt;FONT face=Calibri>algorithm&lt;o:p>&lt;/o:p>&lt;/FONT>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;SPAN style=&quot;COLOR: #0070c0; FONT-SIZE: 11pt&quot;>&lt;FONT face=Calibri>&lt;SPAN style=&quot;mso-tab-count: 1&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>if temperature &amp;gt; max then&lt;o:p>&lt;/o:p>&lt;/FONT>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;SPAN style=&quot;COLOR: #0070c0; FONT-SIZE: 11pt&quot;>&lt;FONT face=Calibri>&lt;SPAN style=&quot;mso-tab-count: 2&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>feedback := &quot;Dangerous! Temperature too high.&quot;;&lt;o:p>&lt;/o:p>&lt;/FONT>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;SPAN style=&quot;COLOR: #0070c0; FONT-SIZE: 11pt&quot;>&lt;FONT face=Calibri>&lt;SPAN style=&quot;mso-tab-count: 1&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>elseif temperature &amp;lt; min then&lt;o:p>&lt;/o:p>&lt;/FONT>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;SPAN style=&quot;COLOR: #0070c0; FONT-SIZE: 11pt&quot;>&lt;FONT face=Calibri>&lt;SPAN style=&quot;mso-tab-count: 2&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>feedback := &quot;Dangerous! Temperature too low.&quot;;&lt;o:p>&lt;/o:p>&lt;/FONT>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;SPAN style=&quot;COLOR: #0070c0; FONT-SIZE: 11pt&quot;>&lt;FONT face=Calibri>&lt;SPAN style=&quot;mso-tab-count: 1&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>else &lt;o:p>&lt;/o:p>&lt;/FONT>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;SPAN style=&quot;COLOR: #0070c0; FONT-SIZE: 11pt&quot;>&lt;FONT face=Calibri>&lt;SPAN style=&quot;mso-tab-count: 2&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>feedback := &quot;Temperature is in secure range&quot;;&lt;o:p>&lt;/o:p>&lt;/FONT>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;SPAN style=&quot;COLOR: #0070c0; FONT-SIZE: 11pt&quot;>&lt;FONT face=Calibri>&lt;SPAN style=&quot;mso-tab-count: 1&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>end if;&lt;o:p>&lt;/o:p>&lt;/FONT>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;SPAN style=&quot;COLOR: #0070c0; FONT-SIZE: 11pt&quot;>&lt;o:p>&lt;FONT face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;SPAN style=&quot;COLOR: #0070c0; FONT-SIZE: 11pt&quot;>&lt;FONT face=Calibri>end temperatureConstrains;&lt;o:p>&lt;/o:p>&lt;/FONT>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>If we input the temperature like 500, the algorithm should give output like “Temperature is in secure range”.&lt;/FONT>&lt;/P></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-T__wHZV-wngK92hLVRAsIQ" name="service_specification,_CVn7MNVlEeCbz_HpayPmUw" guid="-T__wHZV-wngK92hLVRAsIQ">
    <refinedDescription>&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>The following model is service specification diagram. It shows how Temperature Monitor provides service to and receives service from other participants. &lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;?xml:namespace prefix = o ns = &quot;urn:schemas-microsoft-com:office:office&quot; />&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;PAGE-BREAK-AFTER: avoid; TEXT-ALIGN: center; MARGIN: 0cm 0cm 0pt&quot; class=BodyMain align=center>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>&lt;?xml:namespace prefix = v ns = &quot;urn:schemas-microsoft-com:vml&quot; />&lt;v:shapetype id=_x0000_t75 stroked=&quot;f&quot; filled=&quot;f&quot; path=&quot;m@4@5l@4@11@9@11@9@5xe&quot; o:preferrelative=&quot;t&quot; o:spt=&quot;75&quot; coordsize=&quot;21600,21600&quot;>&lt;v:stroke joinstyle=&quot;miter&quot;>&lt;/v:stroke>&lt;v:formulas>&lt;v:f eqn=&quot;if lineDrawn pixelLineWidth 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @0 1 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum 0 0 @1&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @2 1 2&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @3 21600 pixelWidth&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @3 21600 pixelHeight&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @0 0 1&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @6 1 2&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @7 21600 pixelWidth&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @8 21600 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @7 21600 pixelHeight&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @10 21600 0&quot;>&lt;/v:f>&lt;/v:formulas>&lt;v:path o:connecttype=&quot;rect&quot; gradientshapeok=&quot;t&quot; o:extrusionok=&quot;f&quot;>&lt;/v:path>&lt;o:lock aspectratio=&quot;t&quot; v:ext=&quot;edit&quot;>&lt;/o:lock>&lt;/v:shapetype>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-ALIGN: center; MARGIN: 0cm 0cm 10pt&quot; class=MsoCaption align=center>&lt;IMG alt=&quot;Service Specfication Example&quot; src=&quot;./../../practice.architecture.mathematical_systems_engineering.base-sintef/workproducts/resources/Service Specfication Example.png&quot; width=360 height=326>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-ALIGN: center; MARGIN: 0cm 0cm 10pt&quot; class=MsoCaption align=center>&lt;a name=&quot;_Toc238805379&quot;>&lt;STRONG>&lt;FONT color=#4f81bd face=Calibri>Figure &lt;/FONT>&lt;/STRONG>&lt;/a>&lt;STRONG>&lt;FONT color=#4f81bd>&lt;FONT face=Calibri>&lt;SPAN style=&quot;mso-bookmark: _Toc238805379&quot;>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>12&lt;/SPAN>&lt;/SPAN>&lt;SPAN style=&quot;mso-bookmark: _Toc238805379&quot;>. Service Specification Example&lt;/SPAN>&lt;/FONT>&lt;/FONT>&lt;/STRONG>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>From this model we can see there are two service interfaces for the service provider Temperature Monitor. The required interface “DataReceiverInterface” provides two functions, which allows user to receive and filter temperature data. &lt;SPAN style=&quot;mso-spacerun: yes&quot;>&amp;nbsp;&lt;/SPAN>The provided interface “DataAnalyserInterface” provides two functions, which can check temperature and send the feedback to operators.&lt;/FONT>&lt;/P></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-eZiIcEuwyVJIGQkekZTwpw" name="structure_diagram,_CVn7M9VlEeCbz_HpayPmUw" guid="-eZiIcEuwyVJIGQkekZTwpw">
    <refinedDescription>&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>The following diagram is a block model for Temperature Monitor. &lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;?xml:namespace prefix = o ns = &quot;urn:schemas-microsoft-com:office:office&quot; />&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;o:p>&lt;IMG alt=&quot;Block diagram example&quot; src=&quot;./../../practice.architecture.mathematical_systems_engineering.base-sintef/workproducts/resources/Block.png&quot; width=545 height=270>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;PAGE-BREAK-AFTER: avoid; MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>&lt;?xml:namespace prefix = v ns = &quot;urn:schemas-microsoft-com:vml&quot; />&lt;v:shapetype id=_x0000_t75 stroked=&quot;f&quot; filled=&quot;f&quot; path=&quot;m@4@5l@4@11@9@11@9@5xe&quot; o:preferrelative=&quot;t&quot; o:spt=&quot;75&quot; coordsize=&quot;21600,21600&quot;>&lt;v:stroke joinstyle=&quot;miter&quot;>&lt;/v:stroke>&lt;v:formulas>&lt;v:f eqn=&quot;if lineDrawn pixelLineWidth 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @0 1 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum 0 0 @1&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @2 1 2&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @3 21600 pixelWidth&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @3 21600 pixelHeight&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @0 0 1&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @6 1 2&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @7 21600 pixelWidth&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @8 21600 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @7 21600 pixelHeight&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @10 21600 0&quot;>&lt;/v:f>&lt;/v:formulas>&lt;v:path o:connecttype=&quot;rect&quot; gradientshapeok=&quot;t&quot; o:extrusionok=&quot;f&quot;>&lt;/v:path>&lt;o:lock aspectratio=&quot;t&quot; v:ext=&quot;edit&quot;>&lt;/o:lock>&lt;/v:shapetype>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-ALIGN: center; MARGIN: 0cm 0cm 10pt&quot; class=MsoCaption align=center>&lt;a name=&quot;_Toc238805378&quot;>&lt;STRONG>&lt;FONT color=#4f81bd face=Calibri>Figure &lt;/FONT>&lt;/STRONG>&lt;/a>&lt;STRONG>&lt;FONT color=#4f81bd>&lt;FONT face=Calibri>&lt;SPAN style=&quot;mso-bookmark: _Toc238805378&quot;>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>11&lt;/SPAN>&lt;/SPAN>&lt;SPAN style=&quot;mso-bookmark: _Toc238805378&quot;>. Block diagram example&lt;/SPAN>&lt;/FONT>&lt;/FONT>&lt;/STRONG>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>We can see there are two internal blocks inside Temperature Monitor, and they are Data Receiver and Temperature Analyzer. The “Data Receiver” gets the real time temperature data and filters the useless data.&lt;SPAN style=&quot;mso-spacerun: yes&quot;>&amp;nbsp; &lt;/SPAN>Then the temperature data is passed to Block “Temperature Analyzer” gets the data and checks whether the data is in safe range. According to the checked result, the feedback result is sent to operator.&lt;/FONT>&lt;/P></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:ProcessDescription xmi:id="-4S37CfLRjqvNj7SIZwEj-Q" name="define_scoping_statements,_PI_DMdz_Ed-xB8a51ZHHaA" guid="-4S37CfLRjqvNj7SIZwEj-Q">
    <mainDescription>This capability pattern describes a baseline workflow for how to define scoping statements.</mainDescription>
  </org.eclipse.epf.uma:ProcessDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-XWBsi9ounz2L8i5_vjUpXQ" name="define_context_statement,_ehlk4Nz_Ed-xB8a51ZHHaA" guid="-XWBsi9ounz2L8i5_vjUpXQ">
    <refinedDescription>&lt;p>&#xD;
    The purpose of the Context Statement is to define the scope of a business model and to position it in its context. This&#xD;
    may be done by identifying relationships to some other business models or by developing and getting agreement to a more&#xD;
    informal representation of the target business being modelled in its environment. This informal representation takes&#xD;
    the form of a domain picture aiming to give an overall understanding of the domain. It focuses on describing&#xD;
    stakeholders and their relationships and identifies stakeholders concerns. It typically covers key value-chains and&#xD;
    information flows. The emphasis is on the process of building it, agreeing it with subject matter experts and thereby&#xD;
    understanding the context. Thus, it may not be maintained in subsequent phases of the development of the Product.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-VViS6vCw_gsxf0O8qTTBmg" name="define_vision_statement,_ehlk4dz_Ed-xB8a51ZHHaA" guid="-VViS6vCw_gsxf0O8qTTBmg">
    <refinedDescription>This document would be produced by a series of meetings, and the preparation and circulation drafts until agreement on its&#xD;
content is achieved by the Business Stakeholders identified at the start of the Project.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-UM9BN9g4w_pk3dzT33eTVw" name="context_statement,_ehlk4tz_Ed-xB8a51ZHHaA" guid="-UM9BN9g4w_pk3dzT33eTVw">
    <refinedDescription>&lt;p>&#xD;
    The Context statement should describe the following:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Business level: business value, criticality, …&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Domain model in a rich picture (or more formal) including main concepts, their relations and interactions&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Architecture level: current architecture (high level) with interactions, components, topology and deployment&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Technological level: existing artefacts, platforms, technologies&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Organizational level: people and competences&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Problems with the current system or solutions&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The notation used for the Context Statement depends on the existence or not of a higher level Business Model. Where&#xD;
    that exists, the notation will be the notation of the subsets of that model used. Where no higher level model exists,&#xD;
    the notation may be a Rich Picture or a set of Use Cases. In all cases, it will be accompanied by a list giving details&#xD;
    of all Business Stakeholders.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-XsQD7behjiuv0wF5wzvq4A" name="vision_statement,_ehlk5Nz_Ed-xB8a51ZHHaA" guid="-XsQD7behjiuv0wF5wzvq4A">
    <refinedDescription>&lt;p>&#xD;
    The Vision statement should describe the following:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Opportunities and risks&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Cost and schedule goals&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Business goals&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    This work product adds detail to the scope given in the Context Statement, so that Business Stakeholders can make&#xD;
    informed judgements about approving the (appropriate phase of) development of the Product.&#xD;
&lt;/p>&#xD;
This work product is a statement of what to improve, the motivation (i.e. what is wrong with the current situation), a&#xD;
description or indication of what the improvements might be and a gap analysis (a clear understanding of difference between&#xD;
the current and desired situations).</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-uZlxcd_O92dB28br72cgmw" name="business analyst,_3FUwUeGoEd-AyrTFSpVP8g" guid="-uZlxcd_O92dB28br72cgmw">
    <refinedDescription>Responsible for analyzing the business needs of clients to help identify business problems and propose solutions.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-NJo0W2u-bi446IhcVRoJVw" name="matlab_as_service,_iqwPpBRAEeGTU829fpxEZg" guid="-NJo0W2u-bi446IhcVRoJVw">
    <refinedDescription>&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>The usage of Providing MATLAB as a Service here will mainly satisfy the requirements from “Mathematic Modeling” and “Service Modeling“aspects.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;?xml:namespace prefix = o ns = &quot;urn:schemas-microsoft-com:office:office&quot; />&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>According to the introduction from MathWorks, there are three ways to deploy MATLAB as a web service currently&lt;?xml:namespace prefix = w ns = &quot;urn:schemas-microsoft-com:office:word&quot; />&lt;w:Sdt id=6082354 Citation=&quot;t&quot;>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>&lt;SPAN style=&quot;mso-spacerun: yes&quot;>&amp;nbsp;&lt;/SPAN>&lt;/SPAN>&lt;/w:Sdt>.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-INDENT: -18pt; MARGIN: 0cm 0cm 0pt 36pt; mso-list: l0 level1 lfo1&quot; class=BodyMain>&lt;SPAN style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;SPAN style=&quot;mso-list: Ignore&quot;>&lt;FONT size=3>·&lt;/FONT>&lt;SPAN style=&quot;FONT: 7pt 'Times New Roman'&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;FONT size=3 face=Calibri>Use MATLAB Builder NE to create a server-side .NET component;&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-INDENT: -18pt; MARGIN: 0cm 0cm 0pt 36pt; mso-list: l0 level1 lfo1&quot; class=BodyMain>&lt;SPAN style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;SPAN style=&quot;mso-list: Ignore&quot;>&lt;FONT size=3>·&lt;/FONT>&lt;SPAN style=&quot;FONT: 7pt 'Times New Roman'&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;FONT size=3 face=Calibri>Use MATLAB Builder JA to create a server-side Java component;&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-INDENT: -18pt; MARGIN: 0cm 0cm 0pt 36pt; mso-list: l0 level1 lfo1&quot; class=BodyMain>&lt;SPAN style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;SPAN style=&quot;mso-list: Ignore&quot;>&lt;FONT size=3>·&lt;/FONT>&lt;SPAN style=&quot;FONT: 7pt 'Times New Roman'&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;FONT size=3 face=Calibri>Use COM automation, CGI, or other technologies to access MATLAB through web.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=MsoNoSpacing>&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>With MATLAB Builder NE or JA, user can integrate MATLAB application with .NET and COM components, or Java program, and then deployed this application as web service. A .NET, or COM, or Java wrapper is used here to invoke the encrypted MATLAB functions. This wrapper runs against the MATLAB Compiler Runtime (MCR) and can share the MATLAB libraries. The MATLAB function is invoked as Java method or methods of any other COM or .NET class. &lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>MathWorks gives a mechanism to provide the MATLAB function into a deployable, portable, robust, scalable Web application, which we could see from the diagram below.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;PAGE-BREAK-AFTER: avoid; MARGIN: 0cm 0cm 0pt&quot; class=MsoNoSpacing>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>&lt;?xml:namespace prefix = v ns = &quot;urn:schemas-microsoft-com:vml&quot; />&lt;v:shapetype id=_x0000_t75 stroked=&quot;f&quot; filled=&quot;f&quot; path=&quot;m@4@5l@4@11@9@11@9@5xe&quot; o:preferrelative=&quot;t&quot; o:spt=&quot;75&quot; coordsize=&quot;21600,21600&quot;>&lt;v:stroke joinstyle=&quot;miter&quot;>&lt;/v:stroke>&lt;v:formulas>&lt;v:f eqn=&quot;if lineDrawn pixelLineWidth 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @0 1 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum 0 0 @1&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @2 1 2&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @3 21600 pixelWidth&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @3 21600 pixelHeight&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @0 0 1&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @6 1 2&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @7 21600 pixelWidth&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @8 21600 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @7 21600 pixelHeight&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @10 21600 0&quot;>&lt;/v:f>&lt;/v:formulas>&lt;v:path o:connecttype=&quot;rect&quot; gradientshapeok=&quot;t&quot; o:extrusionok=&quot;f&quot;>&lt;/v:path>&lt;o:lock aspectratio=&quot;t&quot; v:ext=&quot;edit&quot;>&lt;/o:lock>&lt;/v:shapetype>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-ALIGN: center; MARGIN: 0cm 0cm 10pt&quot; class=MsoCaption align=center>&lt;IMG alt=&quot;&quot; src=&quot;./../../practice.platform.matlab_modelica_development.base-sintef/workproducts/resources/MTALAB.bmp&quot; width=580 height=532>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-ALIGN: center; MARGIN: 0cm 0cm 10pt&quot; class=MsoCaption align=center>&lt;a name=&quot;_Toc238805380&quot;>&lt;STRONG>&lt;FONT color=#4f81bd face=Calibri>Figure &lt;/FONT>&lt;/STRONG>&lt;/a>&lt;STRONG>&lt;FONT color=#4f81bd>&lt;FONT face=Calibri>&lt;SPAN style=&quot;mso-bookmark: _Toc238805380&quot;>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>13&lt;/SPAN>&lt;/SPAN>&lt;SPAN style=&quot;mso-bookmark: _Toc238805380&quot;>. Architecture of Proving MATLAB as a Service&lt;/SPAN>&lt;/FONT>&lt;/FONT>&lt;/STRONG>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>For builder NE, users can integrate a MATLAB based .NET or COM component into an existing .NET or COM application by installing both the component and the MCR on the target machine. For Web applications, the builder also provides a .NET custom control that allows zoom, pan, and rotate functionality for figures created in MATLAB. Users can also use the custom control from the toolbox in Visual Studio. With the builder support for the .NET remoting API, users can also run their class as a persistent service or spread their processing across multiple processes. &lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>For builder JA, MATLAB allows users to present the MATLAB calculation or simulation results into servlets or Java Server Page. Users can integrate a MATLAB based Java class into an existing Java infrastructure by installing the class and the MCR on the target machine. For Web applications that use JSP technology or servlets, the builder provides AJAX-based zoom, pan, and rotate controls for figures created in MATLAB. Using the builder's Remote Method Invocation (RMI) interface, users can also run their class as a persistent service, or spread their processing across multiple processes. Java classes created with the builder can be distributed at no additional charge.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>A typical example of providing MATLAB as web service is shown in the website of MATLAB, which we could see in the following table. This example allows users to input parameters from web browser, then the parameter will be passed to MATLAB service and return the simulation result, the result will be present in client web browser.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=MsoNoSpacing>&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;PAGE-BREAK-AFTER: avoid; MARGIN: 0cm 0cm 0pt&quot; class=MsoNoSpacing>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-ALIGN: center; MARGIN: 0cm 0cm 10pt&quot; class=MsoCaption align=center>&lt;IMG alt=&quot;&quot; src=&quot;./../../practice.platform.matlab_modelica_development.base-sintef/workproducts/resources/MATLAB2.bmp&quot; width=580 height=488>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-ALIGN: center; MARGIN: 0cm 0cm 10pt&quot; class=MsoCaption align=center>&lt;a name=&quot;_Toc238805381&quot;>&lt;STRONG>&lt;FONT color=#4f81bd face=Calibri>Figure &lt;/FONT>&lt;/STRONG>&lt;/a>&lt;STRONG>&lt;FONT color=#4f81bd>&lt;FONT face=Calibri>&lt;SPAN style=&quot;mso-bookmark: _Toc238805381&quot;>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>14&lt;/SPAN>&lt;/SPAN>&lt;SPAN style=&quot;mso-bookmark: _Toc238805381&quot;>. Calculation Results from MATLAB Web Service&lt;/SPAN>&lt;/FONT>&lt;/FONT>&lt;/STRONG>&lt;/P></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-qzCfO-JWQ9iyqnFCrXM_TA" name="modelica_design_time_model,_iqwPpxRAEeGTU829fpxEZg" guid="-qzCfO-JWQ9iyqnFCrXM_TA">
    <refinedDescription>&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>The Designing Time Model is the way that the Modelica Complier is integrated with the target system as a server. As a result, the client application can compile the Modelica Model and do simulation dynamically.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;?xml:namespace prefix = o ns = &quot;urn:schemas-microsoft-com:office:office&quot; />&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>In the context of design time models, we would like to integrate the Modelica Server to our development process. We will have a model-based software development environment which allows interacting between Java program and Modelica Server dynamically. The OpenModelica API would be used here to integrate the Modelica Server with existing Java program. Domain concepts in Eclipse Ecore can also be used as a basis for automatically creating models (classes) in Modelica. The ideal Modelica invoke process would like:&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-INDENT: -18pt; MARGIN: 0cm 0cm 0pt 36pt; mso-list: l0 level1 lfo1&quot; class=BodyMain>&lt;SPAN style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;SPAN style=&quot;mso-list: Ignore&quot;>&lt;FONT size=3>·&lt;/FONT>&lt;SPAN style=&quot;FONT: 7pt 'Times New Roman'&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;FONT size=3 face=Calibri>The users can create the models in client side of target system;&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-INDENT: -18pt; MARGIN: 0cm 0cm 0pt 36pt; mso-list: l0 level1 lfo1&quot; class=BodyMain>&lt;SPAN style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;SPAN style=&quot;mso-list: Ignore&quot;>&lt;FONT size=3>·&lt;/FONT>&lt;SPAN style=&quot;FONT: 7pt 'Times New Roman'&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;FONT size=3 face=Calibri>The users send the models as required parameters to web server;&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-INDENT: -18pt; MARGIN: 0cm 0cm 0pt 36pt; mso-list: l0 level1 lfo1&quot; class=BodyMain>&lt;SPAN style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;SPAN style=&quot;mso-list: Ignore&quot;>&lt;FONT size=3>·&lt;/FONT>&lt;SPAN style=&quot;FONT: 7pt 'Times New Roman'&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;FONT size=3 face=Calibri>The web server interacts with Modelica Server and gets the calculated results or simulations;&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-INDENT: -18pt; MARGIN: 0cm 0cm 0pt 36pt; mso-list: l0 level1 lfo1&quot; class=BodyMain>&lt;SPAN style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;SPAN style=&quot;mso-list: Ignore&quot;>&lt;FONT size=3>·&lt;/FONT>&lt;SPAN style=&quot;FONT: 7pt 'Times New Roman'&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;FONT size=3 face=Calibri>The calculated results or simulations are sent to client side dynamically;&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 10pt&quot; class=MsoNormal>&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>The following is an architecture diagram we design for Modelica Web Service.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;PAGE-BREAK-AFTER: avoid; TEXT-ALIGN: center; MARGIN: 0cm 0cm 0pt&quot; class=MsoNoSpacing align=center>&lt;SPAN style=&quot;FONT-SIZE: 12pt; mso-no-proof: yes&quot;>&lt;?xml:namespace prefix = v ns = &quot;urn:schemas-microsoft-com:vml&quot; />&lt;v:shapetype id=_x0000_t75 stroked=&quot;f&quot; filled=&quot;f&quot; path=&quot;m@4@5l@4@11@9@11@9@5xe&quot; o:preferrelative=&quot;t&quot; o:spt=&quot;75&quot; coordsize=&quot;21600,21600&quot;>&lt;v:stroke joinstyle=&quot;miter&quot;>&lt;/v:stroke>&lt;v:formulas>&lt;v:f eqn=&quot;if lineDrawn pixelLineWidth 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @0 1 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum 0 0 @1&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @2 1 2&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @3 21600 pixelWidth&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @3 21600 pixelHeight&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @0 0 1&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @6 1 2&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @7 21600 pixelWidth&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @8 21600 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @7 21600 pixelHeight&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @10 21600 0&quot;>&lt;/v:f>&lt;/v:formulas>&lt;v:path o:connecttype=&quot;rect&quot; gradientshapeok=&quot;t&quot; o:extrusionok=&quot;f&quot;>&lt;/v:path>&lt;o:lock aspectratio=&quot;t&quot; v:ext=&quot;edit&quot;>&lt;/o:lock>&lt;/v:shapetype>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-ALIGN: center; MARGIN: 0cm 0cm 10pt&quot; class=MsoCaption align=center>&lt;IMG alt=&quot;&quot; src=&quot;./../../practice.platform.matlab_modelica_development.base-sintef/workproducts/resources/untitled.bmp&quot; width=532 height=492>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-ALIGN: center; MARGIN: 0cm 0cm 10pt&quot; class=MsoCaption align=center>&lt;a name=&quot;_Toc238805383&quot;>&lt;STRONG>&lt;FONT color=#4f81bd face=Calibri>Figure &lt;/FONT>&lt;/STRONG>&lt;/a>&lt;STRONG>&lt;FONT color=#4f81bd>&lt;FONT face=Calibri>&lt;SPAN style=&quot;mso-bookmark: _Toc238805383&quot;>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>16&lt;/SPAN>&lt;/SPAN>&lt;SPAN style=&quot;mso-bookmark: _Toc238805383&quot;>. Modelica Web Service Architecture&lt;/SPAN>&lt;/FONT>&lt;/FONT>&lt;/STRONG>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=MsoNoSpacing>&lt;SPAN style=&quot;FONT-SIZE: 12pt&quot;>&lt;o:p>&lt;FONT face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>Run time models integration is a simple way of invoking Modelica model and it just support the Modelica functionalities in run time. However, the final target of the methodology is to provide a web service mechanism for design-time interaction, and it can typically used for tool integration. For instants, it can provide integrating editors with the OpenModelica compiler.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&amp;nbsp;&lt;/P></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-gDHm8EUfH5fwEdaDEZiFEg" name="modelica_web_service,_iqwPqhRAEeGTU829fpxEZg" guid="-gDHm8EUfH5fwEdaDEZiFEg">
    <refinedDescription>&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>The Running Time Model is the way that the Modelica Model can be invoked as a program at the operating-system level, which is usually a Java class here.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;?xml:namespace prefix = o ns = &quot;urn:schemas-microsoft-com:office:office&quot; />&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>We have recognized the OpenModelica Project&lt;SPAN style=&quot;mso-spacerun: yes&quot;>&amp;nbsp;&amp;nbsp; &lt;/SPAN>as a good chance to achieve the above benefits with a reasonable amount of time and effort. The OpenModelica Project is an open source project and the OpenModelica Compiler (OMC) is by default targeted to C code generation. It would be possible to wrap the C code of a model into a Java wrapper code to be used by the Java Web Service with Java Native Interface technology. However, this approach leads to unmanaged native code to be called. More, they are not easily portable because of the need to be compiled separately for each target platform.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>The following picture shows translation phases of OpenModelica Compiler&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;PAGE-BREAK-AFTER: avoid; TEXT-ALIGN: center; MARGIN: 0cm 0cm 10pt&quot; class=MsoNormal align=center>&lt;?xml:namespace prefix = v ns = &quot;urn:schemas-microsoft-com:vml&quot; />&lt;v:shapetype id=_x0000_t75 stroked=&quot;f&quot; filled=&quot;f&quot; path=&quot;m@4@5l@4@11@9@11@9@5xe&quot; o:preferrelative=&quot;t&quot; o:spt=&quot;75&quot; coordsize=&quot;21600,21600&quot;>&lt;v:stroke joinstyle=&quot;miter&quot;>&lt;/v:stroke>&lt;v:formulas>&lt;v:f eqn=&quot;if lineDrawn pixelLineWidth 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @0 1 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum 0 0 @1&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @2 1 2&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @3 21600 pixelWidth&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @3 21600 pixelHeight&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @0 0 1&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @6 1 2&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @7 21600 pixelWidth&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @8 21600 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @7 21600 pixelHeight&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @10 21600 0&quot;>&lt;/v:f>&lt;/v:formulas>&lt;v:path o:connecttype=&quot;rect&quot; gradientshapeok=&quot;t&quot; o:extrusionok=&quot;f&quot;>&lt;/v:path>&lt;o:lock aspectratio=&quot;t&quot; v:ext=&quot;edit&quot;>&lt;IMG alt=&quot;&quot; src=&quot;./../../practice.platform.matlab_modelica_development.base-sintef/workproducts/resources/MOdelica Runtime.bmp&quot; width=512 height=384>&lt;/o:lock>&lt;/v:shapetype>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-ALIGN: center; MARGIN: 0cm 0cm 10pt&quot; class=MsoCaption align=center>&lt;a name=&quot;_Toc238805382&quot;>&lt;STRONG>&lt;FONT color=#4f81bd face=Calibri>Figure &lt;/FONT>&lt;/STRONG>&lt;/a>&lt;STRONG>&lt;FONT color=#4f81bd>&lt;FONT face=Calibri>&lt;SPAN style=&quot;mso-bookmark: _Toc238805382&quot;>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>15&lt;/SPAN>&lt;/SPAN>&lt;SPAN style=&quot;mso-bookmark: _Toc238805382&quot;>. OpenModelica Translation Phases&lt;/SPAN>&lt;/FONT>&lt;/FONT>&lt;/STRONG>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>In short description of the translation process of Modelica models, the OMC takes the source code of a model and translates it through several transformations into an internal representation of simulation code. In the last phase, C code is generated, compiled and linked with a simulation runtime into the final executable file. The simulation of the model is done by running the executable.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>In the context of run time models, system architect invoke model in this way:&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-INDENT: -18pt; MARGIN: 0cm 0cm 0pt 36pt; mso-list: l0 level1 lfo1&quot; class=BodyMain>&lt;SPAN style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;SPAN style=&quot;mso-list: Ignore&quot;>&lt;FONT size=3>·&lt;/FONT>&lt;SPAN style=&quot;FONT: 7pt 'Times New Roman'&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;FONT size=3 face=Calibri>Model the functionality according to the requirement, present the models as Modelica Script;&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-INDENT: -18pt; MARGIN: 0cm 0cm 0pt 36pt; mso-list: l0 level1 lfo1&quot; class=BodyMain>&lt;SPAN style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;SPAN style=&quot;mso-list: Ignore&quot;>&lt;FONT size=3>·&lt;/FONT>&lt;SPAN style=&quot;FONT: 7pt 'Times New Roman'&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;FONT size=3 face=Calibri>See how these Modelica Script is compiled in Modelica compilers like OpenModelica, get the compiled results. Usually they are some C++ files; &lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-INDENT: -18pt; MARGIN: 0cm 0cm 0pt 36pt; mso-list: l0 level1 lfo1&quot; class=BodyMain>&lt;SPAN style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;SPAN style=&quot;mso-list: Ignore&quot;>&lt;FONT size=3>·&lt;/FONT>&lt;SPAN style=&quot;FONT: 7pt 'Times New Roman'&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;FONT size=3 face=Calibri>Use pre-compiled Java program units to invoke the executables C++ Modelica method for existing system through Java Native Interface.&lt;/FONT>&lt;/P></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-3vYgaPEIoxIXf7Va17jPmg" name="as_is_architecture_model,_iq6AoRRAEeGTU829fpxEZg" guid="-3vYgaPEIoxIXf7Va17jPmg">
    <refinedDescription>&amp;lt;TBD&amp;gt;</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-R6k4Ngmecdud894jWo1o7w" name="behavior_diagram,_iq6ApxRAEeGTU829fpxEZg" guid="-R6k4Ngmecdud894jWo1o7w">
    <refinedDescription>&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>The following diagram is a BPMN example which show the details process of how Temperature Monitoring System get real time temperature and report feedback.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;?xml:namespace prefix = o ns = &quot;urn:schemas-microsoft-com:office:office&quot; />&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;PAGE-BREAK-AFTER: avoid; TEXT-ALIGN: center; MARGIN: 0cm 0cm 0pt&quot; class=BodyMain align=center>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>&lt;?xml:namespace prefix = v ns = &quot;urn:schemas-microsoft-com:vml&quot; />&lt;v:shapetype id=_x0000_t75 stroked=&quot;f&quot; filled=&quot;f&quot; path=&quot;m@4@5l@4@11@9@11@9@5xe&quot; o:preferrelative=&quot;t&quot; o:spt=&quot;75&quot; coordsize=&quot;21600,21600&quot;>&lt;v:stroke joinstyle=&quot;miter&quot;>&lt;/v:stroke>&lt;v:formulas>&lt;v:f eqn=&quot;if lineDrawn pixelLineWidth 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @0 1 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum 0 0 @1&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @2 1 2&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @3 21600 pixelWidth&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @3 21600 pixelHeight&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @0 0 1&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @6 1 2&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @7 21600 pixelWidth&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @8 21600 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @7 21600 pixelHeight&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @10 21600 0&quot;>&lt;/v:f>&lt;/v:formulas>&lt;v:path o:connecttype=&quot;rect&quot; gradientshapeok=&quot;t&quot; o:extrusionok=&quot;f&quot;>&lt;/v:path>&lt;o:lock aspectratio=&quot;t&quot; v:ext=&quot;edit&quot;>&lt;/o:lock>&lt;/v:shapetype>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-ALIGN: center; MARGIN: 0cm 0cm 10pt&quot; class=MsoCaption align=center>&lt;IMG alt=BPMN src=&quot;./../../practice.architecture.mathematical_systems_engineering.base-sintef/workproducts/resources/BPMN.png&quot; width=600 height=423>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-ALIGN: center; MARGIN: 0cm 0cm 10pt&quot; class=MsoCaption align=center>&lt;a name=&quot;_Toc238805376&quot;>&lt;STRONG>&lt;FONT color=#4f81bd face=Calibri>Figure &lt;/FONT>&lt;/STRONG>&lt;/a>&lt;STRONG>&lt;FONT color=#4f81bd>&lt;FONT face=Calibri>&lt;SPAN style=&quot;mso-bookmark: _Toc238805376&quot;>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>9&lt;/SPAN>&lt;/SPAN>&lt;SPAN style=&quot;mso-bookmark: _Toc238805376&quot;>. BPMN example for Real Time Temperature Report&lt;/SPAN>&lt;/FONT>&lt;/FONT>&lt;/STRONG>&lt;/P></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-JN3lmiSgRsJfkCWvSMeq8Q" name="community_services_architecture,_iq6AqhRAEeGTU829fpxEZg" guid="-JN3lmiSgRsJfkCWvSMeq8Q">
    <refinedDescription>&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>Because we use the top down approach solution, with the “community services architecture”, we can have the top level view of how participants work together for some purpose. The services architecture of a community does not assume or require any one controlling entity or process. Other services architectures and service contracts may be used here. A community Services Architecture is defined using a UML Collaboration.&lt;SPAN style=&quot;mso-spacerun: yes&quot;>&amp;nbsp; &lt;/SPAN>The purpose of collaboration is to illustrate how kinds of entities work together for some purpose. The services architecture serves to define the requirements of each of the participants. . The participant roles are filled by participants with service ports required of the entities that fill these roles and are then bound by the services architectures in which they participate.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;?xml:namespace prefix = o ns = &quot;urn:schemas-microsoft-com:office:office&quot; />&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>This is a service architecture diagram for Scientific Temperature Monitoring System. It shows the Service Orient Architecture design of how user uses the Temperature Monitoring System.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;IMG alt=&quot;SoaML Service Architecture&quot; src=&quot;./../../practice.architecture.mathematical_systems_engineering.base-sintef/workproducts/resources/SoaML Service Architecture.png&quot; width=600 height=365>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;PAGE-BREAK-AFTER: avoid; MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>&lt;?xml:namespace prefix = v ns = &quot;urn:schemas-microsoft-com:vml&quot; />&lt;v:shapetype id=_x0000_t75 stroked=&quot;f&quot; filled=&quot;f&quot; path=&quot;m@4@5l@4@11@9@11@9@5xe&quot; o:preferrelative=&quot;t&quot; o:spt=&quot;75&quot; coordsize=&quot;21600,21600&quot;>&lt;v:stroke joinstyle=&quot;miter&quot;>&lt;/v:stroke>&lt;v:formulas>&lt;v:f eqn=&quot;if lineDrawn pixelLineWidth 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @0 1 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum 0 0 @1&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @2 1 2&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @3 21600 pixelWidth&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @3 21600 pixelHeight&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @0 0 1&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @6 1 2&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @7 21600 pixelWidth&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @8 21600 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @7 21600 pixelHeight&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @10 21600 0&quot;>&lt;/v:f>&lt;/v:formulas>&lt;v:path o:connecttype=&quot;rect&quot; gradientshapeok=&quot;t&quot; o:extrusionok=&quot;f&quot;>&lt;/v:path>&lt;o:lock aspectratio=&quot;t&quot; v:ext=&quot;edit&quot;>&lt;/o:lock>&lt;/v:shapetype>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-ALIGN: center; MARGIN: 0cm 0cm 10pt&quot; class=MsoCaption align=center>&lt;a name=&quot;_Toc238805375&quot;>&lt;STRONG>&lt;FONT color=#4f81bd face=Calibri>Figure &lt;/FONT>&lt;/STRONG>&lt;/a>&lt;STRONG>&lt;FONT color=#4f81bd>&lt;FONT face=Calibri>&lt;SPAN style=&quot;mso-bookmark: _Toc238805375&quot;>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>8&lt;/SPAN>&lt;/SPAN>&lt;SPAN style=&quot;mso-bookmark: _Toc238805375&quot;>. Service Architecture example&lt;/SPAN>&lt;/FONT>&lt;/FONT>&lt;/STRONG>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>There are three service participants in this model: Operator, Administrator, and Temperature System. The three participants communicate with each other through different service collaboration services.&lt;/FONT>&lt;/P></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-60c50oD2D0y_kJ2VTrcOqg" name="participant_services_architecture,_iq6ArRRAEeGTU829fpxEZg" guid="-60c50oD2D0y_kJ2VTrcOqg">
    <refinedDescription>&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>An example of participant service architecture for “Temperature Monitor” is shown in the following diagram.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;?xml:namespace prefix = o ns = &quot;urn:schemas-microsoft-com:office:office&quot; />&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;PAGE-BREAK-AFTER: avoid; MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>&lt;?xml:namespace prefix = v ns = &quot;urn:schemas-microsoft-com:vml&quot; />&lt;v:shapetype id=_x0000_t75 stroked=&quot;f&quot; filled=&quot;f&quot; path=&quot;m@4@5l@4@11@9@11@9@5xe&quot; o:preferrelative=&quot;t&quot; o:spt=&quot;75&quot; coordsize=&quot;21600,21600&quot;>&lt;v:stroke joinstyle=&quot;miter&quot;>&lt;/v:stroke>&lt;v:formulas>&lt;v:f eqn=&quot;if lineDrawn pixelLineWidth 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @0 1 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum 0 0 @1&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @2 1 2&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @3 21600 pixelWidth&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @3 21600 pixelHeight&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @0 0 1&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @6 1 2&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @7 21600 pixelWidth&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @8 21600 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @7 21600 pixelHeight&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @10 21600 0&quot;>&lt;/v:f>&lt;/v:formulas>&lt;v:path o:connecttype=&quot;rect&quot; gradientshapeok=&quot;t&quot; o:extrusionok=&quot;f&quot;>&lt;/v:path>&lt;o:lock aspectratio=&quot;t&quot; v:ext=&quot;edit&quot;>&lt;/o:lock>&lt;/v:shapetype>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-ALIGN: center; MARGIN: 0cm 0cm 10pt&quot; class=MsoCaption align=center>&lt;IMG alt=&quot;Participant Services Architecture&quot; src=&quot;./../../practice.architecture.mathematical_systems_engineering.base-sintef/workproducts/resources/Participant Services Architecture.png&quot; width=537 height=277>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-ALIGN: center; MARGIN: 0cm 0cm 10pt&quot; class=MsoCaption align=center>&lt;a name=&quot;_Toc238805377&quot;>&lt;STRONG>&lt;FONT color=#4f81bd face=Calibri>Figure &lt;/FONT>&lt;/STRONG>&lt;/a>&lt;STRONG>&lt;FONT color=#4f81bd>&lt;FONT face=Calibri>&lt;SPAN style=&quot;mso-bookmark: _Toc238805377&quot;>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>10&lt;/SPAN>&lt;/SPAN>&lt;SPAN style=&quot;mso-bookmark: _Toc238805377&quot;>. Participant services architecture Example&lt;/SPAN>&lt;/FONT>&lt;/FONT>&lt;/STRONG>&lt;/P></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-A60wOv2Hdz01mo4ZfxAjvg" name="requirement_diagram_and_use_case_diagram,_iq6AsBRAEeGTU829fpxEZg" guid="-A60wOv2Hdz01mo4ZfxAjvg">
    <refinedDescription>&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>The following diagram is a requirement diagram of Temperature Monitoring Scientific software.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>&lt;/FONT>&amp;nbsp;&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>&lt;IMG alt=&quot;Requirement Diagram&quot; src=&quot;./../../practice.architecture.mathematical_systems_engineering.base-sintef/workproducts/./resources/Requirement Diagram.png&quot; width=588 height=290>&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-ALIGN: center; MARGIN: 0cm 0cm 0pt&quot; class=BodyMain align=center>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>&lt;?xml:namespace prefix = v ns = &quot;urn:schemas-microsoft-com:vml&quot; />&lt;v:shapetype id=_x0000_t75 coordsize=&quot;21600,21600&quot; o:spt=&quot;75&quot; o:preferrelative=&quot;t&quot; path=&quot;m@4@5l@4@11@9@11@9@5xe&quot; filled=&quot;f&quot; stroked=&quot;f&quot;>&lt;v:stroke joinstyle=&quot;miter&quot;>&lt;/v:stroke>&lt;v:formulas>&lt;v:f eqn=&quot;if lineDrawn pixelLineWidth 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @0 1 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum 0 0 @1&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @2 1 2&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @3 21600 pixelWidth&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @3 21600 pixelHeight&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @0 0 1&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @6 1 2&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @7 21600 pixelWidth&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @8 21600 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @7 21600 pixelHeight&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @10 21600 0&quot;>&lt;/v:f>&lt;/v:formulas>&lt;v:path o:extrusionok=&quot;f&quot; gradientshapeok=&quot;t&quot; o:connecttype=&quot;rect&quot;>&lt;/v:path>&lt;?xml:namespace prefix = o ns = &quot;urn:schemas-microsoft-com:office:office&quot; />&lt;o:lock v:ext=&quot;edit&quot; aspectratio=&quot;t&quot;>&lt;/o:lock>&lt;/v:shapetype>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-ALIGN: center; MARGIN: 0cm 0cm 10pt&quot; class=MsoCaption align=center>&lt;a name=&quot;_Toc238805373&quot;>&lt;STRONG>&lt;FONT color=#4f81bd face=Calibri>Figure &lt;/FONT>&lt;/STRONG>&lt;/a>&lt;STRONG>&lt;FONT color=#4f81bd>&lt;FONT face=Calibri>&lt;SPAN style=&quot;mso-bookmark: _Toc238805373&quot;>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>6&lt;/SPAN>&lt;/SPAN>&lt;SPAN style=&quot;mso-bookmark: _Toc238805373&quot;>. MOSiSaS Methodology Requirement Diagram&lt;/SPAN>&lt;/FONT>&lt;/FONT>&lt;/STRONG>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>This requirement diagram presents the requirements from two aspects: Functionality and Operating Environment. There are also some sub requirements in each specific aspect.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3>&lt;FONT face=Calibri>The requirement diagram includes all the requirements while use case diagram presents the functional requirements. Use case is considered as a mechanism to capture the functional system requirement.&lt;SPAN style=&quot;mso-spacerun: yes&quot;>&amp;nbsp; &lt;/SPAN>&lt;/FONT>&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>The following diagram is a use case diagram shows the functional requirement in the scientific temperature monitoring system:&lt;/FONT>&lt;SPAN style=&quot;BORDER-BOTTOM: black 1pt; BORDER-LEFT: black 1pt; PADDING-BOTTOM: 0cm; PADDING-LEFT: 0cm; LAYOUT-GRID-MODE: line; PADDING-RIGHT: 0cm; FONT-FAMILY: 'Times New Roman','serif'; BACKGROUND: black; COLOR: black; FONT-SIZE: 0pt; BORDER-TOP: black 1pt; BORDER-RIGHT: black 1pt; PADDING-TOP: 0cm; mso-fareast-font-family: 'Times New Roman'; mso-border-alt: none black 0cm; mso-font-width: 0%&quot;> &lt;/SPAN>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-ALIGN: center; MARGIN: 0cm 0cm 10pt&quot; class=MsoCaption align=center>&lt;STRONG>&lt;FONT color=#4f81bd>&lt;FONT face=Calibri>&lt;SPAN style=&quot;mso-bookmark: _Toc238805374&quot;>&lt;/SPAN>&lt;/FONT>&lt;/FONT>&lt;/STRONG>&amp;nbsp;&lt;/P>&#xD;
&lt;P style=&quot;TEXT-ALIGN: center; MARGIN: 0cm 0cm 10pt&quot; class=MsoCaption align=center>&lt;STRONG>&lt;FONT color=#4f81bd>&lt;FONT face=Calibri>&lt;SPAN style=&quot;mso-bookmark: _Toc238805374&quot;>&lt;IMG alt=&quot;Use Case&quot; src=&quot;./../../practice.architecture.mathematical_systems_engineering.base-sintef/workproducts/./resources/Use Case.png&quot; width=600 height=420>&lt;/SPAN>&lt;/FONT>&lt;/FONT>&lt;/STRONG>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-ALIGN: center; MARGIN: 0cm 0cm 10pt&quot; class=MsoCaption align=center>&lt;STRONG>&lt;FONT color=#4f81bd>&lt;FONT face=Calibri>&lt;SPAN style=&quot;mso-bookmark: _Toc238805374&quot;>&lt;a name=&quot;_Toc238805374&quot;>&lt;STRONG>&lt;FONT color=#4f81bd face=Calibri>Figure &lt;/FONT>&lt;/STRONG>&lt;/a>&lt;STRONG>&lt;FONT color=#4f81bd>&lt;FONT face=Calibri>&lt;SPAN style=&quot;mso-bookmark: _Toc238805374&quot;>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>7&lt;/SPAN>&lt;/SPAN>&lt;SPAN style=&quot;mso-bookmark: _Toc238805374&quot;>. Use Case example&lt;/SPAN>&lt;/FONT>&lt;/FONT>&lt;/STRONG>&lt;/SPAN>&lt;/FONT>&lt;/FONT>&lt;/STRONG>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>The system actors, such as Administrator and Operator, have different use cases, which stand for the functional requirements from different actors. The relationship between Use Cases could be include or extend.&lt;/FONT>&lt;/P></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-HdlBhQvIgUJ1DBio6jM4wA" name="logical_architecture,_iq6AsxRAEeGTU829fpxEZg" guid="-HdlBhQvIgUJ1DBio6jM4wA">
    <refinedDescription>&amp;lt;TBD&amp;gt;</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-s1rV4nC7sWGWIBuKzxOgMw" name="matlab_or_modelica_mathematical_model,_irDxoRRAEeGTU829fpxEZg" guid="-s1rV4nC7sWGWIBuKzxOgMw">
    <refinedDescription>&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>Here we use Temperature Constrains as an example to show how to use Modelica Language. &lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;?xml:namespace prefix = o ns = &quot;urn:schemas-microsoft-com:office:office&quot; />&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>The temperature checking algorithm Modelica script:&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;SPAN style=&quot;COLOR: #0070c0; FONT-SIZE: 11pt&quot;>&lt;FONT face=Calibri>function temperatureConstrains&lt;o:p>&lt;/o:p>&lt;/FONT>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;SPAN style=&quot;COLOR: #0070c0; FONT-SIZE: 11pt&quot;>&lt;FONT face=Calibri>&lt;SPAN style=&quot;mso-tab-count: 1&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>input&lt;SPAN style=&quot;mso-tab-count: 1&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>Real temperature;&lt;o:p>&lt;/o:p>&lt;/FONT>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;SPAN style=&quot;COLOR: #0070c0; FONT-SIZE: 11pt&quot;>&lt;FONT face=Calibri>&lt;SPAN style=&quot;mso-tab-count: 1&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>output&lt;SPAN style=&quot;mso-tab-count: 1&quot;>&amp;nbsp; &lt;/SPAN>String feedback;&lt;o:p>&lt;/o:p>&lt;/FONT>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;SPAN style=&quot;COLOR: #0070c0; FONT-SIZE: 11pt&quot;>&lt;FONT face=Calibri>protected&lt;o:p>&lt;/o:p>&lt;/FONT>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;SPAN style=&quot;COLOR: #0070c0; FONT-SIZE: 11pt&quot;>&lt;FONT face=Calibri>&lt;SPAN style=&quot;mso-tab-count: 1&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>constant Real max = 2000;&lt;o:p>&lt;/o:p>&lt;/FONT>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;SPAN style=&quot;COLOR: #0070c0; FONT-SIZE: 11pt&quot;>&lt;FONT face=Calibri>&lt;SPAN style=&quot;mso-tab-count: 1&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>constant Real min = -200;&lt;o:p>&lt;/o:p>&lt;/FONT>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;SPAN style=&quot;COLOR: #0070c0; FONT-SIZE: 11pt&quot;>&lt;o:p>&lt;FONT face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;SPAN style=&quot;COLOR: #0070c0; FONT-SIZE: 11pt&quot;>&lt;FONT face=Calibri>algorithm&lt;o:p>&lt;/o:p>&lt;/FONT>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;SPAN style=&quot;COLOR: #0070c0; FONT-SIZE: 11pt&quot;>&lt;FONT face=Calibri>&lt;SPAN style=&quot;mso-tab-count: 1&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>if temperature &amp;gt; max then&lt;o:p>&lt;/o:p>&lt;/FONT>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;SPAN style=&quot;COLOR: #0070c0; FONT-SIZE: 11pt&quot;>&lt;FONT face=Calibri>&lt;SPAN style=&quot;mso-tab-count: 2&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>feedback := &quot;Dangerous! Temperature too high.&quot;;&lt;o:p>&lt;/o:p>&lt;/FONT>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;SPAN style=&quot;COLOR: #0070c0; FONT-SIZE: 11pt&quot;>&lt;FONT face=Calibri>&lt;SPAN style=&quot;mso-tab-count: 1&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>elseif temperature &amp;lt; min then&lt;o:p>&lt;/o:p>&lt;/FONT>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;SPAN style=&quot;COLOR: #0070c0; FONT-SIZE: 11pt&quot;>&lt;FONT face=Calibri>&lt;SPAN style=&quot;mso-tab-count: 2&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>feedback := &quot;Dangerous! Temperature too low.&quot;;&lt;o:p>&lt;/o:p>&lt;/FONT>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;SPAN style=&quot;COLOR: #0070c0; FONT-SIZE: 11pt&quot;>&lt;FONT face=Calibri>&lt;SPAN style=&quot;mso-tab-count: 1&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>else &lt;o:p>&lt;/o:p>&lt;/FONT>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;SPAN style=&quot;COLOR: #0070c0; FONT-SIZE: 11pt&quot;>&lt;FONT face=Calibri>&lt;SPAN style=&quot;mso-tab-count: 2&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>feedback := &quot;Temperature is in secure range&quot;;&lt;o:p>&lt;/o:p>&lt;/FONT>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;SPAN style=&quot;COLOR: #0070c0; FONT-SIZE: 11pt&quot;>&lt;FONT face=Calibri>&lt;SPAN style=&quot;mso-tab-count: 1&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>end if;&lt;o:p>&lt;/o:p>&lt;/FONT>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;SPAN style=&quot;COLOR: #0070c0; FONT-SIZE: 11pt&quot;>&lt;o:p>&lt;FONT face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;SPAN style=&quot;COLOR: #0070c0; FONT-SIZE: 11pt&quot;>&lt;FONT face=Calibri>end temperatureConstrains;&lt;o:p>&lt;/o:p>&lt;/FONT>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>If we input the temperature like 500, the algorithm should give output like “Temperature is in secure range”.&lt;/FONT>&lt;/P></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-plU_KWt0ZMWipbFOXrKKjg" name="service_specification,_irDxpBRAEeGTU829fpxEZg" guid="-plU_KWt0ZMWipbFOXrKKjg">
    <refinedDescription>&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>The following model is service specification diagram. It shows how Temperature Monitor provides service to and receives service from other participants. &lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;?xml:namespace prefix = o ns = &quot;urn:schemas-microsoft-com:office:office&quot; />&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;PAGE-BREAK-AFTER: avoid; TEXT-ALIGN: center; MARGIN: 0cm 0cm 0pt&quot; class=BodyMain align=center>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>&lt;?xml:namespace prefix = v ns = &quot;urn:schemas-microsoft-com:vml&quot; />&lt;v:shapetype id=_x0000_t75 stroked=&quot;f&quot; filled=&quot;f&quot; path=&quot;m@4@5l@4@11@9@11@9@5xe&quot; o:preferrelative=&quot;t&quot; o:spt=&quot;75&quot; coordsize=&quot;21600,21600&quot;>&lt;v:stroke joinstyle=&quot;miter&quot;>&lt;/v:stroke>&lt;v:formulas>&lt;v:f eqn=&quot;if lineDrawn pixelLineWidth 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @0 1 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum 0 0 @1&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @2 1 2&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @3 21600 pixelWidth&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @3 21600 pixelHeight&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @0 0 1&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @6 1 2&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @7 21600 pixelWidth&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @8 21600 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @7 21600 pixelHeight&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @10 21600 0&quot;>&lt;/v:f>&lt;/v:formulas>&lt;v:path o:connecttype=&quot;rect&quot; gradientshapeok=&quot;t&quot; o:extrusionok=&quot;f&quot;>&lt;/v:path>&lt;o:lock aspectratio=&quot;t&quot; v:ext=&quot;edit&quot;>&lt;/o:lock>&lt;/v:shapetype>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-ALIGN: center; MARGIN: 0cm 0cm 10pt&quot; class=MsoCaption align=center>&lt;IMG alt=&quot;Service Specfication Example&quot; src=&quot;./../../practice.architecture.mathematical_systems_engineering.base-sintef/workproducts/resources/Service Specfication Example.png&quot; width=360 height=326>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-ALIGN: center; MARGIN: 0cm 0cm 10pt&quot; class=MsoCaption align=center>&lt;a name=&quot;_Toc238805379&quot;>&lt;STRONG>&lt;FONT color=#4f81bd face=Calibri>Figure &lt;/FONT>&lt;/STRONG>&lt;/a>&lt;STRONG>&lt;FONT color=#4f81bd>&lt;FONT face=Calibri>&lt;SPAN style=&quot;mso-bookmark: _Toc238805379&quot;>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>12&lt;/SPAN>&lt;/SPAN>&lt;SPAN style=&quot;mso-bookmark: _Toc238805379&quot;>. Service Specification Example&lt;/SPAN>&lt;/FONT>&lt;/FONT>&lt;/STRONG>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>From this model we can see there are two service interfaces for the service provider Temperature Monitor. The required interface “DataReceiverInterface” provides two functions, which allows user to receive and filter temperature data. &lt;SPAN style=&quot;mso-spacerun: yes&quot;>&amp;nbsp;&lt;/SPAN>The provided interface “DataAnalyserInterface” provides two functions, which can check temperature and send the feedback to operators.&lt;/FONT>&lt;/P></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-PA3WTa2qSxGZRAOHNtS-Zw" name="structure_diagram,_irDxpxRAEeGTU829fpxEZg" guid="-PA3WTa2qSxGZRAOHNtS-Zw">
    <refinedDescription>&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>The following diagram is a block model for Temperature Monitor. &lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;?xml:namespace prefix = o ns = &quot;urn:schemas-microsoft-com:office:office&quot; />&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;o:p>&lt;IMG alt=&quot;Block diagram example&quot; src=&quot;./../../practice.architecture.mathematical_systems_engineering.base-sintef/workproducts/resources/Block.png&quot; width=545 height=270>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;PAGE-BREAK-AFTER: avoid; MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>&lt;?xml:namespace prefix = v ns = &quot;urn:schemas-microsoft-com:vml&quot; />&lt;v:shapetype id=_x0000_t75 stroked=&quot;f&quot; filled=&quot;f&quot; path=&quot;m@4@5l@4@11@9@11@9@5xe&quot; o:preferrelative=&quot;t&quot; o:spt=&quot;75&quot; coordsize=&quot;21600,21600&quot;>&lt;v:stroke joinstyle=&quot;miter&quot;>&lt;/v:stroke>&lt;v:formulas>&lt;v:f eqn=&quot;if lineDrawn pixelLineWidth 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @0 1 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum 0 0 @1&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @2 1 2&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @3 21600 pixelWidth&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @3 21600 pixelHeight&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @0 0 1&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @6 1 2&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @7 21600 pixelWidth&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @8 21600 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @7 21600 pixelHeight&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @10 21600 0&quot;>&lt;/v:f>&lt;/v:formulas>&lt;v:path o:connecttype=&quot;rect&quot; gradientshapeok=&quot;t&quot; o:extrusionok=&quot;f&quot;>&lt;/v:path>&lt;o:lock aspectratio=&quot;t&quot; v:ext=&quot;edit&quot;>&lt;/o:lock>&lt;/v:shapetype>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-ALIGN: center; MARGIN: 0cm 0cm 10pt&quot; class=MsoCaption align=center>&lt;a name=&quot;_Toc238805378&quot;>&lt;STRONG>&lt;FONT color=#4f81bd face=Calibri>Figure &lt;/FONT>&lt;/STRONG>&lt;/a>&lt;STRONG>&lt;FONT color=#4f81bd>&lt;FONT face=Calibri>&lt;SPAN style=&quot;mso-bookmark: _Toc238805378&quot;>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>11&lt;/SPAN>&lt;/SPAN>&lt;SPAN style=&quot;mso-bookmark: _Toc238805378&quot;>. Block diagram example&lt;/SPAN>&lt;/FONT>&lt;/FONT>&lt;/STRONG>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>We can see there are two internal blocks inside Temperature Monitor, and they are Data Receiver and Temperature Analyzer. The “Data Receiver” gets the real time temperature data and filters the useless data.&lt;SPAN style=&quot;mso-spacerun: yes&quot;>&amp;nbsp; &lt;/SPAN>Then the temperature data is passed to Block “Temperature Analyzer” gets the data and checks whether the data is in safe range. According to the checked result, the feedback result is sent to operator.&lt;/FONT>&lt;/P></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:ProcessDescription xmi:id="-DeAOAVpOk_uJSf5XQIdTtQ" name="jee_ws_development,_7lYMQZzCEeCwZfi5IJDs5w" guid="-DeAOAVpOk_uJSf5XQIdTtQ"/>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-LVsiX3dNFV-u_roetFBE4g" name="implement_web_service,_-pNJoJzCEeCwZfi5IJDs5w" guid="-LVsiX3dNFV-u_roetFBE4g"/>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-EpiayidLfgN2pawHc9Kdzg" name="system_developer,_-pOXwJzCEeCwZfi5IJDs5w" guid="-EpiayidLfgN2pawHc9Kdzg"/>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-iJkB_zhm-5pPKzxSPv3yXg" name="deploy_web_service,_TKhRkJzDEeCwZfi5IJDs5w" guid="-iJkB_zhm-5pPKzxSPv3yXg"/>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-YwUn8nqUOHnzngYC7qTOKw" name="generate_web_service_files,_Ie6M0KGMEeC6m4lNxCxazg" guid="-YwUn8nqUOHnzngYC7qTOKw"/>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Rub6hIJwFXMXXhczIp_C3Q" name="implement_javaserver_faces,_L6q28BQoEeG7hs90RB7LQA" guid="-Rub6hIJwFXMXXhczIp_C3Q"/>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-V2yhY5OjqjHz0sVgr-gQTw" name="implement_java_persistence,_MdoaEBQoEeG7hs90RB7LQA" guid="-V2yhY5OjqjHz0sVgr-gQTw"/>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-EBmRX9pBeqsMAXKmpb72vA" name="service_migration_model,_WuFCQRRAEeGTU829fpxEZg" guid="-EBmRX9pBeqsMAXKmpb72vA"/>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-DbG4ub-bF-seOKKcwnGing" name="matlab_as_service,_WuFCRxRAEeGTU829fpxEZg" guid="-DbG4ub-bF-seOKKcwnGing"/>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-lgwTm7gaw13I2hzm4CVgIQ" name="modelica_design_time_model,_WuFCShRAEeGTU829fpxEZg" guid="-lgwTm7gaw13I2hzm4CVgIQ"/>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-AROMmZ3NUvhp7v1-gGnzLw" name="modelica_web_service,_WuFCTRRAEeGTU829fpxEZg" guid="-AROMmZ3NUvhp7v1-gGnzLw"/>
</xmi:XMI>
