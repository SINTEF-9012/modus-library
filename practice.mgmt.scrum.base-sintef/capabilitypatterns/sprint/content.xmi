<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1">
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-RWlhN_6JyvFPdtHuDaibFQ" name="estimating_the_backlog,_XAiZYOczEd-T6-CV2MW9sw" guid="-RWlhN_6JyvFPdtHuDaibFQ">
    <refinedDescription>&lt;p>&#xD;
    Prior to release planning and periodically as the product backlog evolves and the team gains insight through experience&#xD;
    the Scrum Team will estimate the size of items on the Product Backlog.&amp;nbsp;&amp;nbsp; This is key information to help&#xD;
    the&amp;nbsp;Product Owner make prioritization decisions (some items may become less of a priority if the&amp;nbsp;Product&#xD;
    Owner learns that major effort will be required to deliver them).&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Estimations are relative and&amp;nbsp;are measured in “points” rather than real-world units of effort.&amp;nbsp; To the&#xD;
    uninitiated this may&amp;nbsp;seem unpredicatable but after the first few sprints Scrum teams can empirically derive&amp;nbsp;a&#xD;
    velocity&amp;nbsp;that allows them to&amp;nbsp;accurately predict delivery capability.&amp;nbsp;&lt;br />&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-78ZTSfcYdji0lA9usL5eYg" name="prioritizing_the_backlog,_XAiZYeczEd-T6-CV2MW9sw" guid="-78ZTSfcYdji0lA9usL5eYg">
    <refinedDescription>&lt;p>&#xD;
    The Product Backlog is a prioritized list of work to be completed by the team.&amp;nbsp; It is continuously updated by the&#xD;
    Product Owner&amp;nbsp;based on&amp;nbsp;feedback from the end-user (as they are exposed to new product increments) and&#xD;
    also&amp;nbsp;in response to&amp;nbsp;the&amp;nbsp;evolving technical and business landscape.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It is important that the&amp;nbsp;team provides the Product Owner with sizing estimates&amp;nbsp;for the&amp;nbsp;Product Backlog&#xD;
    items to enable the&amp;nbsp;Product Owner to balance&amp;nbsp;business need with&amp;nbsp;the estimated cost of implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Scrum update:&lt;/strong> The Product Backlog is “ordered,” instead of “prioritized,” providing flexibility to the&#xD;
    Product Owner to optimize value in his or her unique circumstances.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-8TvkpUB-xnYRAxHn3JEA6A" name="scrum_team,_XA4XoOczEd-T6-CV2MW9sw" guid="-8TvkpUB-xnYRAxHn3JEA6A">
    <refinedDescription>&lt;h3>&#xD;
    Scrum Team&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    The Scrum Team consists of a &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.mgmt.scrum.base-sintef/roles/product_owner_10E7BD3.html&quot; guid=&quot;_QcnRMOF5Edyp34pwdTOSVQ&quot;>Product&#xD;
    Owner&lt;/a>, the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.mgmt.scrum.base-sintef/roles/development_team_2BE2D5BF.html&quot;&#xD;
    guid=&quot;_EChNoBC0EeGhfJHCQDJMKQ&quot;>Development Team&lt;/a>, and a &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.mgmt.scrum.base-sintef/roles/scrum_master_357FCB70.html&quot; guid=&quot;_Bw-twOF6Edyp34pwdTOSVQ&quot;>Scrum&#xD;
    Master&lt;/a>. Scrum Teams are self-organizing and cross-functional. Self-organizing teams choose how best to accomplish&#xD;
    their work, rather than being directed by others outside the team. Cross-functional teams have all competencies needed&#xD;
    to accomplish the work without depending on others not part of the team. The team model in Scrum is designed to&#xD;
    optimize flexibility, creativity, and productivity.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Scrum Teams deliver products iteratively and incrementally, maximizing opportunities for feedback. Incremental&#xD;
    deliveries of “Done” product ensure a potentially useful version of working product is always available.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-pQDyONlZ2BMT-xgnQgRA5Q" name="product_owner,_XA4-sOczEd-T6-CV2MW9sw" guid="-pQDyONlZ2BMT-xgnQgRA5Q">
    <refinedDescription>&lt;h3>&#xD;
    Product Owner&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    The Product Owner is responsible for maximizing the value of the product and the work of the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.mgmt.scrum.base-sintef/roles/development_team_2BE2D5BF.html&quot;&#xD;
    guid=&quot;_EChNoBC0EeGhfJHCQDJMKQ&quot;>Development Team&lt;/a>. How this is done may vary widely across organizations, Scrum&#xD;
    Teams, and individuals.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The Product Owner is the sole person responsible for managing the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.mgmt.scrum.base-sintef/workproducts/product_backlog_68345C16.html&quot;&#xD;
    guid=&quot;_OZIPIOF8Edyp34pwdTOSVQ&quot;>Product Backlog&lt;/a>. Product Backlog management includes:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Clearly expressing Product Backlog items;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Ordering the items in the Product Backlog to best achieve goals and missions;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Ensuring the value of the work the Development Team performs;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Ensuring that the Product Backlog is visible, transparent, and clear to all, and shows what the Scrum Team will&#xD;
        work on next; and,&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Ensuring the Development Team understands items in the Product Backlog to the level needed.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The Product Owner may do the above work, or have the Development Team do it. However, the Product Owner remains&#xD;
    accountable.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The Product Owner is one person, not a committee. The Product Owner may represent the desires of a committee in the&#xD;
    Product Backlog, but those wanting to change a backlog item’s priority must convince the Product Owner.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    For the Product Owner to succeed, the entire organization must respect his or her decisions. The Product Owner’s&#xD;
    decisions are visible in the content and ordering of the Product Backlog. No one is allowed to tell the Development&#xD;
    Team to work from a different set of requirements, and the Development Team isn’t allowed to act on what anyone else&#xD;
    says.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-HdWmvV6ZwpkjX-U855B9JQ" name="scrummaster,_XA4-suczEd-T6-CV2MW9sw" guid="-HdWmvV6ZwpkjX-U855B9JQ">
    <refinedDescription>&lt;h3>&#xD;
    Scrum Master&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    The Scrum Master is responsible for ensuring Scrum is understood and enacted. Scrum Masters do this by ensuring that&#xD;
    the &lt;a class=&quot;elementLink&quot; href=&quot;./../../practice.mgmt.scrum.base-sintef/roles/scrum_team_8D8F2B3.html&quot;&#xD;
    guid=&quot;_O65KUOF6Edyp34pwdTOSVQ&quot;>Scrum Team&lt;/a> adheres to Scrum theory, practices, and rules. The Scrum Master is a&#xD;
    servant-leader for the Scrum Team.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The Scrum Master helps those outside the Scrum Team understand which of their interactions with the Scrum Team are&#xD;
    helpful and which aren’t. The Scrum Master helps everyone change these interactions to maximize the value created by&#xD;
    the Scrum Team.&#xD;
&lt;/p>&#xD;
&lt;h4>&#xD;
    Scrum Master Service to the Product Owner&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    The Scrum Master serves the Product Owner in several ways, including:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Finding techniques for effective Product Backlog management;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Clearly communicating vision, goals, and Product Backlog items to the Development Team;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Teaching the Scrum Team to create clear and concise Product Backlog items;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Understanding long-term product planning in an empirical environment;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Understanding and practicing agility; and,&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Facilitating Scrum events as requested or needed.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;h4>&#xD;
    Scrum Master Service to the Development Team&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    The Scrum Master serves the Development Team in several ways, including:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Coaching the Development Team in self-organization and cross-functionality;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Teaching and leading the Development Team to create high-value products;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Removing impediments to the Development Team’s progress;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Facilitating Scrum events as requested or needed; and,&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Coaching the Development Team in organizational environments in which Scrum is not yet fully adopted and&#xD;
        understood.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;h4>&#xD;
    Scrum Master Service to the Organization&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    The Scrum Master serves the organization in several ways, including:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Leading and coaching the organization in its Scrum adoption;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Planning Scrum implementations within the organization;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Helping employees and stakeholders understand and enact Scrum and empirical product development;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Causing change that increases the productivity of the Scrum Team; and,&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Working with other Scrum Masters to increase the effectiveness of the application of Scrum in the organization.&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-F1sGsoz9Bsquk-DanGYzEA" name="product_backlog,_XBD90OczEd-T6-CV2MW9sw" guid="-F1sGsoz9Bsquk-DanGYzEA">
    <refinedDescription>&lt;h3>&#xD;
    Product Backlog&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    The Product Backlog is an ordered list of everything that might be needed in the product and is the single source of&#xD;
    requirements for any changes to be made to the product. The Product Owner is responsible for the Product Backlog,&#xD;
    including its content, availability, and ordering.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    A Product Backlog is never complete. The earliest development of it only lays out the initially known and&#xD;
    best-understood requirements. The Product Backlog evolves as the product and the environment in which it will be used&#xD;
    evolves. The Product Backlog is dynamic; it constantly changes to identify what the product needs to be appropriate,&#xD;
    competitive, and useful. As long as a product exists, its Product Backlog also exists.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The Product Backlog lists all features, functions, requirements, enhancements, and fixes that constitute the changes to&#xD;
    be made to the product in future releases. Product Backlog items have the attributes of a description, order, and&#xD;
    estimate.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The Product Backlog is often ordered by value, risk, priority, and necessity. Top-ordered Product Backlog items drive&#xD;
    immediate development activities. The higher the order, the more a Product Backlog item has been considered, and the&#xD;
    more consensus exists regarding it and its value.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Higher ordered Product Backlog items are clearer and more detailed than lower ordered ones. More precise estimates are&#xD;
    made based on the greater clarity and increased detail; the lower the order, the less detail. Product Backlog items&#xD;
    that will occupy the Development Team for the upcoming Sprint are fine-grained, having been decomposed so that any one&#xD;
    item can be “Done” within the Sprint time-box. Product Backlog items that can be “Done” by the Development Team within&#xD;
    one Sprint are deemed “ready” or “actionable” for selection in a Sprint Planning Meeting.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    As a product is used and gains value, and the marketplace provides feedback, the Product Backlog becomes a larger and&#xD;
    more exhaustive list. Requirements never stop changing, so a Product Backlog is a living artifact. Changes in business&#xD;
    requirements, market conditions, or technology may cause changes in the Product Backlog.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Multiple Scrum Teams often work together on the same product. One Product Backlog is used to describe the upcoming work&#xD;
    on the product. A Product Backlog attribute that groups items is then employed.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Product Backlog grooming is the act of adding detail, estimates, and order to items in the Product Backlog. This is an&#xD;
    ongoing process in which the Product Owner and the Development Team collaborate on the details of Product Backlog&#xD;
    items. During Product Backlog grooming, items are reviewed and revised. However, they can be updated at any time by the&#xD;
    Product Owner or at the Product Owner’s discretion.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Grooming is a part-time activity during a Sprint between the Product Owner and the Development Team. Often the&#xD;
    Development Team has the domain knowledge to perform grooming itself. How and when grooming is done is decided by the&#xD;
    Scrum Team. Grooming usually consumes no more than 10% of the capacity of the Development Team.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The Development Team is responsible for all estimates. The Product Owner may influence the Development Team by helping&#xD;
    understand and select trade-offs, but the people who will perform the work make the final estimate.&#xD;
&lt;/p>&#xD;
&lt;h4>&#xD;
    Monitoring Progress Toward a Goal&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    At any point in time, the total work remaining to reach a goal can be summed. The Product Owner tracks this total work&#xD;
    remaining at least for every Sprint Review. The Product Owner compares this amount with work remaining at previous&#xD;
    Sprint Reviews to assess progress toward completing projected work by the desired time for the goal. This information&#xD;
    is made transparent to all stakeholders.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Various trend burndown, burnup and other projective practices have been used to forecast progress. These have proven&#xD;
    useful. However, these do not replace the importance of empiricism. In complex environments, what will happen is&#xD;
    unknown. Only what has happened may be used for forward-looking decision-making.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-brMlgGdAjuroqZMmqpmK1g" name="sprint_backlog,_XBEk4eczEd-T6-CV2MW9sw" guid="-brMlgGdAjuroqZMmqpmK1g">
    <refinedDescription>&lt;h3>&#xD;
    Sprint Backlog&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    The Sprint Backlog is the set of Product Backlog items selected for the Sprint plus a plan for delivering the product&#xD;
    Increment and realizing the Sprint Goal. The Sprint Backlog is a forecast by the Development Team about what&#xD;
    functionality will be in the next Increment and the work needed to deliver that functionality.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The Sprint Backlog defines the work the Development Team will perform to turn Product Backlog items into a “Done”&#xD;
    Increment. The Sprint Backlog makes visible all of the work that the Development Team identifies as necessary to meet&#xD;
    the Sprint Goal.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The Sprint Backlog is a plan with enough detail that changes in progress can be understood in the Daily Scrum. The&#xD;
    Development Team modifies Sprint Backlog throughout the Sprint, and the Sprint Backlog emerges during the Sprint. This&#xD;
    emergence occurs as the Development Team works through the plan and learns more about the work needed to achieve the&#xD;
    Sprint Goal.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    As new work is required, the Development Team adds it to the Sprint Backlog. As work is performed or completed, the&#xD;
    estimated remaining work is updated. When elements of the plan are deemed unnecessary, they are removed. Only the&#xD;
    Development Team can change its Sprint Backlog during a Sprint. The Sprint Backlog is a highly visible, real-time&#xD;
    picture of the work that the Development Team plans to accomplish during the Sprint, and it belongs solely to the&#xD;
    Development Team.&#xD;
&lt;/p>&#xD;
&lt;h4>&#xD;
    Monitoring Sprint Progress&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    At any point in time in a Sprint, the total work remaining in the Sprint Backlog items can be summed. The Development&#xD;
    Team tracks this total work remaining at least for every Daily Scrum. The Development Team tracks these sums daily and&#xD;
    projects the likelihood of achieving the Sprint Goal. By tracking the remaining work throughout the Sprint, the&#xD;
    Development Team can manage its progress.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Scrum does not consider the time spent working on Sprint Backlog Items. The work remaining and date are the only&#xD;
    variables of interest.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-tVqQ0bdd9vClHhx6-W5m_g" name="taskboard,_XBEk5eczEd-T6-CV2MW9sw" guid="-tVqQ0bdd9vClHhx6-W5m_g">
    <refinedDescription>&lt;p>&#xD;
    The task board shows all the work the team is&amp;nbsp;doing during a sprint. It is updated&amp;nbsp;continuously throughout&#xD;
    the sprint–if someone thinks of a new task they&amp;nbsp;write a new card and puts it on the board. Either during or&#xD;
    before&amp;nbsp;&lt;a class=&quot;elementLink&quot; href=&quot;./../../Scrum/tasks/the_daily_scrum_C8FB7908.html&quot;&#xD;
    guid=&quot;_oSM0AOF-Edyp34pwdTOSVQ&quot;>The Daily Scrum&lt;/a>, estimates are changed (up or down) and cards are moved around the&#xD;
    board.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The task board might look like this:&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;span class=&quot;articleImage&quot;>&lt;img style=&quot;WIDTH: 461px; HEIGHT: 336px&quot; height=&quot;447&quot; alt=&quot;&quot;&#xD;
    src=&quot;./../../practice.mgmt.scrum.base-sintef/workproducts/resources/MockedTaskBoard.jpg&quot; width=&quot;600&quot; />&lt;a&#xD; 
    href=&quot;http://www.mountaingoatsoftware.com/system/hidden_asset/file/29/MockedTaskBoard.jpg&quot; >&lt;u>&lt;font&#xD;
    color=&quot;#0000ff&quot;>&amp;nbsp;&lt;/font>&lt;/u>&lt;/a>&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;span class=&quot;articleImage&quot;>&lt;br />&#xD;
    &amp;nbsp;&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Each row on the task board is a product backlog item (in this&amp;nbsp; particular example stories). During the &lt;a&#xD;
    class=&quot;elementLinkWithUserText&quot; href=&quot;./../../Scrum/tasks/sprint_planning_meeting_9F0B8F28.html&quot;&#xD;
    guid=&quot;_4gCKAOF9Edyp34pwdTOSVQ&quot;>sprint planning meeting&lt;/a> the team selects the product backlog items they can complete&#xD;
    during the coming sprint. Each product backlog item is turned into multiple &lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../Scrum/workproducts/sprint_backlog_7A5B8A37.html&quot; guid=&quot;_Q5Ki8OF8Edyp34pwdTOSVQ&quot;>sprint backlog&lt;/a> items.&#xD;
    Each of these is represented by one task card that is placed on the task board. Each task card starts on the task board&#xD;
    in the “To Do” column. The columns are:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;b>Story&lt;/b>–The story description (“As a user I want to…”) shown on that row.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;b>To Do&lt;/b>–This holds all the cards that are not done or in process.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;b>Work In Process&lt;/b>–Any card being worked on goes here. The programmer who chooses to work on it moves it over&#xD;
        when she’s ready to start the task. Often this happens during the Daily Scrum when someone says, “I’m going to work&#xD;
        on the boojum today.”&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;b>To Verify&lt;/b>–A lot of tasks have corresponding test task cards. So, if there’s a “Code the boojum class” card&#xD;
        there is likely one or more task cards related to testing: “Test the boojum”, “Write FitNesse tests for the&#xD;
        boojum,” “Write FitNesse fixture for the boojum,” etc. Some task cards don’t often get corresponding test cards&#xD;
        (“Fix Bug #321 in Bugzilla”) so those are placed in the “To Verify” column.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;b>Done&lt;/b>–Cards pile up over here when they’re done. They’re removed at the end of the sprint.&#xD;
    &lt;/li>&#xD;
&lt;/ul></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-v7URn_v-qcQRh_eptJ7TWA" name="potentially_shippable_product_incremement,_jQ4p0VFkEeCzvsTyZHUw_Q" guid="-v7URn_v-qcQRh_eptJ7TWA">
    <refinedDescription>&lt;h3>&#xD;
    Increment&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    The Increment is the sum of all the Product Backlog items completed during a Sprint and all previous Sprints. At the&#xD;
    end of a Sprint, the new Increment must be “Done,” which means it must be in useable condition and meet the Scrum&#xD;
    Team’s &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.mgmt.scrum.base-sintef/guidances/concepts/definition_of_done_B52B998F.html&quot;&#xD;
    guid=&quot;_tprjYBCzEeGhfJHCQDJMKQ&quot;>Definition of &quot;Done&quot;&lt;/a>. It must be in useable condition regardless of whether the&#xD;
    Product Owner decides to actually release it.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:ProcessDescription xmi:id="-YRLhsfVZoCyZmkx_O733oA" name="scrum,_xEuyweZ9Ed-5YeUvCnM2dQ" guid="-YRLhsfVZoCyZmkx_O733oA">
    <mainDescription>&lt;h3>&#xD;
    Sprint&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    The heart of Scrum is a Sprint, a time-box of one month or less during which a “Done”, useable, and potentially&#xD;
    releasable product Increment is created. Sprints have consistent durations throughout a development effort. A new&#xD;
    Sprint starts immediately after the conclusion of the previous Sprint.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Sprints contain and consist of the Sprint Planning Meeting, Daily Scrums, the development work, the Sprint Review, and&#xD;
    the Sprint Retrospective.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    During the Sprint:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        No changes are made that would affect the Sprint Goal;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Development Team composition remains constant;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Quality goals do not decrease; and,&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Scope may be clarified and re-negotiated between the Product Owner and Development Team as more is learned.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Each Sprint may be considered a project with no more than a one-month horizon. Like projects, Sprints are used to&#xD;
    accomplish something. Each Sprint has a definition of what is to be built, a design and flexible plan that will guide&#xD;
    building it, the work, and the resultant product.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Sprints are limited to one calendar month. When a Sprint’s horizon is too long the definition of what is being built&#xD;
    may change, complexity may rise, and risk may increase. Sprints enable predictability by ensuring inspection and&#xD;
    adaptation of progress toward a goal at least every calendar month. Sprints also limit risk to one calendar month of&#xD;
    cost.&#xD;
&lt;/p>&#xD;
&lt;h4>&#xD;
    Cancelling a Sprint&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    A Sprint can be cancelled before the Sprint time-box is over. Only the Product Owner has the authority to cancel the&#xD;
    Sprint, although he or she may do so under influence from the stakeholders, the Development Team, or the Scrum Master.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    A Sprint would be cancelled if the Sprint Goal becomes obsolete. This might occur if the company changes direction or&#xD;
    if market or technology conditions change. In general, a Sprint should be cancelled if it no longer makes sense given&#xD;
    the circumstances. But, due to the short duration of Sprints, cancellation rarely makes sense.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    When a Sprint is cancelled, any completed and “Done” Product Backlog Items are reviewed. If part of the work is&#xD;
    potentially releasable, the Product Owner typically accepts it. All incomplete Product Backlog Items are re-estimated&#xD;
    and put back on the Product Backlog. The work done on them depreciates quickly and must be frequently re-estimated.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Sprint cancellations consume resources, since everyone has to regroup in another Sprint Planning Meeting to start&#xD;
    another Sprint. Sprint cancellations are often traumatic to the Scrum Team, and are very uncommon.&#xD;
&lt;/p></mainDescription>
  </org.eclipse.epf.uma:ProcessDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-k4lNINyyR8XLCRzYzjY-yA" name="development_team,_swrc8RQjEeG7hs90RB7LQA" guid="-k4lNINyyR8XLCRzYzjY-yA">
    <refinedDescription>&lt;h3>&#xD;
    Development Team&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    The Development Team consists of professionals who do the work of delivering a potentially releasable Increment of&#xD;
    &quot;Done&quot; product at the end of each Sprint. Only members of the Development Team create the Increment.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Development Teams are structured and empowered by the organization to organize and manage their own work. The resulting&#xD;
    synergy optimizes the Development Team’s overall efficiency and effectiveness. Development Teams have the following&#xD;
    characteristics:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        They are self-organizing. No one (not even the Scrum Master) tells the Development Team how to turn Product Backlog&#xD;
        into Increments of potentially releasable functionality;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Development Teams are cross-functional, with all of the skills as a team necessary to create a product Increment;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Scrum recognizes no titles for Development Team members other than Developer, regardless of the work being&#xD;
        performed by the person; there are no exceptions to this rule;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Individual Development Team members may have specialized skills and areas of focus, but accountability belongs to&#xD;
        the Development Team as a whole; and,&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Development Teams do not contain sub-teams dedicated to particular domains like testing or business analysis.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;h4>&#xD;
    Development Team Size&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    Optimal Development Team size is small enough to remain nimble and large enough to complete significant work. Fewer&#xD;
    than three Development Team members decreases interaction and results in smaller productivity gains. Smaller&#xD;
    Development Teams may encounter skill constraints during the Sprint, causing the Development Team to be unable to&#xD;
    deliver a potentially releasable Increment. Having more than nine members requires too much coordination. Large&#xD;
    Development Teams generate too much complexity for an empirical process to manage. The Product Owner and Scrum Master&#xD;
    roles are not included in this count unless they are also executing the work of the Sprint Backlog.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-YXvOqswIIAwgRWM6MZsEFQ" name="sprint_goal,_CyBGoYcPEeKDAPAbcNl48A" guid="-YXvOqswIIAwgRWM6MZsEFQ">
    <refinedDescription>&lt;h4>&#xD;
    Sprint Goal&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    The Sprint Goal is an objective that will be met within the Sprint through the implementation of the Product Backlog,&#xD;
    and it provides guidance to the Development Team on why it is building the Increment.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The Sprint Goal gives the Development Team some flexibility regarding the functionality implemented within the Sprint.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    As the Development Team works, it keeps this goal in mind. In order to satisfy the Sprint Goal, it implements the&#xD;
    functionality and technology. If the work turns out to be different than the Development Team expected, then they&#xD;
    collaborate with the Product Owner to negotiate the scope of Sprint Backlog within the Sprint.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The Sprint Goal may be a milestone in the larger purpose of the product roadmap.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-DVimr_fxnbMA2nCLqsXFBQ" name="sprint_planning_meeting,_8E3AMIcQEeKDAPAbcNl48A" guid="-DVimr_fxnbMA2nCLqsXFBQ">
    <refinedDescription>&lt;h3>&#xD;
    Sprint Planning Meeting&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    The work to be performed in the Sprint is planned at the Sprint Planning Meeting. This plan is created by the&#xD;
    collaborative work of the entire Scrum Team.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The Sprint Planning Meeting is time-boxed to eight hours for a one-month Sprint. For shorter Sprints, the event is&#xD;
    proportionately shorter. For example, two-week Sprints have four-hour Sprint Planning Meetings.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The Sprint Planning Meeting consists of two parts, each one being a time-box of one half of the Sprint Planning Meeting&#xD;
    duration. The two parts of the Sprint Planning Meeting answer the following questions, respectively:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        What will be delivered in the Increment resulting from the upcoming Sprint?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        How will the work needed to deliver the Increment be achieved?&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;h4>&#xD;
    Part One: What will be done this Sprint?&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    In this part, the Development Team works to forecast the functionality that will be developed during the Sprint. The&#xD;
    Product Owner presents ordered Product Backlog items to the Development Team and the entire Scrum Team collaborates on&#xD;
    understanding the work of the Sprint.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The input to this meeting is the Product Backlog, the latest product Increment, projected capacity of the Development&#xD;
    Team during the Sprint, and past performance of the Development Team. The number of items selected from the Product&#xD;
    Backlog for the Sprint is solely up to the Development Team. Only the Development Team can assess what it can&#xD;
    accomplish over the upcoming Sprint.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    After the Development Team forecasts the Product Backlog items it will deliver in the Sprint, the Scrum Team crafts a&#xD;
    &lt;a class=&quot;elementLink&quot; href=&quot;./../../practice.mgmt.scrum.base-sintef/workproducts/sprint_goal_C7293E60.html&quot;&#xD;
    guid=&quot;_6p8zUIcOEeKDAPAbcNl48A&quot;>Sprint Goal&lt;/a>. The Sprint Goal is an objective that will be met within the Sprint&#xD;
    through the implementation of the Product Backlog, and it provides guidance to the Development Team on why it is&#xD;
    building the Increment.&#xD;
&lt;/p>&#xD;
&lt;h4>&#xD;
    Part Two: How will the chosen work get done?&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    Having selected the work of the Sprint, the Development Team decides how it will build this functionality into a “Done”&#xD;
    product Increment during the Sprint. The Product Backlog items selected for this Sprint plus the plan for delivering&#xD;
    them is called the Sprint Backlog.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The Development Team usually starts by designing the system and the work needed to convert the Product Backlog into a&#xD;
    working product Increment. Work may be of varying size, or estimated effort. However, enough work is planned during the&#xD;
    Sprint Planning Meeting for the Development Team to forecast what it believes it can do in the upcoming Sprint. Work&#xD;
    planned for the first days of the Sprint by the Development Team is decomposed to units of one day or less by the end&#xD;
    of this meeting. The Development Team self-organizes to undertake the work in the Sprint Backlog, both during the&#xD;
    Sprint Planning Meeting and as needed throughout the Sprint.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The Product Owner may be present during the second part of the Sprint Planning Meeting to clarify the selected Product&#xD;
    Backlog items and to help make trade-offs. If the Development Team determines it has too much or too little work, it&#xD;
    may renegotiate the Sprint Backlog items with the Product Owner. The Development Team may also invite other people to&#xD;
    attend in order to provide technical or domain advice.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    By the end of the Sprint Planning Meeting, the Development Team should be able to explain to the Product Owner and&#xD;
    Scrum Master how it intends to work as a self-organizing team to accomplish the Sprint Goal and create the anticipated&#xD;
    Increment.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Ayso08KTQx4sIin_9Uz0mw" name="daily_scrum,_9Q5VgIcQEeKDAPAbcNl48A" guid="-Ayso08KTQx4sIin_9Uz0mw">
    <refinedDescription>&lt;h3>&#xD;
    Daily Scrum&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    The Daily Scrum is a 15-minute time-boxed event for the Development Team to synchronize activities and create a plan&#xD;
    for the next 24 hours. This is done by inspecting the work since the last Daily Scrum and forecasting the work that&#xD;
    could be done before the next one.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The Daily Scrum is held at the same time and place each day to reduce complexity. During the meeting, each Development&#xD;
    Team member explains:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        What has been accomplished since the last meeting?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        What will be done before the next meeting?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        What obstacles are in the way?&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The Development Team uses the Daily Scrum to assess progress toward the Sprint Goal and to assess how progress is&#xD;
    trending toward completing the work in the Sprint Backlog. The Daily Scrum optimizes the probability that the&#xD;
    Development Team will meet the Sprint Goal. The Development Team often meets immediately after the Daily Scrum to&#xD;
    re-plan the rest of the Sprint’s work. Every day, the Development Team should be able to explain to the Product Owner&#xD;
    and Scrum Master how it intends to work together as a self-organizing team to accomplish the goal and create the&#xD;
    anticipated Increment in the remainder of the Sprint.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The Scrum Master ensures that the Development Team has the meeting, but the Development Team is responsible for&#xD;
    conducting the Daily Scrum. The Scrum Master teaches the Development Team to keep the Daily Scrum within the 15-minute&#xD;
    time-box.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The Scrum Master enforces the rule that only Development Team members participate in the Daily Scrum. The Daily Scrum&#xD;
    is not a status meeting, and is for the people transforming the Product Backlog items into an Increment.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Daily Scrums improve communications, eliminate other meetings, identify and remove impediments to development,&#xD;
    highlight and promote quick decision-making, and improve the Development Team’s level of project knowledge. This is a&#xD;
    key inspect and adapt meeting.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-3VfKn2TO6-AYoLZcbLe7Dw" name="sprint_review,_9_kZYIcQEeKDAPAbcNl48A" guid="-3VfKn2TO6-AYoLZcbLe7Dw">
    <refinedDescription>&lt;h3>&#xD;
    Sprint Review&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    A Sprint Review is held at the end of the Sprint to inspect the Increment and adapt the Product Backlog if needed.&#xD;
    During the Sprint Review, the Scrum Team and stakeholders collaborate about what was done in the Sprint. Based on that&#xD;
    and any changes to the Product Backlog during the Sprint, attendees collaborate on the next things that could be done.&#xD;
    This is an informal meeting, and the presentation of the Increment is intended to elicit feedback and foster&#xD;
    collaboration.&lt;br />&#xD;
    &lt;br />&#xD;
    This is a four-hour time-boxed meeting for one-month Sprints. Proportionately less time is allocated for shorter&#xD;
    Sprints. For example, two week Sprints have two-hour Sprint Reviews.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The Sprint Review includes the following elements:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The Product Owner identifies what has been “Done” and what has not been “Done”;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The Development Team discusses what went well during the Sprint, what problems it ran into, and how those problems&#xD;
        were solved;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The Development Team demonstrates the work that it has “Done” and answers questions about the Increment;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The Product Owner discusses the Product Backlog as it stands. He or she projects likely completion dates based on&#xD;
        progress to date; and,&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The entire group collaborates on what to do next, so that the Sprint Review provides valuable input to subsequent&#xD;
        Sprint Planning Meetings.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The result of the Sprint Review is a revised Product Backlog that defines the probable Product Backlog items for the&#xD;
    next Sprint. The Product Backlog may also be adjusted overall to meet new opportunities.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-8jQFil80FZ02YcOTCPJjcw" name="sprint_retrospective,_-h2AAIcQEeKDAPAbcNl48A" guid="-8jQFil80FZ02YcOTCPJjcw">
    <refinedDescription>&lt;h3>&#xD;
    Sprint Retrospective&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    The Sprint Retrospective is an opportunity for the Scrum Team to inspect itself and create a plan for improvements to&#xD;
    be enacted during the next Sprint.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The Sprint Retrospective occurs after the Sprint Review and prior to the next Sprint Planning Meeting. This is a&#xD;
    three-hour time-boxed meeting for one-month Sprints. Proportionately less time is allocated for shorter Sprints.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The purpose of the Sprint Retrospective is to:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Inspect how the last Sprint went with regards to people, relationships, process, and tools;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Identify and order the major items that went well and potential improvements; and,&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Create a plan for implementing improvements to the way the Scrum Team does its work.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The Scrum Master encourages the Scrum Team to improve, within the Scrum process framework, its development process and&#xD;
    practices to make it more effective and enjoyable for the next Sprint. During each Sprint Retrospective, the Scrum Team&#xD;
    plans ways to increase product quality by adapting the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.mgmt.scrum.base-sintef/guidances/concepts/definition_of_done_B52B998F.html&quot;&#xD;
    guid=&quot;_tprjYBCzEeGhfJHCQDJMKQ&quot;>Definition of &quot;Done&quot;&lt;/a> as appropriate.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    By the end of the Sprint Retrospective, the Scrum Team should have identified improvements that it will implement in&#xD;
    the next Sprint. Implementing these improvements in the next Sprint is the adaptation to the inspection of the Scrum&#xD;
    Team itself. Although improvements may be implemented at any time, the Sprint Retrospective provides a formal&#xD;
    opportunity to focus on inspection and adaptation.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
</xmi:XMI>
