<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ArtifactDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmi:id="-v5-z0Dm_JF0P2xtKd0FDrA" name="new_artifact,_OZIPIOF8Edyp34pwdTOSVQ" guid="-v5-z0Dm_JF0P2xtKd0FDrA" changeDate="2013-03-07T10:17:29.255+0100">
  <mainDescription>&lt;h3>&#xD;
    Product Backlog&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    The Product Backlog is an ordered list of everything that might be needed in the product and is the single source of&#xD;
    requirements for any changes to be made to the product. The Product Owner is responsible for the Product Backlog,&#xD;
    including its content, availability, and ordering.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    A Product Backlog is never complete. The earliest development of it only lays out the initially known and&#xD;
    best-understood requirements. The Product Backlog evolves as the product and the environment in which it will be used&#xD;
    evolves. The Product Backlog is dynamic; it constantly changes to identify what the product needs to be appropriate,&#xD;
    competitive, and useful. As long as a product exists, its Product Backlog also exists.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The Product Backlog lists all features, functions, requirements, enhancements, and fixes that constitute the changes to&#xD;
    be made to the product in future releases. Product Backlog items have the attributes of a description, order, and&#xD;
    estimate.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The Product Backlog is often ordered by value, risk, priority, and necessity. Top-ordered Product Backlog items drive&#xD;
    immediate development activities. The higher the order, the more a Product Backlog item has been considered, and the&#xD;
    more consensus exists regarding it and its value.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Higher ordered Product Backlog items are clearer and more detailed than lower ordered ones. More precise estimates are&#xD;
    made based on the greater clarity and increased detail; the lower the order, the less detail. Product Backlog items&#xD;
    that will occupy the Development Team for the upcoming Sprint are fine-grained, having been decomposed so that any one&#xD;
    item can be “Done” within the Sprint time-box. Product Backlog items that can be “Done” by the Development Team within&#xD;
    one Sprint are deemed “ready” or “actionable” for selection in a Sprint Planning Meeting.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    As a product is used and gains value, and the marketplace provides feedback, the Product Backlog becomes a larger and&#xD;
    more exhaustive list. Requirements never stop changing, so a Product Backlog is a living artifact. Changes in business&#xD;
    requirements, market conditions, or technology may cause changes in the Product Backlog.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Multiple Scrum Teams often work together on the same product. One Product Backlog is used to describe the upcoming work&#xD;
    on the product. A Product Backlog attribute that groups items is then employed.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Product Backlog grooming is the act of adding detail, estimates, and order to items in the Product Backlog. This is an&#xD;
    ongoing process in which the Product Owner and the Development Team collaborate on the details of Product Backlog&#xD;
    items. During Product Backlog grooming, items are reviewed and revised. However, they can be updated at any time by the&#xD;
    Product Owner or at the Product Owner’s discretion.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Grooming is a part-time activity during a Sprint between the Product Owner and the Development Team. Often the&#xD;
    Development Team has the domain knowledge to perform grooming itself. How and when grooming is done is decided by the&#xD;
    Scrum Team. Grooming usually consumes no more than 10% of the capacity of the Development Team.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The Development Team is responsible for all estimates. The Product Owner may influence the Development Team by helping&#xD;
    understand and select trade-offs, but the people who will perform the work make the final estimate.&#xD;
&lt;/p>&#xD;
&lt;h4>&#xD;
    Monitoring Progress Toward a Goal&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    At any point in time, the total work remaining to reach a goal can be summed. The Product Owner tracks this total work&#xD;
    remaining at least for every Sprint Review. The Product Owner compares this amount with work remaining at previous&#xD;
    Sprint Reviews to assess progress toward completing projected work by the desired time for the goal. This information&#xD;
    is made transparent to all stakeholders.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Various trend burndown, burnup and other projective practices have been used to forecast progress. These have proven&#xD;
    useful. However, these do not replace the importance of empiricism. In complex environments, what will happen is&#xD;
    unknown. Only what has happened may be used for forward-looking decision-making.&#xD;
&lt;/p></mainDescription>
</org.eclipse.epf.uma:ArtifactDescription>
