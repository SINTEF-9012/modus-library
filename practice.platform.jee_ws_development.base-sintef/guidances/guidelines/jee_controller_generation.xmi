<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmi:id="-kLlIh0BwIbZ9RFuITIqTZw" name="jee_controller_generation,_DUwLYJzGEeCwZfi5IJDs5w" guid="-kLlIh0BwIbZ9RFuITIqTZw" changeDate="2011-06-23T12:49:09.793+0200">
  <mainDescription>&lt;h4>&#xD;
    Generating JPA Controllers from classes stereotyped &amp;lt;&amp;lt;entity&amp;gt;&amp;gt;&#xD;
&lt;/h4>&#xD;
&lt;p style=&quot;MARGIN-BOTTOM: 0cm&quot;>&#xD;
    A JPA controller class is a wrapper for an entity class that provides clients with access to the database through the&#xD;
    methods in the entity class. The JPA controller class contains the logic for creating, editing and destroying an entry&#xD;
    in the data source, getting all of the entries in the data source, and getting a specific entry in the data source.&#xD;
&lt;/p>&#xD;
&lt;p style=&quot;MARGIN-BOTTOM: 0cm&quot;>&#xD;
    The transformation generates JPA controllers based on entity classes in your model. One JPA controller class for each&#xD;
    entity class will be generated. Each generated JPA controller class contains create, edit and destroy methods and&#xD;
    methods for retrieving the entities and uses an entity manager for managing entity persistence. The transformation also&#xD;
    generates exception classes used by the controller classes.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;br />&#xD;
    &lt;img style=&quot;WIDTH: 546px; HEIGHT: 891px&quot; alt=&quot;&quot; src=&quot;./resources/a1.png&quot; width=&quot;525&quot; height=&quot;600&quot; />&#xD;
&lt;/p>&#xD;
&lt;br />&#xD;
&lt;br />&#xD;
&lt;p style=&quot;MARGIN-BOTTOM: 0cm&quot;>&#xD;
    The code listing above shows an excerpt of the generated JPA controller code that is generated using the SiSaS Studio.&#xD;
&lt;/p>&#xD;
&lt;h4>&#xD;
    Generating Bean Facades from classes stereotyped &amp;lt;&amp;lt;entity&amp;gt;&amp;gt;&#xD;
&lt;/h4>&#xD;
&lt;p style=&quot;MARGIN-BOTTOM: 0cm&quot;>&#xD;
    Use a session bean as a facade to encapsulate the complexity of interactions between the business objects participating&#xD;
    in a workflow. The Session Facade manages the business objects, and provides a uniform coarse-grained service access&#xD;
    layer to clients.&#xD;
&lt;/p>&#xD;
&lt;p style=&quot;MARGIN-BOTTOM: 0cm&quot;>&#xD;
    The Session Facade abstracts the underlying business object interactions and provides a service layer that exposes only&#xD;
    the required interfaces. Thus, it hides from the client's view the complex interactions between the participants. The&#xD;
    Session Facade manages the interactions between the business data and business service objects that participate in the&#xD;
    workflow, and it encapsulates the business logic associated with the requirements. Thus, the session bean (representing&#xD;
    the Session Facade) manages the relationships between business objects. The session bean also manages the life cycle of&#xD;
    these participants by creating, locating (looking up), modifying, and deleting them as required by the workflow.&#xD;
&lt;/p>&#xD;
&lt;p style=&quot;MARGIN-BOTTOM: 0cm&quot;>&#xD;
    When generating the facades based on entities in your model, the transformation will generate one AbstractFacade and on&#xD;
    EntityFacade for each class stereotyped entity.&#xD;
&lt;/p>&#xD;
&lt;p style=&quot;MARGIN-BOTTOM: 0cm&quot;>&#xD;
    &lt;img alt=&quot;&quot; src=&quot;./resources/a2.png&quot; width=&quot;576&quot; height=&quot;600&quot; />&#xD;
&lt;/p>&#xD;
&lt;p style=&quot;MARGIN-BOTTOM: 0cm&quot; lang=&quot;en-US&quot;>&#xD;
    The abstract facade contains the basic operations needed by the specific entity facades.&#xD;
&lt;/p>&#xD;
&lt;p style=&quot;MARGIN-BOTTOM: 0cm&quot;>&#xD;
    &lt;img alt=&quot;&quot; src=&quot;./resources/a3.png&quot; width=&quot;456&quot; height=&quot;436&quot; />&#xD;
&lt;/p>&#xD;
&lt;p style=&quot;MARGIN-BOTTOM: 0cm&quot;>&#xD;
    The transformations needed to generate this code are very simple, and they basically contain name substitutions.&#xD;
&lt;/p>&#xD;
&lt;p style=&quot;MARGIN-BOTTOM: 0cm&quot;>&#xD;
    &lt;img alt=&quot;&quot; src=&quot;resources/a4.png&quot; width=&quot;600&quot; height=&quot;540&quot; />&#xD;
&lt;/p>&#xD;
&lt;br style=&quot;MARGIN-BOTTOM: 0cm&quot; />&#xD;
&lt;br /></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
