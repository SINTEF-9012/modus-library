<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ArtifactDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmi:id="-8FAOLuG0RJtywHEeApd67A" name="system_boundary_model,_NUjPIN0VEd-xB8a51ZHHaA" guid="-8FAOLuG0RJtywHEeApd67A" changeDate="2010-11-03T01:21:50.718+0100">
  <mainDescription>&lt;h3 class=&quot;underlined_5&quot;>&#xD;
    System Boundary Model&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    The &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.requirements.use_case_modelling.base-sintef/workproducts/system_boundary_model_4296FE34.html&quot;&#xD;
    guid=&quot;_NUjPIN0VEd-xB8a51ZHHaA&quot;>System boundary model&lt;/a> describes the system boundaries, the actors and their&#xD;
    responsibilities, and the services offered by the system. Interactions between the system and its environment are&#xD;
    identified and might also be detailed by modelling stimuli and responses using UML sequence diagrams.&#xD;
&lt;/p>&#xD;
&lt;a id=&quot;N1004D&quot; name=&quot;N1004D&quot;>&lt;/a>&lt;a id=&quot;Goals&quot; name=&quot;Goals&quot;>&lt;/a> &#xD;
&lt;h4>&#xD;
    Goals&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    The &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.requirements.use_case_modelling.base-sintef/workproducts/system_boundary_model_4296FE34.html&quot;&#xD;
    guid=&quot;_NUjPIN0VEd-xB8a51ZHHaA&quot;>System boundary model&lt;/a>&amp;nbsp;should:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Identify and describe system boundaries, main services and actors.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Assure a common understanding of the system and its purpose.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Identify interactions between the system and its environment.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;a id=&quot;N1005A&quot; name=&quot;N1005A&quot;>&lt;/a>&lt;a id=&quot;Methods+and+techniques&quot; name=&quot;Methods+and+techniques&quot;>&lt;/a> &#xD;
&lt;h4>&#xD;
    Methods and techniques&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    The starting point for the development of the System &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.requirements.use_case_modelling.base-sintef/workproducts/system_boundary_model_4296FE34.html&quot;&#xD;
    guid=&quot;_NUjPIN0VEd-xB8a51ZHHaA&quot;>System boundary model&lt;/a> is provided by the Business Model work products, the Context&#xD;
    Statement, Vision for Change, Business Process and Role Model and Business Resource Model. Other important sources are&#xD;
    the business stakeholders, who should be involved when determining the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.requirements.use_case_modelling.base-sintef/workproducts/system_boundary_model_4296FE34.html&quot;&#xD;
    guid=&quot;_NUjPIN0VEd-xB8a51ZHHaA&quot;>System boundary model&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Defining the boundaries of the system means finding out what is inside the system and what is outside the system (the&#xD;
    &lt;em>outside&lt;/em> is what the system interfaces with). The boundaries of the system are determined by the roles of the&#xD;
    system in the Business Model. In the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../practice.requirements.use_case_modelling.base-sintef/workproducts/system_boundary_model_4296FE34.html&quot;&#xD;
    guid=&quot;_NUjPIN0VEd-xB8a51ZHHaA&quot;>System boundary model&lt;/a>, the boundaries of the system are defined in terms of actors&#xD;
    and use cases. The actors are outside the system and represent the roles in the Business Model that interact with the&#xD;
    system roles (roles inside the system boundary); the use cases are inside and represent the behaviour of the system&#xD;
    roles.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Thus, UML actors are used to denote anything that interfaces with the system. Some examples are people, software,&#xD;
    hardware devices, data stores or networks. In the model we let each UML actor define a particular role and thereby&#xD;
    abstract the actual person or software system currently fulfilling the role. Hence, several actors may represent one&#xD;
    physical person, because that person takes on different roles with regard to the system. On the other hand, one actor&#xD;
    might represent several physical people, because they all take on the same role with regard to the system. Each role&#xD;
    specifying interactions with the system may be represented by one or more actors (hence, roles are recursive). To help&#xD;
    in defining actors the following questions might be helpful to elaborate:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Who uses the system?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Who maintains the system?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        What other systems use this system?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Who gets information from the system?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Who provides information to the system?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Does anything happen automatically at present time?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Who starts up and shuts down the system?&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Each actor needs a descriptive name and a brief description that is one or two sentences long. This description should&#xD;
    define the role represented by the actor with regard to the system.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Identify use cases: When the main actors are identified, the next step is to go through the list of actors and identify&#xD;
    use cases for each one. Use cases describe things that the actors want the system to do. At this stage, people that&#xD;
    will play roles defined by the actors should be involved.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    To help identify use cases the following questions might be helpful to elaborate:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        What services are required from the system by the actor?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Which events are/will be initiated by the actor, and which events are the actor interested in?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Which events occur and who is/will be notified about them?&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    When dealing with existing systems, go through the list of actors and identify what services the system actually&#xD;
    provides. Important sources of information would then be the user manuals, other documentation, source code, table&#xD;
    structures and information gathered by studying system behaviour at runtime.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Relate to goals! The use cases should be related to goals, this because the purpose of the use cases should be to&#xD;
    attain goals. It is important to be able to answer why to each use case. If you can't give a good answer to the&#xD;
    &quot;why-question&quot;, then it is probably not a proper use case. The relation to the goals is implicitly the answer to the&#xD;
    why question.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Describe stimuli and responses for the use cases identified. Each actor communicates with the system through a set of&#xD;
    use cases in order to reach their goals. The stimuli/response describe the stimuli sent to the system by the actor, and&#xD;
    the responses back from the system. We can use UML sequence diagrams to model the most important stimuli/responses.&#xD;
&lt;/p>&#xD;
&lt;a id=&quot;N10089&quot; name=&quot;N10089&quot;>&lt;/a>&lt;a id=&quot;Deliverables+and+notation&quot; name=&quot;Deliverables+and+notation&quot;>&lt;/a> &#xD;
&lt;h4>&#xD;
    Deliverables and notation&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    The work product contains the following:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        UML Use Case diagram showing the system boundary, the actors and the actors responsibilities.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        UML Use Case diagram exploring the system boundary use case that identifies the needs. Each use case should be&#xD;
        numbered for later reference&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        General extra requirements that applies for the complete system are associated with the System Boundary&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;a id=&quot;N10096&quot; name=&quot;N10096&quot;>&lt;/a>&lt;a id=&quot;Example&quot; name=&quot;Example&quot;>&lt;/a> &#xD;
&lt;h4>&#xD;
    Example&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    Figure 2 shows an example of parts of a system boundary for a meeting room booking example, which is described in a UML&#xD;
    use case diagram. The actors represent initiating system actors or external systems used by the meeting reservation&#xD;
    system (e.g. the Email information system).&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;img alt=&quot;&quot; src=&quot;./resources/system_boundary_example.png&quot; width=&quot;600&quot; height=&quot;595&quot; />&lt;br />&#xD;
&lt;/p></mainDescription>
  <purpose>&lt;ul>&#xD;
    &lt;li>&#xD;
        To describe the&amp;nbsp;system in terms of actors, use cases and scenario descriptions.&#xD;
    &lt;/li>&#xD;
&lt;/ul></purpose>
  <notation>UML use case model</notation>
</org.eclipse.epf.uma:ArtifactDescription>
