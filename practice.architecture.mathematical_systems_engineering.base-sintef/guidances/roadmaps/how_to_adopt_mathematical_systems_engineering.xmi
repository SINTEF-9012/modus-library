<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmi:id="-C_L0_JcVzZFP1n5DUYqZlw" name="new_roadmap,_zymgoOJ_Ed-Knc6oCYT2Zw" guid="-C_L0_JcVzZFP1n5DUYqZlw">
  <mainDescription>&lt;H3 style=&quot;MARGIN: 0cm 0cm 0pt; mso-outline-level: 3&quot;>&lt;a name=&quot;_Toc245040869&quot;>Vision and Concepts&lt;/a>&lt;/H3>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt; mso-outline-level: 3&quot;>&lt;FONT size=3 face=Calibri>&lt;/FONT>&amp;nbsp;&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt; mso-outline-level: 3&quot;>&lt;FONT size=3 face=Calibri>The vision of this solution is to provide a methodology that can deliver higher quality scientific software with higher productivity and effectiveness, compared to the traditional way of delivery software.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;?xml:namespace prefix = o ns = &quot;urn:schemas-microsoft-com:office:office&quot; />&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>The traditional way of delivery software here means the way that develop software in imperative programming language like C or FORTRAN directly and delivery the software as local desktop applications. There are a lot of disadvantages of traditional way of development software. The problems of traditional way of development we’ve already discussed in chapter2, and they are more and more are becoming obstacles and decelerate the progress of both scientific research and IT industry.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;H4 style=&quot;MARGIN: 0cm 0cm 0pt; mso-outline-level: 3&quot;>&lt;a name=&quot;_Toc245040870&quot;>Principles of MOSiSaS Methodology&lt;/a>&lt;/H4>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>The basic principle of the MOSiSaS methodology is to use the model driven architecture to develop scientific software, and then deliver these scientific software with SaaS approach. With this methodology, we hope can provide higher quality scientific software with higher productivity and effectiveness.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>The model driven architecture provide a more efficient and productive way of developing software. The MDA standard like SoaML and SysML will be used here to support the modeling, plus MATLAB/ Modelica language which gives a strong mathematic function supports. The usage of MDA in Scientific software engineering has high potential for new application areas of scientific computing. Enhanced quality of scientific software will&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-INDENT: -18pt; MARGIN: 0cm 0cm 0pt 36pt; mso-list: l0 level1 lfo1&quot; class=BodyMain>&lt;SPAN style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;SPAN style=&quot;mso-list: Ignore&quot;>&lt;FONT size=3>·&lt;/FONT>&lt;SPAN style=&quot;FONT: 7pt 'Times New Roman'&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;FONT size=3 face=Calibri>enable wide spread use and re-use of the software in application areas which are similar to existing ones;&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-INDENT: -18pt; MARGIN: 0cm 0cm 0pt 36pt; mso-list: l0 level1 lfo1&quot; class=BodyMain>&lt;SPAN style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;SPAN style=&quot;mso-list: Ignore&quot;>&lt;FONT size=3>·&lt;/FONT>&lt;SPAN style=&quot;FONT: 7pt 'Times New Roman'&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;FONT size=3 face=Calibri>enable faster extension of the software;&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-INDENT: -18pt; MARGIN: 0cm 0cm 0pt 36pt; mso-list: l0 level1 lfo1&quot; class=BodyMain>&lt;SPAN style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;SPAN style=&quot;mso-list: Ignore&quot;>&lt;FONT size=3>·&lt;/FONT>&lt;SPAN style=&quot;FONT: 7pt 'Times New Roman'&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;FONT size=3 face=Calibri>enable better performance of the software and thus application to more complex problems;&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-INDENT: -18pt; MARGIN: 0cm 0cm 0pt 36pt; mso-list: l0 level1 lfo1&quot; class=BodyMain>&lt;SPAN style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;SPAN style=&quot;mso-list: Ignore&quot;>&lt;FONT size=3>·&lt;/FONT>&lt;SPAN style=&quot;FONT: 7pt 'Times New Roman'&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;FONT size=3 face=Calibri>enable integration into complex production or business processes (including real-time);&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-INDENT: -18pt; MARGIN: 0cm 0cm 0pt 36pt; mso-list: l0 level1 lfo1&quot; class=BodyMain>&lt;SPAN style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;SPAN style=&quot;mso-list: Ignore&quot;>&lt;FONT size=3>·&lt;/FONT>&lt;SPAN style=&quot;FONT: 7pt 'Times New Roman'&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;FONT size=3 face=Calibri>enable portability onto new kinds of platforms such as web service;&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>Software as a service delivery method allows user to access software through internet, and it brings more convenience and flexibility to end users.&lt;/FONT>&lt;BR>&lt;/P>&#xD;
&lt;H3 style=&quot;MARGIN: 0cm 0cm 0pt; mso-outline-level: 2&quot;>&amp;nbsp;&lt;/H3>&#xD;
&lt;H3 style=&quot;MARGIN: 0cm 0cm 0pt; mso-outline-level: 2&quot;>Overview of MOSiSaS Methodology&lt;/H3>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=MsoNoSpacing>&lt;SPAN style=&quot;FONT-SIZE: 12pt&quot;>&lt;o:p>&lt;FONT face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>As what mentioned in above section, the principle of this methodology is to use the Model Driven Architecture as a development approach and Software as a Service as a delivery approach, and provide higher quality scientific software with higher productivity and effectiveness. &lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>Model driven architecture is used here as a development approach. The modeling activities should cover all MDA abstraction layers&lt;?xml:namespace prefix = w ns = &quot;urn:schemas-microsoft-com:office:word&quot; />&lt;w:Sdt id=6081113 Citation=&quot;t&quot;>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>&lt;SPAN style=&quot;mso-spacerun: yes&quot;>&amp;nbsp;&lt;/SPAN>(16)&lt;/SPAN>&lt;/w:Sdt>: Computation Independent Model (CIM), Platform Independent Model (PIM), Platform Specific Model (PSM) and realization. The three layers focus on different aspects of software development phases.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>The MOSiSaS solution in this thesis will cover the five steps. These five steps cover the technologies in SoaML, SysML, MATLAB/ Modelica, model transformation and SaaS fields. It is a combination of all these technologies and will solve the problems in scientific software development and deliver domain.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>The following diagram details the structure of MOSiSaS Methodology.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>&lt;/FONT>&amp;nbsp;&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;IMG alt=&quot;&quot; src=&quot;resources/MOSiSaS Methodology Structure.bmp&quot; width=568 height=553>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&amp;nbsp;&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>A brief introduction of the five steps for this MOSiSaS methodology is presented as following points.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;B style=&quot;mso-bidi-font-weight: normal&quot;>&lt;FONT face=Calibri>&lt;FONT size=3>Step 1: SoaML, SysML Design in CIM Layer&lt;o:p>&lt;/o:p>&lt;/FONT>&lt;/FONT>&lt;/B>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>In the computation independent model layer, we focus on scientific software related business model like scientific software service, roles, collaborations and interactions, process and information. &lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>The model diagrams in this layer should include: &lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-INDENT: -18pt; MARGIN: 0cm 0cm 0pt 36pt; mso-list: l1 level1 lfo1&quot; class=BodyMain>&lt;SPAN style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;SPAN style=&quot;mso-list: Ignore&quot;>&lt;FONT size=3>·&lt;/FONT>&lt;SPAN style=&quot;FONT: 7pt 'Times New Roman'&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;FONT size=3 face=Calibri>Requirement diagram and use case from SysML, which analyze the functional and non-functional requirements of target system;&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-INDENT: -18pt; MARGIN: 0cm 0cm 0pt 36pt; mso-list: l1 level1 lfo1&quot; class=BodyMain>&lt;SPAN style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;SPAN style=&quot;mso-list: Ignore&quot;>&lt;FONT size=3>·&lt;/FONT>&lt;SPAN style=&quot;FONT: 7pt 'Times New Roman'&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;FONT size=3 face=Calibri>Community services architecture from SoaML, which shows the architecture of how service participant cooperate with each other through related service;&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-INDENT: -18pt; MARGIN: 0cm 0cm 0pt 36pt; mso-list: l1 level1 lfo1&quot; class=BodyMain>&lt;SPAN style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;SPAN style=&quot;mso-list: Ignore&quot;>&lt;FONT size=3>·&lt;/FONT>&lt;SPAN style=&quot;FONT: 7pt 'Times New Roman'&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;FONT size=3 face=Calibri>Behavior diagram from SysML, which include present the detail behavior information of target system. These diagrams include activity diagram, sequence diagram, and state machine diagram. Business Process Modeling Notation (BPMN) is also possible used here to support the understanding the internal procedures related to scientific research and communicate these procedures in a standard manner;&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-INDENT: -18pt; MARGIN: 0cm 0cm 0pt 36pt; mso-list: l1 level1 lfo1&quot; class=BodyMain>&lt;SPAN style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;SPAN style=&quot;mso-list: Ignore&quot;>&lt;FONT size=3>·&lt;/FONT>&lt;SPAN style=&quot;FONT: 7pt 'Times New Roman'&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;FONT face=Calibri>&lt;FONT size=3>Participant services architecture from SoaML, which specifies the architecture for a particular participant. It is often accompanied by a business process. Other services architectures and service contracts may be used here.&lt;B style=&quot;mso-bidi-font-weight: normal&quot;>&lt;o:p>&lt;/o:p>&lt;/B>&lt;/FONT>&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;B style=&quot;mso-bidi-font-weight: normal&quot;>&lt;FONT face=Calibri>&lt;FONT size=3>Step 2: SoaML, SysML, MATLAB/ Modelica Design in PIM Layer&lt;o:p>&lt;/o:p>&lt;/FONT>&lt;/FONT>&lt;/B>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>In the platform independent model layer, the scientific software related logical system model like technology service, components, interfaces, message and Data will be discussed.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>The model diagrams in this layer should include: &lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-INDENT: -18pt; MARGIN: 0cm 0cm 0pt 36pt; mso-list: l0 level1 lfo2&quot; class=BodyMain>&lt;SPAN style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;SPAN style=&quot;mso-list: Ignore&quot;>&lt;FONT size=3>·&lt;/FONT>&lt;SPAN style=&quot;FONT: 7pt 'Times New Roman'&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;FONT size=3 face=Calibri>Structure diagram from SysML, which describe the hierarchy and interconnection between system structures. These diagrams include block definition diagram, internal block diagram, parametric diagram and package diagram.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-INDENT: -18pt; MARGIN: 0cm 0cm 0pt 36pt; mso-list: l0 level1 lfo2&quot; class=BodyMain>&lt;SPAN style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;SPAN style=&quot;mso-list: Ignore&quot;>&lt;FONT size=3>·&lt;/FONT>&lt;SPAN style=&quot;FONT: 7pt 'Times New Roman'&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;FONT size=3 face=Calibri>Service specification from SoaML, which specifies how services are provided or implemented;&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-INDENT: -18pt; MARGIN: 0cm 0cm 0pt 36pt; mso-list: l0 level1 lfo2&quot; class=BodyMain>&lt;SPAN style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;SPAN style=&quot;mso-list: Ignore&quot;>&lt;FONT size=3>·&lt;/FONT>&lt;SPAN style=&quot;FONT: 7pt 'Times New Roman'&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;FONT face=Calibri>&lt;FONT size=3>Logical Architecture, which addresses the information system seen macroscopically, by focusing on its main components, their interconnections and the flows exchanged, and by structuring them by group into larger-scale modules.&lt;B style=&quot;mso-bidi-font-weight: normal&quot;>&lt;o:p>&lt;/o:p>&lt;/B>&lt;/FONT>&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-INDENT: -18pt; MARGIN: 0cm 0cm 0pt 36pt; mso-list: l0 level1 lfo2&quot; class=BodyMain>&lt;SPAN style=&quot;FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol&quot;>&lt;SPAN style=&quot;mso-list: Ignore&quot;>&lt;FONT size=3>·&lt;/FONT>&lt;SPAN style=&quot;FONT: 7pt 'Times New Roman'&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;FONT size=3 face=Calibri>MATLAB/ Modelica: MATLAB/ Modelica model is used here to support the mathematic functionality of target scientific software. &lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;B style=&quot;mso-bidi-font-weight: normal&quot;>&lt;FONT size=3>&lt;FONT face=Calibri>Step 3: Model Transformation in PSM Layer&lt;o:p>&lt;/o:p>&lt;/FONT>&lt;/FONT>&lt;/B>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>After we finished the business models and logical system models, we would like to use the designed model to create web service. In the platform specific model layer, the logical system model will be transformed to JEE, or Web Services through MOFScript or transformation tools like ModelPro &lt;w:Sdt id=19767577 Citation=&quot;t&quot;>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>(40)&lt;/SPAN>&lt;/w:Sdt>.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;B style=&quot;mso-bidi-font-weight: normal&quot;>&lt;FONT size=3>&lt;FONT face=Calibri>Step 4: Provide MATLAB/ Modelica as a Service&lt;o:p>&lt;/o:p>&lt;/FONT>&lt;/FONT>&lt;/B>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>Most of the scientific software use mathematic expressions. So providing these functions as service is really important. We would like to integrated existing powerful mathematic tools like MATALB or Modelica here and provide them as a service to support the scientific mathematic functionalities. &lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;B style=&quot;mso-bidi-font-weight: normal&quot;>&lt;FONT size=3>&lt;FONT face=Calibri>Step 5: Choose Web Service Framework and SaaS&lt;o:p>&lt;/o:p>&lt;/FONT>&lt;/FONT>&lt;/B>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>In this phase, the most suitable web service framework and web service server will be chosen. Also we will find suitable Software as a Service vendor for specific requirements.&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=MsoNoSpacing>&lt;o:p>&lt;FONT size=3 face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=MsoNoSpacing>&lt;SPAN style=&quot;FONT-SIZE: 12pt&quot;>&lt;FONT face=Calibri>For the three steps in MDA design, it is not necessary to use all the diagrams in each step when the system architect models the system. We only use the diagrams which are useful for analyzing and designing the target system. The following three sections will have give a detail introduction of how to use the MOSiSaS methodology.&lt;o:p>&lt;/o:p>&lt;/FONT>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=MsoNoSpacing>&lt;SPAN style=&quot;FONT-SIZE: 12pt&quot;>&lt;o:p>&lt;FONT face=Calibri>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=BodyMain>&lt;FONT size=3 face=Calibri>Here we use scientific software called Temperature Monitoring System to demonstrate how our methodology works. The Temperature Monitoring System allows operator to get real time temperature data from sensor, analyze these data, and give feedback like temperature warning.&lt;/FONT>&lt;/P>&#xD;
&lt;H3>Recommended workflows &lt;/H3>&#xD;
&lt;UL>&#xD;
&lt;LI>&lt;a class=&quot;elementLink&quot; href=&quot;./../../../practice.architecture.mathematical_systems_engineering.base-sintef/capabilitypatterns/step1_soaml_sysml_design_in_cim_layer_D8578CC4.html&quot; guid=&quot;_YFTP0eZ0Ed-5YeUvCnM2dQ&quot;>SoaML, SysML Design in CIM Layer&lt;/a> &#xD;
&lt;LI>&lt;a class=&quot;elementLink&quot; href=&quot;./../../../practice.architecture.mathematical_systems_engineering.base-sintef/capabilitypatterns/step2_soaml_sysml_matlab_or_modelica_design_in_pim_layer_332EFC8C.html&quot; guid=&quot;_YFTP0-Z0Ed-5YeUvCnM2dQ&quot;>SoaML, SysML, MATLAB or Modelica Design in PIM Layer&lt;/a> &lt;/LI>&lt;/UL></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
