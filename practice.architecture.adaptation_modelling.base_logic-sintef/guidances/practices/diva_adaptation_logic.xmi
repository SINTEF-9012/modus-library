<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:PracticeDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmi:id="-iqvcE0px166SY61OBv9IVA" name="diva_adaptation_logic,_lMhbAAOPEeCKOY6tSwZy2A" guid="-iqvcE0px166SY61OBv9IVA" changeDate="2011-11-21T16:05:13.467+0100">
  <mainDescription>&lt;H3 style=&quot;MARGIN: 0cm 0cm 10pt&quot; class=MsoNormal>&lt;SPAN lang=EN-GB>5 Adaptation modelling&lt;/SPAN>&lt;/H3>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 10pt&quot; class=MsoNormal>&lt;SPAN lang=EN-GB>&lt;FONT size=3 face=&quot;Times New Roman&quot;>The role of the adaptation model is to formalize how and when a system should adapt. The adaptation model thus has to capture the variability in the system, the variability in the context of the system and rules to link changes in the context of the system with the configuration to be used. &lt;/FONT>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 10pt&quot; class=MsoNormal>&lt;SPAN lang=EN-GB>&lt;FONT size=3 face=&quot;Times New Roman&quot;>The activity of modelling the adaptation model is performed after requirements modelling. It is an iterative process consisting of modelling and validation:&lt;/FONT>&lt;/SPAN>&lt;/P>&#xD;
&lt;OL style=&quot;MARGIN-TOP: 0cm&quot; type=1>&#xD;
&lt;LI style=&quot;MARGIN: 0cm 0cm 10pt; mso-list: l0 level1 lfo1; tab-stops: list 36.0pt&quot; class=MsoNormal>&lt;SPAN lang=EN-GB>&lt;FONT size=3 face=&quot;Times New Roman&quot;>The adaptation model is partially generated from the requirements models, according to the DiVA metamodel. More specifically, we can generate information on all variants[1]&lt;/FONT>&lt;FONT size=3 face=&quot;Times New Roman&quot;> and context from the requirements model, and pre-defined rules and constraints – if any. Once this is done, the developers can use the DiVA modelling tool to finish the model by specifying adaptation rules and constraints. However, the adaptation model has to be elaborated and detailed further during the design phase. Since the model will be simulated as a part of validation at design-time and at the same time serve as input for the adaptation reasoning framework at runtime, it is important that it contains enough detail to avoid the explosion of configurations – detail not available from the requirements alone. &lt;/FONT>&lt;/SPAN>&#xD;
&lt;LI style=&quot;MARGIN: 0cm 0cm 10pt; mso-list: l0 level1 lfo1; tab-stops: list 36.0pt&quot; class=MsoNormal>&lt;SPAN lang=EN-GB>&lt;FONT size=3 face=&quot;Times New Roman&quot;>The second part of this practice is to continually validate the adaptation rules and constraints using test-driven development and model simulation techniques through the adaptation reasoning framework. &lt;/FONT>&lt;/SPAN>&lt;/LI>&lt;/OL>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 10pt&quot; class=MsoNormal>&lt;SPAN lang=EN-GB>&lt;FONT size=3 face=&quot;Times New Roman&quot;>The main characteristic of the proposed approach is that the rules express the adaptation policy in terms of the properties of the system to optimize and not directly in terms of the variants to use. This reduces significantly the number and complexity of the adaptation rules since the number of rules is correlated to the number of properties and not the number of variants. &lt;/FONT>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 10pt&quot; class=MsoNormal>&lt;SPAN lang=EN-GB>&lt;FONT size=3 face=&quot;Times New Roman&quot;>Modelling the adaptation consists in relating context information with variability in the system. This is done in four tasks. First, the context and variability of the system is defined. Second, test cases are written as a basis for continual validation of the adaptation model. Third, a set of hard constraints can be defined in order to link context variables to specific variability elements. Fourth, a set of adaptation rules can be defined based on properties of the system to be optimized.&lt;/FONT>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 10pt&quot; class=MsoNormal>&lt;FONT size=3>&lt;FONT face=&quot;Times New Roman&quot;>&lt;SPAN lang=EN-GB>Figure &lt;SPAN style=&quot;mso-no-proof: yes&quot;>32&lt;/SPAN>&lt;/SPAN>&lt;SPAN lang=EN-GB> shows these tasks in more detail.&lt;/SPAN>&lt;/FONT>&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 10pt&quot; class=MsoNormal>&lt;SPAN lang=EN-GB>&lt;?xml:namespace prefix = o ns = &quot;urn:schemas-microsoft-com:office:office&quot; />&lt;o:p>&lt;FONT size=3 face=&quot;Times New Roman&quot;>&amp;nbsp;&lt;IMG style=&quot;WIDTH: 599px; HEIGHT: 820px&quot; alt=&quot;&quot; src=&quot;resources/figure32_logic.bmp&quot; width=524 height=600>&lt;/FONT>&lt;/o:p>&lt;/SPAN>&lt;SPAN lang=EN-GB>&lt;o:p>&lt;FONT size=3 face=&quot;Times New Roman&quot;>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;PAGE-BREAK-AFTER: avoid; TEXT-ALIGN: center; MARGIN: 0cm 0cm 10pt&quot; class=MsoNormal align=center>&lt;SPAN lang=EN-GB>&lt;?xml:namespace prefix = v ns = &quot;urn:schemas-microsoft-com:vml&quot; />&lt;v:shapetype id=_x0000_t75 stroked=&quot;f&quot; filled=&quot;f&quot; path=&quot;m@4@5l@4@11@9@11@9@5xe&quot; o:preferrelative=&quot;t&quot; o:spt=&quot;75&quot; coordsize=&quot;21600,21600&quot;>&lt;v:stroke joinstyle=&quot;miter&quot;>&lt;/v:stroke>&lt;v:formulas>&lt;v:f eqn=&quot;if lineDrawn pixelLineWidth 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @0 1 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum 0 0 @1&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @2 1 2&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @3 21600 pixelWidth&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @3 21600 pixelHeight&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @0 0 1&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @6 1 2&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @7 21600 pixelWidth&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @8 21600 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @7 21600 pixelHeight&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @10 21600 0&quot;>&lt;/v:f>&lt;/v:formulas>&lt;v:path o:connecttype=&quot;rect&quot; gradientshapeok=&quot;t&quot; o:extrusionok=&quot;f&quot;>&lt;/v:path>&lt;o:lock aspectratio=&quot;t&quot; v:ext=&quot;edit&quot;>&lt;/o:lock>&lt;/v:shapetype>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 6pt 0cm&quot; class=MsoCaption>&lt;a name=&quot;_Toc280607094&quot;>&lt;/a>&lt;a name=&quot;_Ref246498550&quot;>&lt;SPAN style=&quot;mso-bookmark: _Toc280607094&quot;>&lt;SPAN lang=EN-GB>&lt;STRONG>&lt;FONT face=Times>Figure &lt;/FONT>&lt;/STRONG>&lt;/SPAN>&lt;/SPAN>&lt;/a>&lt;FONT face=Times>&lt;STRONG>&lt;SPAN style=&quot;mso-bookmark: _Ref246498550&quot;>&lt;SPAN style=&quot;mso-bookmark: _Toc280607094&quot;>&lt;SPAN lang=EN-GB>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>32&lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;SPAN style=&quot;mso-bookmark: _Ref246498550&quot;>&lt;SPAN style=&quot;mso-bookmark: _Toc280607094&quot;>&lt;/SPAN>&lt;/SPAN>&lt;SPAN style=&quot;mso-bookmark: _Toc280607094&quot;>&lt;SPAN lang=EN-GB>: &lt;/SPAN>&lt;/SPAN>&lt;/STRONG>&lt;SPAN style=&quot;mso-bookmark: _Toc280607094&quot;>&lt;SPAN style=&quot;FONT-WEIGHT: normal&quot; lang=EN-GB>Practice 2 - adaptation modelling&lt;/SPAN>&lt;/SPAN>&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 10pt&quot; class=MsoNormal>&lt;FONT size=3>&lt;FONT face=&quot;Times New Roman&quot;>&lt;B style=&quot;mso-bidi-font-weight: normal&quot;>&lt;SPAN lang=EN-GB>Task one&lt;/SPAN>&lt;/B>&lt;SPAN lang=EN-GB> involves modelling variants and context, since expressing constraints, properties and rules depends on these elements. The editor features a diagram for each of these concerns. As mentioned previously, most of these elements are output from the RE feature models, but the editor allows developers to change the context and variant diagrams. As the developer analyses which context affects the system and what these effects are, the context and variability is modelled interchangeably or in parallel (changes done in the adaptation model can later be extracted back into the requirement models, as was explained in Section &lt;/SPAN>&lt;SPAN lang=EN-GB>4.7&lt;SPAN style=&quot;BACKGROUND: yellow; mso-highlight: yellow&quot;>&lt;/SPAN>&lt;/SPAN>&lt;SPAN lang=EN-GB>). &lt;/SPAN>&lt;/FONT>&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 10pt&quot; class=MsoNormal>&lt;FONT size=3>&lt;FONT face=&quot;Times New Roman&quot;>&lt;B style=&quot;mso-bidi-font-weight: normal&quot;>&lt;SPAN lang=EN-GB>Task two&lt;/SPAN>&lt;/B>&lt;SPAN lang=EN-GB> consists of specifying test cases. When developing the adaptation model we use an iterative and test-driven approach where tests are written first, some implementation is done, more tests are written, etc. This helps the developers to define the constraints and rules in the Task 3 and 4 as they have to consider concretely the relationships between context and variants at an early stage. Also, it promotes thorough validation of the model.&lt;/SPAN>&lt;/FONT>&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 10pt&quot; class=MsoNormal>&lt;FONT size=3>&lt;FONT face=&quot;Times New Roman&quot;>&lt;B style=&quot;mso-bidi-font-weight: normal&quot;>&lt;SPAN lang=EN-GB>Task three &lt;/SPAN>&lt;/B>&lt;SPAN lang=EN-GB>is to define constraints associated to variants. These constraints are local to each variant and specify dependencies between variants and in which context the variant can or must be used. The constraint can be any first order logic expression. In practice, variant constraints allow reducing the set of configuration suitable for a particular context. The idea is to specify adequate local hard constraints in order to break the exponential growth of the potential configurations to be considered. This is a highly iterative task where the test cases are simulated on each increment and the results are used to refine the constraints or earlier model tasks.&lt;/SPAN>&lt;/FONT>&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 10pt&quot; class=MsoNormal>&lt;FONT size=3>&lt;FONT face=&quot;Times New Roman&quot;>&lt;B style=&quot;mso-bidi-font-weight: normal&quot;>&lt;SPAN lang=EN-GB>Task four&lt;/SPAN>&lt;/B>&lt;SPAN lang=EN-GB> is to specify property-based rules. For this we need to model properties, impacts and priority rules policies. These properties of concern are qualities of the system which should be optimized through the runtime adaptation, for example, the performance or the power consumption. They complement the adaptation model with enough information for choosing the best configuration for each context. As for task three, this is also a highly iterative task where the test cases are simulated on each increment and the results are used to refine the constraints or earlier model tasks.&lt;/SPAN>&lt;/FONT>&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 10pt&quot; class=MsoNormal>&lt;SPAN lang=EN-GB>&lt;FONT size=3 face=&quot;Times New Roman&quot;>A complete environment to support both modelling and validation of the adaptation model is available. This environment includes an editor, a simulator and validation tools. The environment has been built using the Eclipse-Modelling Framework (EMF) and the Kermeta platform together with the adaptation reasoning framework (like the Alloy SAT solver) for semantics and simulation support. The editor is a table-based editor which allows editing all the variants of the adaptation model. The tools are developed as open-source and are available from the DiVA project web page &lt;/FONT>&lt;a href=&quot;http://www.ict-diva.eu/&quot;>&lt;SPAN style=&quot;COLOR: windowtext; TEXT-DECORATION: none; text-underline: none&quot;>&lt;FONT size=3 face=&quot;Times New Roman&quot;>http://www.ict-diva.eu/&lt;/FONT>&lt;/SPAN>&lt;/a>&lt;FONT size=3 face=&quot;Times New Roman&quot;>.&lt;/FONT>&lt;/SPAN>&lt;/P>&lt;SPAN style=&quot;FONT-FAMILY: 'Times New Roman','serif'; FONT-SIZE: 11pt; mso-bidi-font-size: 12.0pt; mso-fareast-font-family: 'Times New Roman'; mso-ansi-language: EN-GB; mso-fareast-language: EN-US; mso-bidi-language: AR-SA&quot; lang=EN-GB>The following sections provide guidelines on how to use the DiVA metamodel editor and validation tools to model these different parts of the adaptation model. We recommend having &lt;/SPAN>&lt;SPAN style=&quot;FONT-FAMILY: 'Times New Roman','serif'; FONT-SIZE: 11pt; mso-bidi-font-size: 12.0pt; mso-fareast-font-family: 'Times New Roman'; mso-ansi-language: EN-GB; mso-fareast-language: EN-US; mso-bidi-language: AR-SA&quot; lang=EN-GB>Figure &lt;SPAN style=&quot;mso-no-proof: yes&quot;>32&lt;/SPAN>&lt;/SPAN>&lt;SPAN style=&quot;FONT-FAMILY: 'Times New Roman','serif'; FONT-SIZE: 11pt; mso-bidi-font-size: 12.0pt; mso-fareast-font-family: 'Times New Roman'; mso-ansi-language: EN-GB; mso-fareast-language: EN-US; mso-bidi-language: AR-SA&quot; lang=EN-GB> at hand when reading to support the process.&lt;/SPAN>&lt;FONT size=3 face=&quot;Times New Roman&quot;> &lt;/FONT>&#xD;
&lt;DIV style=&quot;mso-element: footnote-list&quot;>&lt;BR clear=all>&lt;FONT size=3 face=&quot;Times New Roman&quot;>&#xD;
&lt;HR align=left SIZE=1 width=&quot;33%&quot;>&#xD;
&lt;/FONT>&#xD;
&lt;DIV style=&quot;mso-element: footnote&quot; id=ftn1>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 10pt&quot; class=MsoFootnoteText>&lt;FONT face=&quot;Times New Roman&quot;>&lt;SPAN lang=EN-GB>[1] &lt;/SPAN>&lt;SPAN style=&quot;mso-ansi-language: EN-US&quot; lang=EN-US>Variants represent the variability of the system. A variant is a component that can be or not be included in the running cofiguration of a system, depending on the context.&lt;o:p>&lt;/o:p>&lt;/SPAN>&lt;/FONT>&lt;/P>&lt;/DIV>&lt;/DIV></mainDescription>
</org.eclipse.epf.uma:PracticeDescription>
