<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1">
  <org.eclipse.epf.uma:ProcessDescription xmi:id="-jBZ8CaesZXA-fbwlQkrzBg" name="SoaML Service Modelling,_9TfkAS5sEd6lwuZlFT8K0A" guid="-jBZ8CaesZXA-fbwlQkrzBg">
    <mainDescription>This method defines the guided procedure for modelling the structure of SoaML services.</mainDescription>
    <purpose>To define the structure of SoaML services.</purpose>
  </org.eclipse.epf.uma:ProcessDescription>
  <org.eclipse.epf.uma:ProcessDescription xmi:id="-WycXNZ76TtxqaZKCA6RZBw" name="SoaML Information Modelling,_iCf_ATMBEd6Xn5oF3XPf8w" guid="-WycXNZ76TtxqaZKCA6RZBw">
    <mainDescription>This method defines the guided procedure for modelling the behaviour of SoaML services.</mainDescription>
    <purpose>To define the behaviour of SoaML services.</purpose>
  </org.eclipse.epf.uma:ProcessDescription>
  <org.eclipse.epf.uma:ProcessDescription xmi:id="-lcbVgVzgVNeQjjXloZ5xAA" name="PIM_level_methodology,_c55IwXXkEd6y559hJOP-yw" guid="-lcbVgVzgVNeQjjXloZ5xAA">
    <mainDescription>&lt;p>&#xD;
    This process defines the 'methodology logic' for the PIM-level modelling within the SHAPE Methodology.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Here, 'methodology logic' means a reasonable, sense making sequence of the methods (i.e. the creation of models) on the&#xD;
    PIM level. This capability pattern defines a complete PIM level methodology logic where certain aspects are mandatory&#xD;
    and others are optional. The later can be (de)selected by the user, and the respective methods will not be included in&#xD;
    the final EPF delivery process (that defines the final customized methodology).&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The basic methdology logic for PIM level modeling with SHAPE is as follows:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        SoaML modeling is done the first, all extensions afterwards&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The extensions (and also some SoaML aspects) are optional. &amp;nbsp;&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    In particular, the following (preliminary) rules for PIM level modelling in SHAPE are defined here:&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;ol>&#xD;
    &lt;li>&#xD;
        &lt;span style=&quot;mso-ansi-language: DE&quot;>SOAML&lt;/span> &#xD;
        &lt;ul>&#xD;
            &lt;li>&#xD;
                &lt;span style=&quot;mso-ansi-language: DE&quot;>&lt;span style=&quot;mso-ansi-language: DE&quot;>The skeletons generated by the&#xD;
                CIM2PIM transformations severe as the basis for further PIM level modeling&lt;/span>&lt;/span>&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                &lt;span style=&quot;mso-ansi-language: DE&quot;>&lt;span style=&quot;mso-ansi-language: DE&quot;>SoaML basic (= CP: SoaML Service&#xD;
                Modelling) is mandatory, optional: behavior modeling (CP: SoaML Behavior Modelling)&lt;/span>&lt;/span>&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                &lt;span style=&quot;mso-ansi-language: DE&quot;>&lt;span style=&quot;mso-ansi-language: DE&quot;>SoaML Information is before&lt;span&#xD;
                style=&quot;mso-spacerun: yes&quot;>&amp;nbsp;&lt;/span> or concurrent with SoaML basic&lt;/span>&lt;/span>&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                &lt;span style=&quot;mso-ansi-language: DE&quot;>&lt;span style=&quot;mso-ansi-language: DE&quot;>All other SoaML methods come after&#xD;
                SoaML basic and are optional; these are:&lt;/span>&lt;/span> &#xD;
                &lt;ul>&#xD;
                    &lt;li>&#xD;
                        &lt;span style=&quot;mso-ansi-language: DE&quot;>&lt;span style=&quot;mso-ansi-language: DE&quot;>SoaML Rules &amp;amp;&#xD;
                        Constraints Modelling (Rules)&lt;/span>&lt;/span>&#xD;
                    &lt;/li>&#xD;
                    &lt;li>&#xD;
                        &lt;span style=&quot;mso-ansi-language: DE&quot;>&lt;span style=&quot;mso-ansi-language: DE&quot;>SoaML Events Modelling&#xD;
                        (Events)&lt;/span>&lt;/span>&#xD;
                    &lt;/li>&#xD;
                    &lt;li>&#xD;
                        &lt;span style=&quot;mso-ansi-language: DE&quot;>&lt;span style=&quot;mso-ansi-language: DE&quot;>SoaML Organiz. Modelling&#xD;
                        (Organization)&lt;/span>&lt;/span>&#xD;
                    &lt;/li>&#xD;
                    &lt;li>&#xD;
                        &lt;span style=&quot;mso-ansi-language: DE&quot;>&lt;span style=&quot;mso-ansi-language: DE&quot;>SoaML Goal Modelling&#xD;
                        (Organization) [this one might be before SoaML basic]&lt;/span>&lt;/span>&#xD;
                    &lt;/li>&#xD;
                &lt;/ul>&#xD;
            &lt;/li>&#xD;
        &lt;/ul>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;span style=&quot;mso-ansi-language: DE&quot;>&lt;span style=&quot;mso-ansi-language: DE&quot;>If Customization (= CP: Service Variability&#xD;
        Modeling), then after SoaML but before everything else&lt;/span>&lt;/span>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;span style=&quot;mso-ansi-language: DE&quot;>&lt;span style=&quot;mso-ansi-language: DE&quot;>&lt;span style=&quot;mso-ansi-language: DE&quot;>If&#xD;
        Agents, then all agent methods are after SoaML; there might be further options (I don’t not them&#xD;
        yet)&lt;/span>&lt;/span>&lt;/span>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;span style=&quot;mso-ansi-language: DE&quot;>&lt;span style=&quot;mso-ansi-language: DE&quot;>&lt;span style=&quot;mso-ansi-language: DE&quot;>If SWS,&#xD;
        then all SWS methods are after SoaML; there might be further options (I don’t not them yet)&lt;/span>&lt;/span>&lt;/span>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;span style=&quot;mso-ansi-language: DE&quot;>&lt;span style=&quot;mso-ansi-language: DE&quot;>&lt;span style=&quot;mso-ansi-language: DE&quot;>If&#xD;
        Composition, then after SoaML&lt;/span>&lt;/span>&lt;/span>&lt;br />&#xD;
    &lt;/li>&#xD;
&lt;/ol></mainDescription>
    <purpose>&lt;p>&#xD;
    (1) Define reasonable method sequence for SHAPE PIM-level modelling&lt;br />&#xD;
    (2) Serve as basis for PIM-level wizard of the SHAPE custom methodology tool&#xD;
&lt;/p></purpose>
    <scope>PIM-level methodology logic.</scope>
  </org.eclipse.epf.uma:ProcessDescription>
  <org.eclipse.epf.uma:ProcessDescription xmi:id="-SUdiOjC5X0HuTt-TL3saWg" name="JEE_development,_PojNUX0dEd6On6TUtok0Og" guid="-SUdiOjC5X0HuTt-TL3saWg">
    <mainDescription>This process defines the methodology logic for the PIM2PSM activity within the SHAPE methodology.</mainDescription>
    <purpose>&lt;p>&#xD;
    (1) Define a process sequence for the PIM2PSM activity within the&amp;nbsp;SHAPE methodology.&lt;br />&#xD;
    (2) Serve as basis for&amp;nbsp;the SHAPE custom methodology tool.&#xD;
&lt;/p></purpose>
    <scope>PIM2PSM transformation.</scope>
  </org.eclipse.epf.uma:ProcessDescription>
  <org.eclipse.epf.uma:ProcessDescription xmi:id="-kKbNV5fRbbA8hIou00MIKA" name="Realize service specification,_Vy7rwTGiEd-AuY0C-_IlYA" guid="-kKbNV5fRbbA8hIou00MIKA"/>
  <org.eclipse.epf.uma:ProcessDescription xmi:id="-8pwT2t95lJAehMnvfvKUCQ" name="Refine_business_processes,_DMXakVm1Ed-P0crEnKkwAQ" guid="-8pwT2t95lJAehMnvfvKUCQ">
    <mainDescription>&lt;p align=&quot;left&quot;>&#xD;
    &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>A BPMN model defines the business&#xD;
    processes of the domain which are relevant to the service-oriented architecture, and which will enable the goals&#xD;
    to&lt;/font>&lt;/font> &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot;&#xD;
    face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>be met, and the roles of the resources that perform&#xD;
    those processes. It includes a&lt;/font>&lt;/font>&lt;/font>&lt;/font> &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot;&#xD;
    face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>full&#xD;
    definition of the roles in the business, focusing on those fulfilled by the system&lt;/font>&lt;/font>&lt;/font>&lt;/font> &lt;font&#xD;
    size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot;&#xD;
    face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>or component to be developed. Business process&#xD;
    descriptions bring real business&lt;/font>&lt;/font>&lt;/font>&lt;/font> &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot;&#xD;
    face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>vision and&#xD;
    constitute an excellent formalization and analysis tool when constructing&lt;/font>&lt;/font>&lt;/font>&lt;/font> &lt;font size=&quot;2&quot;&#xD;
    face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font&#xD;
    size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>systems. In the context of a development project they are used in&#xD;
    business-oriented&lt;/font>&lt;/font>&lt;/font>&lt;/font> &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot;&#xD;
    face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>activities&#xD;
    related to requirements, specifications and analysis.&lt;/font>&lt;/font>&lt;/font>&lt;/font>&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;left&quot;>&#xD;
    &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>Business processes may be at a number&#xD;
    of levels of detail, from a high level description of the business processes down to task flows which is a set of&#xD;
    detailed specifications for the business services that the service-oriented architecture will provide. BPMN is designed&#xD;
    to cover many types of modelling and allows the creation of end-to-end business processes. It allows the specification&#xD;
    of private processes (both non-executable and executable), public processes, choreographies and&#xD;
    collaborations.&lt;/font>&lt;/font>&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;left&quot;>&#xD;
    &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>The BPMN modelling in the BAM&#xD;
    consists of process, information and organization modelling steps.&lt;/font>&lt;/font>&#xD;
&lt;/p></mainDescription>
    <purpose>&lt;ul class=&quot;noindent&quot;>&#xD;
    &lt;li>&#xD;
        To refine business processes for the business perspective of an SOA.&#xD;
    &lt;/li>&#xD;
&lt;/ul></purpose>
    <scope>CIM- and PSM-level methodology logic.</scope>
  </org.eclipse.epf.uma:ProcessDescription>
  <org.eclipse.epf.uma:ProcessDescription xmi:id="-L6u9HLHsvxOdpgmYyTFhLQ" name="SoaML_Modelling,_Ps5UAXtrEd6pqPlgZ3tDbA" guid="-L6u9HLHsvxOdpgmYyTFhLQ">
    <mainDescription>&lt;p align=&quot;left&quot;>&#xD;
    &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>A&lt;/font>&lt;/font> &lt;font size=&quot;2&quot;&#xD;
    face=&quot;NimbusRomNo9L-ReguItal&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-ReguItal&quot;>services architecture&lt;/font>&lt;/font> &lt;font&#xD;
    size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>is a high level description of how&#xD;
    participants work together&lt;/font>&lt;/font> &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot;&#xD;
    face=&quot;NimbusRomNo9L-Regu&quot;>for a purpose by providing and using services expressed as&lt;/font>&lt;/font> &lt;font size=&quot;2&quot;&#xD;
    face=&quot;NimbusRomNo9L-ReguItal&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-ReguItal&quot;>service contracts&lt;/font>&lt;/font>&lt;font&#xD;
    size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>. The&lt;/font>&lt;/font> &lt;font size=&quot;2&quot;&#xD;
    face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>services architecture defines the requirements for&#xD;
    the types of&lt;/font>&lt;/font> &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-ReguItal&quot;>&lt;font size=&quot;2&quot;&#xD;
    face=&quot;NimbusRomNo9L-ReguItal&quot;>participants&lt;/font>&lt;/font> &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot;&#xD;
    face=&quot;NimbusRomNo9L-Regu&quot;>and service&lt;/font>&lt;/font> &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot;&#xD;
    face=&quot;NimbusRomNo9L-Regu&quot;>realizations that fulfill specific roles. A&lt;/font>&lt;/font> &lt;font size=&quot;2&quot;&#xD;
    face=&quot;NimbusRomNo9L-ReguItal&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-ReguItal&quot;>role&lt;/font>&lt;/font> &lt;font size=&quot;2&quot;&#xD;
    face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>defines the basic function (or set of&lt;/font>&lt;/font>&#xD;
    &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>functions) that an entity may perform&#xD;
    in a particular context. In contrast, a participant&lt;/font>&lt;/font> &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font&#xD;
    size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>specifies the type of a party that fills the role in the context of a specific&#xD;
    services&lt;/font>&lt;/font> &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>architecture.&#xD;
    Both service contracts and participants can be reused when composing&lt;/font>&lt;/font> &lt;font size=&quot;2&quot;&#xD;
    face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>different services in other services&#xD;
    architectures.&lt;/font>&lt;/font>&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;left&quot;>&#xD;
    &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>A services architecture has&#xD;
    components at two levels of granularity: The&lt;/font>&lt;/font> &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-ReguItal&quot;>&lt;font size=&quot;2&quot;&#xD;
    face=&quot;NimbusRomNo9L-ReguItal&quot;>community&lt;/font>&lt;/font> &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-ReguItal&quot;>&lt;font size=&quot;2&quot;&#xD;
    face=&quot;NimbusRomNo9L-ReguItal&quot;>services architecture&lt;/font>&lt;/font> &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font&#xD;
    size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>is a ”top level” view of how independent participants&lt;/font>&lt;/font> &lt;font size=&quot;2&quot;&#xD;
    face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>work together for some purpose. The services&#xD;
    architecture of a community does&lt;/font>&lt;/font> &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot;&#xD;
    face=&quot;NimbusRomNo9L-Regu&quot;>not assume or require any one controlling entity or process. A participant may&#xD;
    also&lt;/font>&lt;/font> &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>have&#xD;
    a&lt;/font>&lt;/font> &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-ReguItal&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-ReguItal&quot;>participant&#xD;
    services architecture&lt;/font>&lt;/font>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>,&#xD;
    which specifies how parts of that participant&lt;/font>&lt;/font> &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot;&#xD;
    face=&quot;NimbusRomNo9L-Regu&quot;>(e.g., departments within an organization) work together to provide the&#xD;
    services&lt;/font>&lt;/font> &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>of the owning&#xD;
    participant. Participants that realize this specification must adhere to&lt;/font>&lt;/font> &lt;font size=&quot;2&quot;&#xD;
    face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>the architecture it specifies.&lt;/font>&lt;/font>&#xD;
&lt;/p></mainDescription>
    <purpose>&lt;ul>&#xD;
    &lt;li>&#xD;
        To&amp;nbsp;specify the services architecture.&#xD;
    &lt;/li>&#xD;
&lt;/ul></purpose>
    <scope>CIM- and PIM-level methodology logic.</scope>
  </org.eclipse.epf.uma:ProcessDescription>
  <org.eclipse.epf.uma:ProcessDescription xmi:id="-aP6OhxXc4WMxEfAphHN1UQ" name="SoaML Service Modelling,_9TfkAS5sEd6lwuZlFT8K0A" guid="-aP6OhxXc4WMxEfAphHN1UQ">
    <mainDescription>&lt;p align=&quot;left&quot;>&#xD;
    &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>A&lt;/font>&lt;/font> &lt;font size=&quot;2&quot;&#xD;
    face=&quot;NimbusRomNo9L-ReguItal&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-ReguItal&quot;>service contract approach&lt;/font>&lt;/font>&#xD;
    &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>defines service specifications (the&#xD;
    service contract)&lt;/font>&lt;/font> &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>that&#xD;
    define the roles each participant plays in the service (such as provider and consumer)&lt;/font>&lt;/font> &lt;font size=&quot;2&quot;&#xD;
    face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>and the interfaces they implement to play that role&#xD;
    in that service. These&lt;/font>&lt;/font> &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot;&#xD;
    face=&quot;NimbusRomNo9L-Regu&quot;>interfaces are then the types of ports on the participant, which obligates the&#xD;
    participant&lt;/font>&lt;/font> &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>to be able&#xD;
    to play that role in that service contract. The service contract may&lt;/font>&lt;/font> &lt;font size=&quot;2&quot;&#xD;
    face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>also own a behaviour that specifies the sequencing&#xD;
    of the exchanges between the&lt;/font>&lt;/font> &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot;&#xD;
    face=&quot;NimbusRomNo9L-Regu&quot;>parties as well as the resulting state and delivery of the capability.&lt;/font>&lt;/font>&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;left&quot;>&#xD;
    &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>The service contract represents an&#xD;
    agreement between the parties for how the&lt;/font>&lt;/font> &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot;&#xD;
    face=&quot;NimbusRomNo9L-Regu&quot;>service is to be provided and consumed. This agreement includes the interfaces,&lt;/font>&lt;/font>&#xD;
    &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>choreography and any other terms and&#xD;
    conditions. Service contracts are frequently&lt;/font>&lt;/font> &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot;&#xD;
    face=&quot;NimbusRomNo9L-Regu&quot;>part of one or more services architectures that define how a set of participants&#xD;
    provide&lt;/font>&lt;/font> &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>and use&#xD;
    services for a particular business purpose or process. The Service contract&lt;/font>&lt;/font> &lt;font size=&quot;2&quot;&#xD;
    face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>approach is most applicable where an enterprise,&#xD;
    community SOA architecture&lt;/font>&lt;/font> &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot;&#xD;
    face=&quot;NimbusRomNo9L-Regu&quot;>or choreography is defined and then services built or adapted to work within&#xD;
    that&lt;/font>&lt;/font> &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>architecture, or&#xD;
    when there are more than two parties involved in the service.&lt;/font>&lt;/font>&#xD;
&lt;/p></mainDescription>
    <purpose>&lt;ul>&#xD;
    &lt;li>&#xD;
        To model&amp;nbsp;service contracts and behaviour.&#xD;
    &lt;/li>&#xD;
&lt;/ul></purpose>
    <scope>CIM- and PIM-level methodology logic.</scope>
  </org.eclipse.epf.uma:ProcessDescription>
  <org.eclipse.epf.uma:ProcessDescription xmi:id="-vVB_1eHu483AzSR9j8_myQ" name="SoaML_Modelling,_Ps5UAXtrEd6pqPlgZ3tDbA" guid="-vVB_1eHu483AzSR9j8_myQ">
    <mainDescription>&lt;p align=&quot;left&quot;>&#xD;
    &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>This part of the methodology covers&#xD;
    selected areas of CIM-level modelling resulting in a&lt;/font>&lt;/font> &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-ReguItal&quot;>&lt;font&#xD;
    size=&quot;2&quot; face=&quot;NimbusRomNo9L-ReguItal&quot;>Business Architecture Model (BAM)&lt;/font>&lt;/font> &lt;font size=&quot;2&quot;&#xD;
    face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>that describes the business perspective of a&#xD;
    service-oriented architecture. The BAM is used to express the business operations and environment which the&#xD;
    service-oriented architecture is to support. The BAM includes business goals, business processes with associated&#xD;
    organisation roles and information elements, and capabilities&amp;nbsp;that are relevant for capturing business&#xD;
    requirements and identify services within a service-oriented architecture. The BAM further describes the services&#xD;
    architecture of the business community and the service contracts between the business entities participating in the&#xD;
    community.&lt;/font>&lt;/font>&#xD;
&lt;/p></mainDescription>
    <purpose>&lt;ul>&#xD;
    &lt;li>&#xD;
        To specify the business perspective of an SOA.&#xD;
    &lt;/li>&#xD;
&lt;/ul></purpose>
    <scope>CIM- and PIM-level methodology logic.</scope>
  </org.eclipse.epf.uma:ProcessDescription>
  <org.eclipse.epf.uma:ProcessDescription xmi:id="-dFY3YQCNuzHhtIvNLJcwPw" name="Define_service_interface,_w5quoSYUEd-_-qcazwayRQ" guid="-dFY3YQCNuzHhtIvNLJcwPw">
    <mainDescription>&lt;p align=&quot;left&quot;>&#xD;
    &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>There are several SOA interaction&#xD;
    paradigms in common use including document&lt;/font>&lt;/font> &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot;&#xD;
    face=&quot;NimbusRomNo9L-Regu&quot;>centric messaging, remote procedure calls (RPC), and publish-subscribe. The&#xD;
    decision&lt;/font>&lt;/font> &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>depends on&#xD;
    cohesion and coupling, state management, distributed transactions,&lt;/font>&lt;/font> &lt;font size=&quot;2&quot;&#xD;
    face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>performance, granularity, synchronization, ease of&#xD;
    development and maintenance,&lt;/font>&lt;/font> &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot;&#xD;
    face=&quot;NimbusRomNo9L-Regu&quot;>and best practices. SoaML supports both document-centric messaging and&#xD;
    RPC-style&lt;/font>&lt;/font> &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>service&#xD;
    data.&lt;/font>&lt;/font>&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;div align=&quot;left&quot;>&#xD;
            &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Medi&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Medi&quot;>&lt;strong>Document-centric&#xD;
            messaging:&lt;/strong>&lt;/font>&lt;/font> &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-ReguItal&quot;>&lt;font size=&quot;2&quot;&#xD;
            face=&quot;NimbusRomNo9L-ReguItal&quot;>Message types&lt;/font>&lt;/font> &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font&#xD;
            size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>specify the information exchanged&lt;/font>&lt;/font> &lt;font size=&quot;2&quot;&#xD;
            face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>between service consumers and providers.&#xD;
            Message types represent ”pure data”&lt;/font>&lt;/font> &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot;&#xD;
            face=&quot;NimbusRomNo9L-Regu&quot;>that may be communicated between parties – it is then up to the parties,&#xD;
            based&lt;/font>&lt;/font> &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>on the&#xD;
            SOA specification, to interpret this data and act accordingly. As ”pure&lt;/font>&lt;/font> &lt;font size=&quot;2&quot;&#xD;
            face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>data” message types may not have&#xD;
            dependencies on the environment, location or&lt;/font>&lt;/font> &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font&#xD;
            size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>information system of either party.&lt;/font>&lt;/font>&#xD;
        &lt;/div>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;div align=&quot;left&quot;>&#xD;
            &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Medi&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Medi&quot;>&lt;strong>RPC-style service&#xD;
            data:&lt;/strong>&lt;/font>&lt;/font> &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-ReguItal&quot;>&lt;font size=&quot;2&quot;&#xD;
            face=&quot;NimbusRomNo9L-ReguItal&quot;>Service data&lt;/font>&lt;/font> &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font&#xD;
            size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>is data that is exchanged between service&lt;/font>&lt;/font> &lt;font size=&quot;2&quot;&#xD;
            face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>consumers and providers. The data types of&#xD;
            parameters for service operations are&lt;/font>&lt;/font> &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot;&#xD;
            face=&quot;NimbusRomNo9L-Regu&quot;>typed by a data type, primitive type, or message type.&lt;/font>&lt;/font>&#xD;
        &lt;/div>&#xD;
    &lt;/li>&#xD;
&lt;/ul></mainDescription>
    <purpose>&lt;ul>&#xD;
    &lt;li>&#xD;
        To&amp;nbsp;specify the interfaces and messages of a service interface.&#xD;
    &lt;/li>&#xD;
&lt;/ul></purpose>
  </org.eclipse.epf.uma:ProcessDescription>
  <org.eclipse.epf.uma:ProcessDescription xmi:id="-ics1Y13NrW94jxYFG7KkvA" name="SoaML Information Modelling,_iCf_ATMBEd6Xn5oF3XPf8w" guid="-ics1Y13NrW94jxYFG7KkvA">
    <mainDescription>This capability pattern defines the guided procedure for modelling service interfaces and behaviour.</mainDescription>
    <purpose>&lt;ul>&#xD;
    &lt;li>&#xD;
        To model service interfaces and behaviour.&#xD;
    &lt;/li>&#xD;
&lt;/ul></purpose>
    <scope>PIM-level methodology logic.</scope>
  </org.eclipse.epf.uma:ProcessDescription>
  <org.eclipse.epf.uma:ProcessDescription xmi:id="-svNtYGy3tA6G2FlO4lYGBg" name="Pattern,_EkOroX0aEd63rfdoUaFg2Q" guid="-svNtYGy3tA6G2FlO4lYGBg">
    <mainDescription>This process defines the methodology logic for the service composition activity within the SHAPE methodology.</mainDescription>
    <purpose>&lt;p>&#xD;
    (1) Define a process sequence for the&amp;nbsp;service composition&amp;nbsp;activity within the&amp;nbsp;SHAPE methodology.&lt;br />&#xD;
    (2) Serve as basis for&amp;nbsp;the SHAPE custom methodology tool.&#xD;
&lt;/p></purpose>
    <scope>PIM-level methodology logic.</scope>
  </org.eclipse.epf.uma:ProcessDescription>
  <org.eclipse.epf.uma:ProcessDescription xmi:id="-_OiV9Tg2xaVNNoNCtneiNw" name="JEE_development,_PojNUX0dEd6On6TUtok0Og" guid="-_OiV9Tg2xaVNNoNCtneiNw">
    <mainDescription>This process defines the methodology logic for the PIM2PSM activity within the SHAPE methodology.</mainDescription>
    <purpose>&lt;p>&#xD;
    (1) Define a process sequence for the PIM2PSM activity within the&amp;nbsp;SHAPE methodology.&lt;br />&#xD;
    (2) Serve as basis for&amp;nbsp;the SHAPE custom methodology tool.&#xD;
&lt;/p></purpose>
    <scope>PIM2PSM transformation.</scope>
  </org.eclipse.epf.uma:ProcessDescription>
  <org.eclipse.epf.uma:ProcessDescription xmi:id="-SDL-dZqqVFpJCIpEB-1NcA" name="Realize service specification,_Vy7rwTGiEd-AuY0C-_IlYA" guid="-SDL-dZqqVFpJCIpEB-1NcA">
    <mainDescription>&lt;p align=&quot;left&quot;>&#xD;
    &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>The component model focuses on&#xD;
    specifying the involved software components that&lt;/font>&lt;/font> &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot;&#xD;
    face=&quot;NimbusRomNo9L-Regu&quot;>realizes the specified services architecture, either for a community or a&#xD;
    participant.&lt;/font>&lt;/font> &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>Once the&#xD;
    components are defined a composite structure is used is show how implementations&lt;/font>&lt;/font> &lt;font size=&quot;2&quot;&#xD;
    face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>of these components form a composite service&#xD;
    oriented application.&lt;/font>&lt;/font>&#xD;
&lt;/p></mainDescription>
    <purpose>&lt;ul>&#xD;
    &lt;li>&#xD;
        To&amp;nbsp;specify the software components that implements the IT perspective of an SOA.&#xD;
    &lt;/li>&#xD;
&lt;/ul></purpose>
  </org.eclipse.epf.uma:ProcessDescription>
  <org.eclipse.epf.uma:ProcessDescription xmi:id="-kLo037B8TBYL7xzrXo5HEg" name="Specify_service_orchestrations,_TY8AwVwvEd-M3aJMD1EArw" guid="-kLo037B8TBYL7xzrXo5HEg">
    <mainDescription>This capability pattern defines the guided procedure for specifying service orchestrations.</mainDescription>
    <purpose>&lt;ul>&#xD;
    &lt;li>&#xD;
        To&amp;nbsp;specify service orchestrations.&#xD;
    &lt;/li>&#xD;
&lt;/ul></purpose>
  </org.eclipse.epf.uma:ProcessDescription>
  <org.eclipse.epf.uma:ProcessDescription xmi:id="-ekAQXTWDnJTRAZjZZUursA" name="SoaML_Modelling,_Ps5UAXtrEd6pqPlgZ3tDbA" guid="-ekAQXTWDnJTRAZjZZUursA">
    <mainDescription>&lt;p align=&quot;left&quot;>&#xD;
    &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>The&lt;/font>&lt;/font> &lt;font size=&quot;2&quot;&#xD;
    face=&quot;NimbusRomNo9L-ReguItal&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-ReguItal&quot;>Software Architecture Model&#xD;
    (SAM)&lt;/font>&lt;/font> &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>describes the&#xD;
    overall architecture of the&lt;/font>&lt;/font> &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot;&#xD;
    face=&quot;NimbusRomNo9L-Regu&quot;>system at the PIM level. It partitions the system into components and defines&#xD;
    the&lt;/font>&lt;/font> &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>components in terms&#xD;
    of what interfaces they provide, what interfaces they use, and&lt;/font>&lt;/font> &lt;font size=&quot;2&quot;&#xD;
    face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>how these interfaces should be used (protocol). Two&#xD;
    aspects of component collaborations&lt;/font>&lt;/font> &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot;&#xD;
    face=&quot;NimbusRomNo9L-Regu&quot;>are described: the static model (structure) and dynamic model (behaviour).&lt;/font>&lt;/font>&#xD;
    &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>The structural model describes the&#xD;
    components, their dependencies, and their interfaces;&lt;/font>&lt;/font> &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font&#xD;
    size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>the dynamic model describes the component interactions and protocols.&lt;/font>&lt;/font>&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;left&quot;>&#xD;
    &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>We follow a top-down approach that&#xD;
    progresses by refinement, starting from a&lt;/font>&lt;/font>&amp;nbsp;&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot;&#xD;
    face=&quot;NimbusRomNo9L-Regu&quot;>high level specification of the system (the&lt;/font>&lt;/font> &lt;font size=&quot;2&quot;&#xD;
    face=&quot;NimbusRomNo9L-ReguItal&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-ReguItal&quot;>services architecture&lt;/font>&lt;/font>&lt;font&#xD;
    size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>, a composite collaboration&lt;/font>&lt;/font>&#xD;
    &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>representing the service), until a&#xD;
    fine grained specification (components,&lt;/font>&lt;/font> &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot;&#xD;
    face=&quot;NimbusRomNo9L-Regu&quot;>interfaces and data).&lt;/font>&lt;/font>&#xD;
&lt;/p></mainDescription>
    <purpose>&lt;ul>&#xD;
    &lt;li>&#xD;
        To specify&amp;nbsp;the IT perspective of an SOA.&#xD;
    &lt;/li>&#xD;
&lt;/ul></purpose>
    <scope>PIM-level methodology logic.</scope>
  </org.eclipse.epf.uma:ProcessDescription>
  <org.eclipse.epf.uma:ProcessDescription xmi:id="-h6FJAs1JCUyXEuSt4pXz5A" name="JEE_development,_PojNUX0dEd6On6TUtok0Og" guid="-h6FJAs1JCUyXEuSt4pXz5A">
    <mainDescription>This capability pattern defines the guided procedure for developing JEE service implementations.</mainDescription>
    <purpose>&lt;ul>&#xD;
    &lt;li>&#xD;
        To develop JEE service implementations.&#xD;
    &lt;/li>&#xD;
&lt;/ul></purpose>
    <scope>PSM-level methodology logic.</scope>
  </org.eclipse.epf.uma:ProcessDescription>
  <org.eclipse.epf.uma:ProcessDescription xmi:id="-k8lgxlWlqfgEJOtVqGzUqw" name="WS_development,_uZFnETvzEd-OFL4K-b4X_A" guid="-k8lgxlWlqfgEJOtVqGzUqw">
    <mainDescription>This capability pattern defines the guided procedure for developing Web Services.</mainDescription>
    <purpose>&lt;ul>&#xD;
    &lt;li>&#xD;
        To develop&amp;nbsp;Web Services&amp;nbsp;implementations.&#xD;
    &lt;/li>&#xD;
&lt;/ul></purpose>
  </org.eclipse.epf.uma:ProcessDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-S8-oIp0kIbAH05ux81AatA" name="PIM4Agents_model,_Qby4kbMxEd67Yp2a_9FGZw" guid="-S8-oIp0kIbAH05ux81AatA">
    <refinedDescription>The PIM4Agents model is defined in accordance to the Ecore meta-metamodel. It contains all information from the design and&#xD;
is used as input for the model transformation to JADE and JACK.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-cLkie-nfUNoz3iubAdLPfQ" name="SoaML_Information_Diagram,_Qby4mLMxEd67Yp2a_9FGZw" guid="-cLkie-nfUNoz3iubAdLPfQ">
    <refinedDescription>Class diagram that describes data structure of exchanged messages.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-8UE4ai4Kp1VfQPotlvbrmw" name="Environment_Diagram,_Qby4oLMxEd67Yp2a_9FGZw" guid="-8UE4ai4Kp1VfQPotlvbrmw">
    <refinedDescription>&lt;p>&#xD;
    &lt;b>&lt;font face=&quot;Utopia-Bold&quot; size=&quot;3&quot;>&lt;font face=&quot;Utopia-Bold&quot; size=&quot;3&quot;>&lt;span lang=&quot;EN-GB&quot;&#xD;
    style=&quot;mso-ansi-language: EN-GB; mso-bidi-font-weight: bold&quot;>The Environment diagram&lt;/span> &lt;span lang=&quot;EN-GB&quot;&#xD;
    style=&quot;mso-ansi-language: EN-GB&quot;>allows modeling any kind of either inside or outside the&amp;nbsp; MAS existing resources&#xD;
    that an agent might have access to achieve a certain&amp;nbsp;task.&amp;nbsp;&lt;/span>&lt;/font>&lt;/font>&lt;/b>&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-rurqIY34dteb4EvardAWCQ" name="SoaML_Architecture_and_Behaviour_Diagram,_Qby4orMxEd67Yp2a_9FGZw" guid="-rurqIY34dteb4EvardAWCQ">
    <refinedDescription>Activity diagram that describes the behaviour (dynamics) of a service architecture. The behaviour represents the business&#xD;
logic of the global service that is being specified &#xD;
&lt;p>&#xD;
    &lt;span lang=&quot;EN-GB&quot;&#xD;
    style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: Arial; mso-bidi-font-size: 12.0pt; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: 'Times New Roman'; mso-ansi-language: EN-GB; mso-fareast-language: NO-BOK; mso-bidi-language: AR-SA&quot;>A&#xD;
    choreography is a UML Behaviour such as may be shown on an interaction diagram or activity diagram that is owned by the&#xD;
    ServiceContract. The choreography defines what must go between the contract roles as defined by their service&#xD;
    interfaces—when, and how each party is playing their role in that service without regard for who is participating.&lt;span&#xD;
    style=&quot;mso-spacerun: yes&quot;>&amp;nbsp;&lt;/span> The service contract &lt;i style=&quot;mso-bidi-font-style: normal&quot;>separates the&#xD;
    concerns&lt;/i> of how all parties agree to provide or use the service from how any party implements their role in that&#xD;
    service – or from their internal business process.&lt;/span>&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="--icStyPBMnVOceifRjFAjg" name="Interaction_Diagram,_Qby4kLMxEd67Yp2a_9FGZw" guid="--icStyPBMnVOceifRjFAjg">
    <refinedDescription>&lt;P>&lt;SPAN lang=EN-GB style=&quot;mso-ansi-language: EN-GB; mso-bidi-font-weight: bold&quot;>The Interaction diagram&lt;/SPAN>&lt;SPAN lang=EN-GB style=&quot;mso-ansi-language: EN-GB&quot;> allows modeling the actors part of this interaction and the ACL messages they exchange. In case of a protocol, the system designer can&amp;nbsp;moreover define in which order these messages are exchanges. This is done by modeling the message flows and its message scopes as well as specifying the exchange mode. &lt;?xml:namespace prefix = o ns = &quot;urn:schemas-microsoft-com:office:office&quot; />&lt;o:p>&lt;/o:p>&lt;/SPAN>&lt;/P>&#xD;
&lt;P class=MsoNormal style=&quot;MARGIN: 0cm 0cm 0pt&quot;>&lt;SPAN lang=EN-GB style=&quot;mso-bidi-font-size: 10.0pt&quot;>&lt;o:p>&lt;FONT face=&quot;Times New Roman&quot; size=3>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/SPAN>&lt;/P></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-o_XeglfqwLuHVkr9ZeqXLg" name="SoaML_Service_Diagram,_Qby4nLMxEd67Yp2a_9FGZw" guid="-o_XeglfqwLuHVkr9ZeqXLg">
    <refinedDescription>The purpose of services architecture collaboration is to illustrate how kinds of entities work together for some purpose.&#xD;
Collaborations are based on the concepts of roles to define how entities are involved in that collaboration (how and why&#xD;
they collaborate) without depending on what kind of entity is involved (e.g. a person, organization or system). As such, we&#xD;
can say that an entity “plays a role” in a collaboration. The services architecture serves to define the requirements of&#xD;
each of the participants. The participant roles are filled by participants with service points required of the entities&#xD;
that fill these roles and are then bound by the services architectures in which they participate.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-fE3Zc8kEHBZ7KtQjN7deJQ" name="Role_Diagram,_Qby4n7MxEd67Yp2a_9FGZw" guid="-fE3Zc8kEHBZ7KtQjN7deJQ">
    <refinedDescription>&lt;P align=left>&lt;FONT size=3>T&lt;/FONT>&lt;SPAN lang=EN-GB style=&quot;mso-ansi-language: EN-GB; mso-bidi-font-weight: bold&quot;>he Role diagram&lt;/SPAN>&lt;SPAN lang=EN-GB style=&quot;mso-ansi-language: EN-GB&quot;> allows modeling the different kinds of domain roles and how the relate to other roles, either domain roles or actors of interaction protocols. &lt;?xml:namespace prefix = o ns = &quot;urn:schemas-microsoft-com:office:office&quot; />&lt;o:p>&lt;/o:p>&lt;/SPAN>&lt;/P>&#xD;
&lt;P class=MsoNormal style=&quot;MARGIN: 0cm 0cm 0pt&quot;>&lt;SPAN lang=EN-GB style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: Arial&quot;>&lt;o:p>&amp;nbsp;&lt;/o:p>&lt;/SPAN>&lt;/P>&#xD;
&lt;P align=left>&amp;nbsp;&lt;/P></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-sPtguG1r3Oy9BTOv58_HcA" name="SoaML_Organization_Diagram,_Qby4pLMxEd67Yp2a_9FGZw" guid="-sPtguG1r3Oy9BTOv58_HcA">
    <refinedDescription>&lt;p class=&quot;MsoNormal&quot; style=&quot;MARGIN: 0cm 0cm 6pt&quot;>&#xD;
    &lt;span lang=&quot;EN-GB&quot;>Component diagram that describes structure (i.e. static) of a participant architecture.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;MsoNormal&quot; style=&quot;MARGIN: 0cm 0cm 6pt&quot;>&#xD;
    &lt;span lang=&quot;EN-GB&quot;>A services architecture has components at two levels of granularity: The &lt;i&#xD;
    style=&quot;mso-bidi-font-style: normal&quot;>community&lt;/i> services architecture is a “top level” view of how independent&#xD;
    participants work together for some purpose.&lt;span style=&quot;mso-spacerun: yes&quot;>&amp;nbsp;&lt;/span> The services architecture of&#xD;
    a community does not assume or require any one controlling entity or process.&lt;span&#xD;
    style=&quot;mso-spacerun: yes&quot;>&amp;nbsp;&lt;/span> The services architecture of a community is modelled as collaboration&#xD;
    stereotyped as &amp;lt;&amp;lt;ServicesArchitecture&amp;gt;&amp;gt;.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;MsoNormal&quot; style=&quot;MARGIN: 0cm 0cm 6pt&quot;>&#xD;
    &lt;span lang=&quot;EN-GB&quot;>A participant may also have services architecture – one that shows how parts of that participant&#xD;
    (e.g., departments within an organization) work together to provide the services of the owning participant.&lt;span&#xD;
    style=&quot;mso-spacerun: yes&quot;>&amp;nbsp;&lt;/span> The services architecture of a participant is shown as a UML structured class&#xD;
    or component with the &amp;lt;&amp;lt;ParticipantArchitecture&amp;gt;&amp;gt; stereotype and frequently has an associated business&#xD;
    process.&lt;/span>&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-8fL7Ru0JOPgeG1H_HtkC6A" name="Agent_Diagram,_Qby4p7MxEd67Yp2a_9FGZw" guid="-8fL7Ru0JOPgeG1H_HtkC6A">
    <refinedDescription>&lt;P>&lt;SPAN lang=EN-GB style=&quot;mso-ansi-language: EN-GB; mso-bidi-font-weight: bold&quot;>The Agent diagram&lt;/SPAN>&lt;SPAN lang=EN-GB style=&quot;mso-ansi-language: EN-GB&quot;> allows modeling the different kinds of agent types, their knowledge, plans, capabilities and potentially performed domain roles. &lt;?xml:namespace prefix = o ns = &quot;urn:schemas-microsoft-com:office:office&quot; />&lt;o:p>&lt;/o:p>&lt;/SPAN>&lt;/P>&#xD;
&lt;P class=MsoNormal style=&quot;MARGIN: 0cm 0cm 0pt&quot;>&lt;SPAN lang=EN-GB style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: Arial&quot;>&lt;o:p>&amp;nbsp;&lt;/o:p>&lt;/SPAN>&lt;/P></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-NHf_PGqk0ehqf02A6-jgAg" name="Organization_Diagram,_Qby4l7MxEd67Yp2a_9FGZw" guid="-NHf_PGqk0ehqf02A6-jgAg">
    <refinedDescription>&lt;P>&lt;FONT size=3> &lt;/FONT>&lt;/P>&#xD;
&lt;P>&lt;SPAN lang=EN-GB style=&quot;mso-ansi-language: EN-GB; mso-bidi-font-weight: bold&quot;>The Organization diagram&lt;/SPAN>&lt;SPAN lang=EN-GB style=&quot;mso-ansi-language: EN-GB&quot;> allows modeling the different kinds of organization types, their knowledge, plans, capabilities as well as required and performed domain roles. Moreover, agent interaction protocols can be introduced by the modeler to indicate how an organization interacts. &lt;?xml:namespace prefix = o ns = &quot;urn:schemas-microsoft-com:office:office&quot; />&lt;o:p>&lt;/o:p>&lt;/SPAN>&lt;/P>&#xD;
&lt;P class=MsoNormal style=&quot;MARGIN: 0cm 0cm 0pt&quot;>&lt;SPAN lang=EN-GB style=&quot;mso-bidi-font-size: 10.0pt&quot;>&lt;o:p>&lt;FONT face=&quot;Times New Roman&quot; size=3>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/SPAN>&lt;/P>&#xD;
&lt;P align=left>&amp;nbsp;&lt;/P></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-_LzCcHdDOEwglwTf4FXmXQ" name="Collaboration_Diagram,_Qby4j7MxEd67Yp2a_9FGZw" guid="-_LzCcHdDOEwglwTf4FXmXQ">
    <refinedDescription>&lt;P class=MsoNormal style=&quot;MARGIN: 0cm 0cm 0pt; mso-margin-top-alt: auto; mso-margin-bottom-alt: auto&quot;>&lt;SPAN lang=EN-GB style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: Arial; mso-bidi-font-weight: bold&quot;>The Collaboration diagram&lt;/SPAN>&lt;SPAN lang=EN-GB style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: Arial&quot;> allows modeling the different kinds of collaborations inside an organization. Any collaboration is defined in accordance to the interaction they utilize and the bindings between the interaction’s actors and the organization’s domain roles. &lt;?xml:namespace prefix = o ns = &quot;urn:schemas-microsoft-com:office:office&quot; />&lt;o:p>&lt;/o:p>&lt;/SPAN>&lt;/P></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-vYpUy95-HOaJ5Q61fpEdAA" name="Behavior_Diagram,_Qby4mrMxEd67Yp2a_9FGZw" guid="-vYpUy95-HOaJ5Q61fpEdAA">
    <refinedDescription>&lt;P align=left>&lt;FONT face=Utopia-Bold>&lt;FONT face=Utopia-Bold>&lt;SPAN lang=EN-GB style=&quot;mso-ansi-language: EN-GB; mso-bidi-font-weight: bold&quot;>The Behavior diagram&lt;/SPAN>&lt;SPAN lang=EN-GB style=&quot;mso-ansi-language: EN-GB&quot;> allows modeling plans in a workflow-like manner, i.e. the different types of activities can be combined using control aswell as information flows. Moreover, the pre- and post-conditions of a plan can be determined in the properties view of the development environment. &lt;?xml:namespace prefix = o ns = &quot;urn:schemas-microsoft-com:office:office&quot; />&lt;o:p>&lt;/o:p>&lt;/SPAN>&lt;/FONT>&lt;/FONT>&lt;/P></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-kT4q8gFUMwUSjw4QasFjFg" name="Deployment_Diagram,_Qby4qLMxEd67Yp2a_9FGZw" guid="-kT4q8gFUMwUSjw4QasFjFg">
    <refinedDescription>&lt;B>&lt;FONT face=Utopia-Bold size=3>&lt;FONT face=Utopia-Bold size=3>&#xD;
&lt;P>&lt;SPAN lang=EN-GB style=&quot;mso-ansi-language: EN-GB; mso-bidi-font-weight: bold&quot;>The Deployment diagram&lt;/SPAN>&lt;SPAN lang=EN-GB style=&quot;mso-ansi-language: EN-GB&quot;> allows modeling the agent instances and the way they are bound to organizations through the domain role binding and the membership concept. &lt;?xml:namespace prefix = o ns = &quot;urn:schemas-microsoft-com:office:office&quot; />&lt;o:p>&lt;/o:p>&lt;/SPAN>&lt;/P>&#xD;
&lt;P class=MsoNormal style=&quot;MARGIN: 0cm 0cm 0pt&quot;>&lt;SPAN lang=EN-GB style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: Arial&quot;>&lt;o:p>&amp;nbsp;&lt;/o:p>&lt;/SPAN>&lt;/P>&lt;/FONT>&lt;/FONT>&lt;/B></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-o8I739KJZnqz21YWo5WIbg" name="System_Architect,_MRXhwmMtEd-2eNPi9l6wMg" guid="-o8I739KJZnqz21YWo5WIbg">
    <refinedDescription>This worker is involved in the design of the components which compose the software system. This worker is involved in the&#xD;
design of the architecture of the system, with its components and their interfaces.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-8j-cufAavv7DqG9HF77xMw" name="SoaML_Service_Contract_Diagram,_MRXhxWMtEd-2eNPi9l6wMg" guid="-8j-cufAavv7DqG9HF77xMw">
    <refinedDescription>The purpose of services architecture collaboration is to illustrate how kinds of entities work together for some purpose.&#xD;
Collaborations are based on the concepts of roles to define how entities are involved in that collaboration (how and why&#xD;
they collaborate) without depending on what kind of entity is involved (e.g. a person, organization or system). As such, we&#xD;
can say that an entity “plays a role” in a collaboration. The services architecture serves to define the requirements of&#xD;
each of the participants. The participant roles are filled by participants with service points required of the entities&#xD;
that fill these roles and are then bound by the services architectures in which they participate.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-peQl3wh8JmCw71hK3hQGKA" name="SoaML_Service_Interface_Diagram,_MRXhxmMtEd-2eNPi9l6wMg" guid="-peQl3wh8JmCw71hK3hQGKA">
    <refinedDescription>Component diagram that describes how to interact with a service interface, i.e., which methods can be called at that&#xD;
interface.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-bYqvURVg9Xvv-8SmhWe_MA" name="Service_Variability_Specification_Model,_M_t1gmMtEd-2eNPi9l6wMg" guid="-bYqvURVg9Xvv-8SmhWe_MA">
    <refinedDescription>&lt;p>&#xD;
    This work product is based on the SHAPE Service Variability Metamodel that&amp;nbsp;supports the explicit description of&#xD;
    variable aspects of a service with respected to:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        the operation level (i.e. in- and output messages, grouped in operations)&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        the data level (input and output fields of messages)&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        explication of required elements (i.e. mandatory and optational aspects)&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        contraint definition among operations and data fields&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        specification of default and fixed values for data fields.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The 'ServiceVariabilitySpecification' describes the variable aspects of a service on the functional level, i.e.&#xD;
    operations &amp;amp; data fields wrt. to mandatory vs. optional and constraints among these; it can also contain&#xD;
    pre-configurations for certain user groups (by defining default values).&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This work product is the output of the SHAPE Editor for enabling service customization, and serves as the input for the&#xD;
    Consumer Editor&amp;nbsp;that&amp;nbsp;supports the creation of actual service variants.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-sIfPKrv2zRFT2PHxzqftXA" name="Service_Variability_Resolution_Model,_M_t1g2MtEd-2eNPi9l6wMg" guid="-sIfPKrv2zRFT2PHxzqftXA">
    <refinedDescription>&lt;p>&#xD;
    This work product is based on the SHAPE Service Variability Metamodel that&amp;nbsp;supports the explicit description of&#xD;
    variable aspects of a service with respected to:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        the operation level (i.e. in- and output messages, grouped in operations)&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        the data level (input and output fields of messages)&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        explication of required elements (i.e. mandatory and optational aspects)&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        contraint definition among operations and data fields&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        specification of default and fixed values for data fields.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The 'ServiceVariabilityResolution' describes a actual variant via which&amp;nbsp;a end-user consumes a service in a&#xD;
    customized and simplified&amp;nbsp;manner. It is the result&amp;nbsp;of the 'Variability Resolution Editor' that takes a&#xD;
    'ServiceVariabilitySpecification'&amp;nbsp;as input, and&amp;nbsp;support the selection of the desired aspects as well as the&#xD;
    definition of fixed values&amp;nbsp;for creating a valid&amp;nbsp;service variant.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-8HjZQ9H10vGYFB8PFimeWA" name="SWS_business_requirements,_Qby4grMxEd67Yp2a_9FGZw" guid="-8HjZQ9H10vGYFB8PFimeWA">
    <refinedDescription>This artifact identifies the features of Semantic Web Services that are needed to resolve the problem.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-SMxM34nZLXi7ccsb5V3kVg" name="SWS_requirements,_Qby4g7MxEd67Yp2a_9FGZw" guid="-SMxM34nZLXi7ccsb5V3kVg">
    <refinedDescription>&lt;p>&#xD;
    This artifact describes detailed&amp;nbsp;requirements for Semantic Web Service modelling.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-pMMvftcEiSpbfXE62FGJjA" name="SWS_requirements,_Qby4d7MxEd67Yp2a_9FGZw" guid="-pMMvftcEiSpbfXE62FGJjA">
    <refinedDescription>&lt;p>&#xD;
    This artifact describes detailed&amp;nbsp;requirements for Semantic Web Service modelling.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-3qhPLiOKyQ21YhDY4Z20Og" name="SoaML_SWS_model,_Qby4dLMxEd67Yp2a_9FGZw" guid="-3qhPLiOKyQ21YhDY4Z20Og">
    <refinedDescription>This artifact models&amp;nbsp;Semantic Web Services, using an extension of SoaML.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-32NjJ_bnpj2vHMWEYXOjXA" name="SoaML_Services_Architecture_Diagram,_agsBcF0FEd-hCNf1x7Sb0w" guid="-32NjJ_bnpj2vHMWEYXOjXA">
    <refinedDescription>&lt;p class=&quot;MsoNormal&quot; style=&quot;MARGIN: 0cm 0cm 6pt&quot;>&#xD;
    &lt;span lang=&quot;EN-GB&quot;>Component diagram that describes structure (i.e. static) of a participant architecture.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;MsoNormal&quot; style=&quot;MARGIN: 0cm 0cm 6pt&quot;>&#xD;
    &lt;span lang=&quot;EN-GB&quot;>A services architecture has components at two levels of granularity: The &lt;i&#xD;
    style=&quot;mso-bidi-font-style: normal&quot;>community&lt;/i> services architecture is a “top level” view of how independent&#xD;
    participants work together for some purpose.&lt;span style=&quot;mso-spacerun: yes&quot;>&amp;nbsp;&lt;/span> The services architecture of&#xD;
    a community does not assume or require any one controlling entity or process.&lt;span&#xD;
    style=&quot;mso-spacerun: yes&quot;>&amp;nbsp;&lt;/span> The services architecture of a community is modelled as collaboration&#xD;
    stereotyped as &amp;lt;&amp;lt;ServicesArchitecture&amp;gt;&amp;gt;.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;MsoNormal&quot; style=&quot;MARGIN: 0cm 0cm 6pt&quot;>&#xD;
    &lt;span lang=&quot;EN-GB&quot;>A participant may also have services architecture – one that shows how parts of that participant&#xD;
    (e.g., departments within an organization) work together to provide the services of the owning participant.&lt;span&#xD;
    style=&quot;mso-spacerun: yes&quot;>&amp;nbsp;&lt;/span> The services architecture of a participant is shown as a UML structured class&#xD;
    or component with the &amp;lt;&amp;lt;ParticipantArchitecture&amp;gt;&amp;gt; stereotype and frequently has an associated business&#xD;
    process.&lt;/span>&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-_1TXv3LOPWGkrNJxFsdLsg" name="Specify_services_architecture_community,_agsBYl0FEd-hCNf1x7Sb0w" guid="-_1TXv3LOPWGkrNJxFsdLsg">
    <refinedDescription>&lt;p align=&quot;left&quot;>&#xD;
    &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>A services architecture for a&#xD;
    community is modelled as a UML collaboration and&lt;/font>&lt;/font> &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot;&#xD;
    face=&quot;NimbusRomNo9L-Regu&quot;>specified in collaboration diagrams. We recommend to create a UML package for&lt;/font>&lt;/font>&#xD;
    &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>each services&#xD;
    architecture.&lt;/font>&lt;/font>&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-FGFVLMXxY201mokuevkzUA" name="System_Architect,_agsBZ10FEd-hCNf1x7Sb0w" guid="-FGFVLMXxY201mokuevkzUA">
    <refinedDescription>This worker is involved in the design of the components which compose the software system. This worker is involved in the&#xD;
design of the architecture of the system, with its components and their interfaces.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-N5m7wOT6a_eZb9Xki7hPiw" name="BPMN_Model,_agsBZF0FEd-hCNf1x7Sb0w" guid="-N5m7wOT6a_eZb9Xki7hPiw">
    <refinedDescription>&lt;p>&#xD;
    BPMN is intended to provide a standard notation that is understandable by all business stakeholders (i.e. business&#xD;
    analysts, technical developers,and business managers), aiming at bridging the communication gap that frequently occurs&#xD;
    between business process design and implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    BPMN distinguishes 3 basic types of sub-models of a business process :&#xD;
&lt;/p>&#xD;
&lt;ol>&#xD;
    &lt;li>&#xD;
        Private (internal) business processes&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Abstract (public) processes, and&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Collaboration (global) processes.&#xD;
    &lt;/li>&#xD;
&lt;/ol>&#xD;
&lt;p>&#xD;
    Modeling in BPMN is made by simple diagrams with a small set of graphical elements. It should make it easy for business&#xD;
    users as well as developers to understand the flow and the process. The four basic categories of elements are as&#xD;
    follows:&#xD;
&lt;/p>&#xD;
&lt;ol>&#xD;
    &lt;li>&#xD;
        Flow Objects (Events, Activities, Gateways)&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Connecting Objects (Sequence Flow, Message Flow, Association)&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Swimlanes (Pool, Lane)&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Artefacts&amp;nbsp;(Data Object, Group, Annotation)&#xD;
    &lt;/li>&#xD;
&lt;/ol>&#xD;
&lt;p>&#xD;
    These four categories of elements give us the opportunity to make a simple business process diagram (BPD). It is also&#xD;
    allowed in BPD to make your own type of a Flow Object or an Artifact to make the diagram more understandable.&#xD;
&lt;/p>&lt;br /></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-kBNXBoNfa8UaEyh80y1tKA" name="Specify_service_contract,_agsBXV0FEd-hCNf1x7Sb0w" guid="-kBNXBoNfa8UaEyh80y1tKA">
    <refinedDescription>&lt;p align=&quot;left&quot;>&#xD;
    &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>The specification of service&#xD;
    contracts can be seen as the refinement of a service&lt;/font>&lt;/font> &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font&#xD;
    size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>architecture. Service contracts are specified as UML collaborations in UML&#xD;
    collaboration&lt;/font>&lt;/font> &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot;&#xD;
    face=&quot;NimbusRomNo9L-Regu&quot;>diagrams.&lt;/font>&lt;/font>&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-05kIlnDL5LYeKVsrm48CqA" name="System_Architect,_agsBXF0FEd-hCNf1x7Sb0w" guid="-05kIlnDL5LYeKVsrm48CqA">
    <refinedDescription>This worker is involved in the design of the components which compose the software system. This worker is involved in the&#xD;
design of the architecture of the system, with its components and their interfaces.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-evaFKibcXg6nK2HyNxI73A" name="BPMN_Model,_agsBWV0FEd-hCNf1x7Sb0w" guid="-evaFKibcXg6nK2HyNxI73A">
    <refinedDescription>&lt;p>&#xD;
    BPMN is intended to provide a standard notation that is understandable by all business stakeholders (i.e. business&#xD;
    analysts, technical developers,and business managers), aiming at bridging the communication gap that frequently occurs&#xD;
    between business process design and implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    BPMN distinguishes 3 basic types of sub-models of a business process :&#xD;
&lt;/p>&#xD;
&lt;ol>&#xD;
    &lt;li>&#xD;
        Private (internal) business processes&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Abstract (public) processes, and&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Collaboration (global) processes.&#xD;
    &lt;/li>&#xD;
&lt;/ol>&#xD;
&lt;p>&#xD;
    Modeling in BPMN is made by simple diagrams with a small set of graphical elements. It should make it easy for business&#xD;
    users as well as developers to understand the flow and the process. The four basic categories of elements are as&#xD;
    follows:&#xD;
&lt;/p>&#xD;
&lt;ol>&#xD;
    &lt;li>&#xD;
        Flow Objects (Events, Activities, Gateways)&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Connecting Objects (Sequence Flow, Message Flow, Association)&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Swimlanes (Pool, Lane)&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Artefacts&amp;nbsp;(Data Object, Group, Annotation)&#xD;
    &lt;/li>&#xD;
&lt;/ol>&#xD;
&lt;p>&#xD;
    These four categories of elements give us the opportunity to make a simple business process diagram (BPD). It is also&#xD;
    allowed in BPD to make your own type of a Flow Object or an Artifact to make the diagram more understandable.&#xD;
&lt;/p>&lt;br /></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-B5iZ5F4KpCl-G7-wSCSyDQ" name="SoaML_Service_Contract_Diagram,_agsBV10FEd-hCNf1x7Sb0w" guid="-B5iZ5F4KpCl-G7-wSCSyDQ">
    <refinedDescription>The purpose of services architecture collaboration is to illustrate how kinds of entities work together for some purpose.&#xD;
Collaborations are based on the concepts of roles to define how entities are involved in that collaboration (how and why&#xD;
they collaborate) without depending on what kind of entity is involved (e.g. a person, organization or system). As such, we&#xD;
can say that an entity “plays a role” in a collaboration. The services architecture serves to define the requirements of&#xD;
each of the participants. The participant roles are filled by participants with service points required of the entities&#xD;
that fill these roles and are then bound by the services architectures in which they participate.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-hQ5Gx59hQRgJGBXwUjj_Ww" name="Specify_capabilities,_agiQVF0FEd-hCNf1x7Sb0w" guid="-hQ5Gx59hQRgJGBXwUjj_Ww">
    <refinedDescription>&lt;p>&#xD;
    Identify and specify&amp;nbsp;capabilities that may be exposed as services. Capabilities represent an abstraction of the&#xD;
    ability to affect change. Capabilities identify or specify a cohesive set of functions or resources that a service&#xD;
    provided by one or more participants might offer. Capabilities can be used by themselves or in conjunction with&#xD;
    participants to represent general functionality or abilities that a participant must have.&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;left&quot;>&#xD;
    &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>The specification of capabilities&#xD;
    should be considered optional in our methodology.&lt;/font>&lt;/font> &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot;&#xD;
    face=&quot;NimbusRomNo9L-Regu&quot;>Capabilities represent high-level services. For large business architectures it may&#xD;
    be&lt;/font>&lt;/font> &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>a good idea to start&#xD;
    with capability modelling to help identifying needed services,&lt;/font>&lt;/font> &lt;font size=&quot;2&quot;&#xD;
    face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>whereas for more technical architectures it might be&#xD;
    easier to focus on the IT services&lt;/font>&lt;/font> &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot;&#xD;
    face=&quot;NimbusRomNo9L-Regu&quot;>directly.&lt;/font>&lt;/font>&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-xVvs928V_bDlQSN9XYGxxw" name="SoaML_Capability_Diagram,_agsBd10FEd-hCNf1x7Sb0w" guid="-xVvs928V_bDlQSN9XYGxxw">
    <refinedDescription>Class diagram that describes capabilities and goals of the services.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-rVzdaVX7KwSPfdtw2a9oRQ" name="define_business_goals,_agiQVl0FEd-hCNf1x7Sb0w" guid="-rVzdaVX7KwSPfdtw2a9oRQ">
    <refinedDescription>&lt;p align=&quot;left&quot;>&#xD;
    &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>The purpose of the BMM is to agree&#xD;
    with the business stakeholders the business goals that will be met by implementing the service-oriented architecture,&#xD;
    so that a set of required high level business processes can be identified for further analysis. BMM provides a scheme&#xD;
    or structure for developing, communicating, and managing business plans in an organized manner.&lt;/font>&lt;/font> &lt;font&#xD;
    size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>In particular, the BMM supports&#xD;
    the&lt;/font>&lt;/font> &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot;&#xD;
    face=&quot;NimbusRomNo9L-Regu&quot;>following:&lt;/font>&lt;/font>&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;div align=&quot;left&quot;>&#xD;
            &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>It identifies factors that&#xD;
            motivate the establishment of business plans.&lt;/font>&lt;/font>&#xD;
        &lt;/div>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;div align=&quot;left&quot;>&#xD;
            &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>It identifies and defines the&#xD;
            elements of business plans.&lt;/font>&lt;/font>&#xD;
        &lt;/div>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;div align=&quot;left&quot;>&#xD;
            &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>It indicates how all these&#xD;
            factors and elements inter-relate.&lt;/font>&lt;/font>&#xD;
        &lt;/div>&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p align=&quot;left&quot;>&#xD;
    &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>Among these elements you find&#xD;
    business policies and business rule that provide&lt;/font>&lt;/font> &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot;&#xD;
    face=&quot;NimbusRomNo9L-Regu&quot;>governance for and guidance to the business. Once produced and agreed, the BMM&lt;/font>&lt;/font>&#xD;
    &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>serves as a reference that ensures&#xD;
    that a full assessment may be made of all the&lt;/font>&lt;/font> &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot;&#xD;
    face=&quot;NimbusRomNo9L-Regu&quot;>business implications of any proposed changes to the service-oriented&#xD;
    architecture.&lt;/font>&lt;/font>&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;left&quot;>&#xD;
    &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>The specification of the goals and&#xD;
    company’s motivations are defined in a business goals diagram. The goals can be structured by applying containers&#xD;
    within the BMM model. The containers contain one or more goals diagrams in which you can define the goals and their&#xD;
    relationships.&lt;/font>&lt;/font>&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-G2H-O5_WWIMYQr1_JlUDMA" name="System_Architect,_agiQWF0FEd-hCNf1x7Sb0w" guid="-G2H-O5_WWIMYQr1_JlUDMA">
    <refinedDescription>This worker is involved in the design of the components which compose the software system. This worker is involved in the&#xD;
design of the architecture of the system, with its components and their interfaces.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-NkmA2Y1ZnH5qeWg5eSlFWA" name="BPMN_Model,_agsBUF0FEd-hCNf1x7Sb0w" guid="-NkmA2Y1ZnH5qeWg5eSlFWA">
    <refinedDescription>&lt;p>&#xD;
    BPMN is intended to provide a standard notation that is understandable by all business stakeholders (i.e. business&#xD;
    analysts, technical developers,and business managers), aiming at bridging the communication gap that frequently occurs&#xD;
    between business process design and implementation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    BPMN distinguishes 3 basic types of sub-models of a business process :&#xD;
&lt;/p>&#xD;
&lt;ol>&#xD;
    &lt;li>&#xD;
        Private (internal) business processes&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Abstract (public) processes, and&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Collaboration (global) processes.&#xD;
    &lt;/li>&#xD;
&lt;/ol>&#xD;
&lt;p>&#xD;
    Modeling in BPMN is made by simple diagrams with a small set of graphical elements. It should make it easy for business&#xD;
    users as well as developers to understand the flow and the process. The four basic categories of elements are as&#xD;
    follows:&#xD;
&lt;/p>&#xD;
&lt;ol>&#xD;
    &lt;li>&#xD;
        Flow Objects (Events, Activities, Gateways)&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Connecting Objects (Sequence Flow, Message Flow, Association)&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Swimlanes (Pool, Lane)&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Artefacts&amp;nbsp;(Data Object, Group, Annotation)&#xD;
    &lt;/li>&#xD;
&lt;/ol>&#xD;
&lt;p>&#xD;
    These four categories of elements give us the opportunity to make a simple business process diagram (BPD). It is also&#xD;
    allowed in BPD to make your own type of a Flow Object or an Artifact to make the diagram more understandable.&#xD;
&lt;/p>&lt;br /></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-528v671n2Edm_VxfE6J4zQ" name="Specify_interfaces_and_messages,_jwgnDV0FEd-hCNf1x7Sb0w" guid="-528v671n2Edm_VxfE6J4zQ">
    <refinedDescription>&lt;p>&#xD;
    This task defines the guided procedure for specifying the interfaces and messages of a service interface.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-KxgOts47Qzu7rp2x4qWW3Q" name="SoaML_Service_Interface_Diagram,_jwgnDl0FEd-hCNf1x7Sb0w" guid="-KxgOts47Qzu7rp2x4qWW3Q">
    <refinedDescription>Component diagram that describes how to interact with a service interface, i.e., which methods can be called at that&#xD;
interface.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-8oTTqIA4cGUpzyQIuwUOdQ" name="System_Architect,_jwgnD10FEd-hCNf1x7Sb0w" guid="-8oTTqIA4cGUpzyQIuwUOdQ">
    <refinedDescription>This worker is involved in the design of the components which compose the software system. This worker is involved in the&#xD;
design of the architecture of the system, with its components and their interfaces.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Bb8TzEWNcXRO5KHBhf0JKw" name="SoaML_Capability_Diagram,_jwgnCl0FEd-hCNf1x7Sb0w" guid="-Bb8TzEWNcXRO5KHBhf0JKw">
    <refinedDescription>Class diagram that describes capabilities and goals of the services.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-0krGt3159S9XF-I0GdjT3A" name="SoaML_Message_Diagram,_jwgnCV0FEd-hCNf1x7Sb0w" guid="-0krGt3159S9XF-I0GdjT3A">
    <refinedDescription>Class diagram that describes data structure of exchanged messages.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-0hvOzU6s3QF87Pxeg6P2Ew" name="Specify_service_interface_behaviour,_jwgnAF0FEd-hCNf1x7Sb0w" guid="-0hvOzU6s3QF87Pxeg6P2Ew">
    <refinedDescription>&lt;p align=&quot;left&quot;>&#xD;
    &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>The behaviour of a service interface&#xD;
    expresses the expected interaction between the&lt;/font>&lt;/font> &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot;&#xD;
    face=&quot;NimbusRomNo9L-Regu&quot;>consumers and providers of services. It can be specified as any UML behavior,&#xD;
    the&lt;/font>&lt;/font> &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>most common ones&#xD;
    being activity, interaction or state machine. In the modelling&lt;/font>&lt;/font> &lt;font size=&quot;2&quot;&#xD;
    face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>steps below we outline the use of interactions in&#xD;
    the form of sequence diagrams.&lt;/font>&lt;/font>&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-6Ga29TDLE2EAPZJs7rYRNQ" name="System_Architect,_jwgm_10FEd-hCNf1x7Sb0w" guid="-6Ga29TDLE2EAPZJs7rYRNQ">
    <refinedDescription>This worker is involved in the design of the components which compose the software system. This worker is involved in the&#xD;
design of the architecture of the system, with its components and their interfaces.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-9KyPHu8E8YvL2Lu3sPe77w" name="SoaML_Service_Interface_Diagram,_jwgnBV0FEd-hCNf1x7Sb0w" guid="-9KyPHu8E8YvL2Lu3sPe77w">
    <refinedDescription>Component diagram that describes how to interact with a service interface, i.e., which methods can be called at that&#xD;
interface.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-c55zyKeHo0B7aCugNwLIkA" name="SoaML_Behaviour_BPMN_Diagram,_jwgnBl0FEd-hCNf1x7Sb0w" guid="-c55zyKeHo0B7aCugNwLIkA">
    <refinedDescription>BPMN&amp;nbsp;diagram that describes the behaviour (dynamics) of a service architecture. The behaviour represents the business&#xD;
logic of the global service that is being specified &#xD;
&lt;p>&#xD;
    &lt;span&#xD;
    style=&quot;FONT-FAMILY: Arial; FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: 'Times New Roman'; mso-ansi-language: EN-GB; mso-fareast-language: NO-BOK; mso-bidi-language: AR-SA&quot;&#xD;
     lang=&quot;EN-GB&quot;>A choreography is a UML Behaviour such as may be shown on an interaction diagram or activity diagram that&#xD;
    is owned by the ServiceContract. The choreography defines what must go between the contract roles as defined by their&#xD;
    service interfaces—when, and how each party is playing their role in that service without regard for who is&#xD;
    participating.&lt;span style=&quot;mso-spacerun: yes&quot;>&amp;nbsp;&lt;/span> The service contract &lt;i&#xD;
    style=&quot;mso-bidi-font-style: normal&quot;>separates the concerns&lt;/i> of how all parties agree to provide or use the service&#xD;
    from how any party implements their role in that service – or from their internal business process.&lt;/span>&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-uQlOaL3dZDsbI7xkUGRyvA" name="SoaML_Behaviour_Sequence_Diagram,_jwgnAl0FEd-hCNf1x7Sb0w" guid="-uQlOaL3dZDsbI7xkUGRyvA">
    <refinedDescription>Sequence diagram or statemachine that describes the behaviour of a service contract, i.e. the protocol between the entities&#xD;
(service interfaces) that compose a service contract.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-EBXO3M60bwiZSetgMWtTXg" name="SoaML_Behaviour_Activity_Diagram,_jwgnA10FEd-hCNf1x7Sb0w" guid="-EBXO3M60bwiZSetgMWtTXg">
    <refinedDescription>Activity diagram that describes the behaviour (dynamics) of a service architecture. The behaviour represents the business&#xD;
logic of the global service that is being specified &#xD;
&lt;p>&#xD;
    &lt;span lang=&quot;EN-GB&quot;&#xD;
    style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: Arial; mso-bidi-font-size: 12.0pt; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: 'Times New Roman'; mso-ansi-language: EN-GB; mso-fareast-language: NO-BOK; mso-bidi-language: AR-SA&quot;>A&#xD;
    choreography is a UML Behaviour such as may be shown on an interaction diagram or activity diagram that is owned by the&#xD;
    ServiceContract. The choreography defines what must go between the contract roles as defined by their service&#xD;
    interfaces—when, and how each party is playing their role in that service without regard for who is participating.&lt;span&#xD;
    style=&quot;mso-spacerun: yes&quot;>&amp;nbsp;&lt;/span> The service contract &lt;i style=&quot;mso-bidi-font-style: normal&quot;>separates the&#xD;
    concerns&lt;/i> of how all parties agree to provide or use the service from how any party implements their role in that&#xD;
    service – or from their internal business process.&lt;/span>&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-ozgKwjQrSL0dwXBW7tkU1Q" name="Service_composition_behaviour_modelling,_jwgm7l0FEd-hCNf1x7Sb0w" guid="-ozgKwjQrSL0dwXBW7tkU1Q">
    <refinedDescription>This task defines the guided procedure for modelling a service composition.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-M93BZszmO8_nwK4jMHeQHQ" name="SoaML2XSD,_jwgm4F0FEd-hCNf1x7Sb0w" guid="-M93BZszmO8_nwK4jMHeQHQ">
    <refinedDescription>This method defines the guided procedure for transforming SoaML models to&amp;nbsp;XSD files.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Qlje4ZHaiqFMrADRNfmLyw" name="WS_WSDL_Document,_jwgm4V0FEd-hCNf1x7Sb0w" guid="-Qlje4ZHaiqFMrADRNfmLyw">
    <refinedDescription>To define a WSDL document for describing the capabilities of a Web service.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-wPrXQ6IL93qc9_n5jaDyPw" name="SoaML2BPEL,_jwgm5V0FEd-hCNf1x7Sb0w" guid="-wPrXQ6IL93qc9_n5jaDyPw">
    <refinedDescription>This method defines the guided procedure for transforming SoaML models to&amp;nbsp;BPEL files.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-xKCFWAjd4QQXoaTHDhCLGQ" name="WS_BPEL_Document,_jwW1-F0FEd-hCNf1x7Sb0w" guid="-xKCFWAjd4QQXoaTHDhCLGQ">
    <refinedDescription>To define a BPEL document for&amp;nbsp;process execution.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Q5ZG78bF705U69UZudl9Kg" name="SoaML2WSDL,_jwgm4l0FEd-hCNf1x7Sb0w" guid="-Q5ZG78bF705U69UZudl9Kg">
    <refinedDescription>This method defines the guided procedure for transforming SoaML models to WSDL files.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Netumk5wqGAZmLIHhZLDYg" name="System_Architect,_jwW1-V0FEd-hCNf1x7Sb0w" guid="-Netumk5wqGAZmLIHhZLDYg">
    <refinedDescription>This worker is involved in the design of the components which compose the software system. This worker is involved in the&#xD;
design of the architecture of the system, with its components and their interfaces.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-eq2_bumD54lHVUaG7AGPJw" name="WS_XSD_Document,_jwgm5F0FEd-hCNf1x7Sb0w" guid="-eq2_bumD54lHVUaG7AGPJw">
    <refinedDescription>&lt;p>&#xD;
    To define an XSD document for information processing and passing.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-MMOqpqsL-I3HDoMblim0Tw" name="Specify_software_components,_jwW19F0FEd-hCNf1x7Sb0w" guid="-MMOqpqsL-I3HDoMblim0Tw">
    <refinedDescription>&lt;p align=&quot;left&quot;>&#xD;
    &lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot;&#xD;
    face=&quot;NimbusRomNo9L-Regu&quot;>&lt;font size=&quot;2&quot; face=&quot;NimbusRomNo9L-Regu&quot;>Software components are modelled as components with&#xD;
    composite structures using class diagrams in UML.&lt;/font>&lt;/font>&lt;/font>&lt;/font>&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-XeR_Ew5HeXcEcyPVq8z5Zw" name="System_Architect,_jwW18l0FEd-hCNf1x7Sb0w" guid="-XeR_Ew5HeXcEcyPVq8z5Zw">
    <refinedDescription>This worker is involved in the design of the components which compose the software system. This worker is involved in the&#xD;
design of the architecture of the system, with its components and their interfaces.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-7mj97VY2rO6C3kcvgGtHcQ" name="SoaML_Capability_Diagram,_jwW1710FEd-hCNf1x7Sb0w" guid="-7mj97VY2rO6C3kcvgGtHcQ">
    <refinedDescription>Class diagram that describes capabilities and goals of the services.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-_Ry4vbvRi0Uda96zU64TlA" name="SoaML_Participant_Diagram,_jwgm8V0FEd-hCNf1x7Sb0w" guid="-_Ry4vbvRi0Uda96zU64TlA">
    <refinedDescription>&lt;p class=&quot;MsoNormal&quot; style=&quot;MARGIN: 0cm 0cm 6pt&quot;>&#xD;
    &lt;span lang=&quot;EN-GB&quot;>Component diagram that describes structure (i.e. static) of a participant architecture.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;MsoNormal&quot; style=&quot;MARGIN: 0cm 0cm 6pt&quot;>&#xD;
    &lt;span lang=&quot;EN-GB&quot;>A services architecture has components at two levels of granularity: The &lt;i&#xD;
    style=&quot;mso-bidi-font-style: normal&quot;>community&lt;/i> services architecture is a “top level” view of how independent&#xD;
    participants work together for some purpose.&lt;span style=&quot;mso-spacerun: yes&quot;>&amp;nbsp;&lt;/span> The services architecture of&#xD;
    a community does not assume or require any one controlling entity or process.&lt;span&#xD;
    style=&quot;mso-spacerun: yes&quot;>&amp;nbsp;&lt;/span> The services architecture of a community is modelled as collaboration&#xD;
    stereotyped as &amp;lt;&amp;lt;ServicesArchitecture&amp;gt;&amp;gt;.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;MsoNormal&quot; style=&quot;MARGIN: 0cm 0cm 6pt&quot;>&#xD;
    &lt;span lang=&quot;EN-GB&quot;>A participant may also have services architecture – one that shows how parts of that participant&#xD;
    (e.g., departments within an organization) work together to provide the services of the owning participant.&lt;span&#xD;
    style=&quot;mso-spacerun: yes&quot;>&amp;nbsp;&lt;/span> The services architecture of a participant is shown as a UML structured class&#xD;
    or component with the &amp;lt;&amp;lt;ParticipantArchitecture&amp;gt;&amp;gt; stereotype and frequently has an associated business&#xD;
    process.&lt;/span>&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-zNfoBvm4qOYwUAJoiRhUIg" name="SoaML_Service_Interface_Diagram,_jwW19V0FEd-hCNf1x7Sb0w" guid="-zNfoBvm4qOYwUAJoiRhUIg">
    <refinedDescription>Component diagram that describes how to interact with a service interface, i.e., which methods can be called at that&#xD;
interface.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-5zQREIZSV8b72qp-kephGw" name="SoaML_Services_Architecture_Diagram,_jwW1810FEd-hCNf1x7Sb0w" guid="-5zQREIZSV8b72qp-kephGw">
    <refinedDescription>&lt;p class=&quot;MsoNormal&quot; style=&quot;MARGIN: 0cm 0cm 6pt&quot;>&#xD;
    &lt;span lang=&quot;EN-GB&quot;>Component diagram that describes structure (i.e. static) of a participant architecture.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;MsoNormal&quot; style=&quot;MARGIN: 0cm 0cm 6pt&quot;>&#xD;
    &lt;span lang=&quot;EN-GB&quot;>A services architecture has components at two levels of granularity: The &lt;i&#xD;
    style=&quot;mso-bidi-font-style: normal&quot;>community&lt;/i> services architecture is a “top level” view of how independent&#xD;
    participants work together for some purpose.&lt;span style=&quot;mso-spacerun: yes&quot;>&amp;nbsp;&lt;/span> The services architecture of&#xD;
    a community does not assume or require any one controlling entity or process.&lt;span&#xD;
    style=&quot;mso-spacerun: yes&quot;>&amp;nbsp;&lt;/span> The services architecture of a community is modelled as collaboration&#xD;
    stereotyped as &amp;lt;&amp;lt;ServicesArchitecture&amp;gt;&amp;gt;.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;MsoNormal&quot; style=&quot;MARGIN: 0cm 0cm 6pt&quot;>&#xD;
    &lt;span lang=&quot;EN-GB&quot;>A participant may also have services architecture – one that shows how parts of that participant&#xD;
    (e.g., departments within an organization) work together to provide the services of the owning participant.&lt;span&#xD;
    style=&quot;mso-spacerun: yes&quot;>&amp;nbsp;&lt;/span> The services architecture of a participant is shown as a UML structured class&#xD;
    or component with the &amp;lt;&amp;lt;ParticipantArchitecture&amp;gt;&amp;gt; stereotype and frequently has an associated business&#xD;
    process.&lt;/span>&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-Z8_eNgcaYIZoeQQs_ZvodA" name="Specify_services_architecture_community_behaviour,_jwgm910FEd-hCNf1x7Sb0w" guid="-Z8_eNgcaYIZoeQQs_ZvodA">
    <refinedDescription>This task defines the guided procedure for specifying the service orchestration for a community-level services&#xD;
architecture.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-uWu-TInf5HWki1PERLxQNA" name="System_Architect,_jwgm_V0FEd-hCNf1x7Sb0w" guid="-uWu-TInf5HWki1PERLxQNA">
    <refinedDescription>This worker is involved in the design of the components which compose the software system. This worker is involved in the&#xD;
design of the architecture of the system, with its components and their interfaces.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-fiNBDAcvSnHJVuY3IDnLNA" name="SoaML_Service_Contract_Diagram,_jwgm_F0FEd-hCNf1x7Sb0w" guid="-fiNBDAcvSnHJVuY3IDnLNA">
    <refinedDescription>The purpose of services architecture collaboration is to illustrate how kinds of entities work together for some purpose.&#xD;
Collaborations are based on the concepts of roles to define how entities are involved in that collaboration (how and why&#xD;
they collaborate) without depending on what kind of entity is involved (e.g. a person, organization or system). As such, we&#xD;
can say that an entity “plays a role” in a collaboration. The services architecture serves to define the requirements of&#xD;
each of the participants. The participant roles are filled by participants with service points required of the entities&#xD;
that fill these roles and are then bound by the services architectures in which they participate.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-HLw6Mw2S8cZW_i3ERPsEYA" name="SoaML_Behaviour_Activity_Diagram,_jwgm9V0FEd-hCNf1x7Sb0w" guid="-HLw6Mw2S8cZW_i3ERPsEYA">
    <refinedDescription>Activity diagram that describes the behaviour (dynamics) of a service architecture. The behaviour represents the business&#xD;
logic of the global service that is being specified &#xD;
&lt;p>&#xD;
    &lt;span lang=&quot;EN-GB&quot;&#xD;
    style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: Arial; mso-bidi-font-size: 12.0pt; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: 'Times New Roman'; mso-ansi-language: EN-GB; mso-fareast-language: NO-BOK; mso-bidi-language: AR-SA&quot;>A&#xD;
    choreography is a UML Behaviour such as may be shown on an interaction diagram or activity diagram that is owned by the&#xD;
    ServiceContract. The choreography defines what must go between the contract roles as defined by their service&#xD;
    interfaces—when, and how each party is playing their role in that service without regard for who is participating.&lt;span&#xD;
    style=&quot;mso-spacerun: yes&quot;>&amp;nbsp;&lt;/span> The service contract &lt;i style=&quot;mso-bidi-font-style: normal&quot;>separates the&#xD;
    concerns&lt;/i> of how all parties agree to provide or use the service from how any party implements their role in that&#xD;
    service – or from their internal business process.&lt;/span>&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-xtd2hymQ-DRKvp2_w7hLkQ" name="Specify_services_architecture_participant_behaviour,_jwgm-l0FEd-hCNf1x7Sb0w" guid="-xtd2hymQ-DRKvp2_w7hLkQ">
    <refinedDescription>This task defines the guided procedure for specifying the service orchestration for a participant-level services&#xD;
architecture.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-xD1EaKhlVMBMPg-qR9ug6A" name="SoaML_Services_Architecture_Diagram,_jwgm-F0FEd-hCNf1x7Sb0w" guid="-xD1EaKhlVMBMPg-qR9ug6A">
    <refinedDescription>&lt;p class=&quot;MsoNormal&quot; style=&quot;MARGIN: 0cm 0cm 6pt&quot;>&#xD;
    &lt;span lang=&quot;EN-GB&quot;>Component diagram that describes structure (i.e. static) of a participant architecture.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;MsoNormal&quot; style=&quot;MARGIN: 0cm 0cm 6pt&quot;>&#xD;
    &lt;span lang=&quot;EN-GB&quot;>A services architecture has components at two levels of granularity: The &lt;i&#xD;
    style=&quot;mso-bidi-font-style: normal&quot;>community&lt;/i> services architecture is a “top level” view of how independent&#xD;
    participants work together for some purpose.&lt;span style=&quot;mso-spacerun: yes&quot;>&amp;nbsp;&lt;/span> The services architecture of&#xD;
    a community does not assume or require any one controlling entity or process.&lt;span&#xD;
    style=&quot;mso-spacerun: yes&quot;>&amp;nbsp;&lt;/span> The services architecture of a community is modelled as collaboration&#xD;
    stereotyped as &amp;lt;&amp;lt;ServicesArchitecture&amp;gt;&amp;gt;.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;MsoNormal&quot; style=&quot;MARGIN: 0cm 0cm 6pt&quot;>&#xD;
    &lt;span lang=&quot;EN-GB&quot;>A participant may also have services architecture – one that shows how parts of that participant&#xD;
    (e.g., departments within an organization) work together to provide the services of the owning participant.&lt;span&#xD;
    style=&quot;mso-spacerun: yes&quot;>&amp;nbsp;&lt;/span> The services architecture of a participant is shown as a UML structured class&#xD;
    or component with the &amp;lt;&amp;lt;ParticipantArchitecture&amp;gt;&amp;gt; stereotype and frequently has an associated business&#xD;
    process.&lt;/span>&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-ug3N9W3BnHOgbTFZ1aXvKA" name="SoaML_Service_Interface_Diagram,_jwgm-V0FEd-hCNf1x7Sb0w" guid="-ug3N9W3BnHOgbTFZ1aXvKA">
    <refinedDescription>Component diagram that describes how to interact with a service interface, i.e., which methods can be called at that&#xD;
interface.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-XQwXuAQB1BzEA8sdtc1NGw" name="SoaML_Behaviour_BPMN_Diagram,_jwgm9F0FEd-hCNf1x7Sb0w" guid="-XQwXuAQB1BzEA8sdtc1NGw">
    <refinedDescription>BPMN&amp;nbsp;diagram that describes the behaviour (dynamics) of a service architecture. The behaviour represents the business&#xD;
logic of the global service that is being specified &#xD;
&lt;p>&#xD;
    &lt;span&#xD;
    style=&quot;FONT-FAMILY: Arial; FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: 'Times New Roman'; mso-ansi-language: EN-GB; mso-fareast-language: NO-BOK; mso-bidi-language: AR-SA&quot;&#xD;
     lang=&quot;EN-GB&quot;>A choreography is a UML Behaviour such as may be shown on an interaction diagram or activity diagram that&#xD;
    is owned by the ServiceContract. The choreography defines what must go between the contract roles as defined by their&#xD;
    service interfaces—when, and how each party is playing their role in that service without regard for who is&#xD;
    participating.&lt;span style=&quot;mso-spacerun: yes&quot;>&amp;nbsp;&lt;/span> The service contract &lt;i&#xD;
    style=&quot;mso-bidi-font-style: normal&quot;>separates the concerns&lt;/i> of how all parties agree to provide or use the service&#xD;
    from how any party implements their role in that service – or from their internal business process.&lt;/span>&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-2B2fA38dXngmN4Hgihfudw" name="SoaML_Behaviour_Sequence_Diagram,_jwgm9l0FEd-hCNf1x7Sb0w" guid="-2B2fA38dXngmN4Hgihfudw">
    <refinedDescription>Sequence diagram or statemachine that describes the behaviour of a service contract, i.e. the protocol between the entities&#xD;
(service interfaces) that compose a service contract.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-ErcvNotWEdEdTxCDlKI8vw" name="Specify interfaces,_jwW17V0FEd-hCNf1x7Sb0w" guid="-ErcvNotWEdEdTxCDlKI8vw">
    <refinedDescription>&lt;p>&#xD;
    This task defines the guided procedure for specifying the interfaces and messages of a service interface.&#xD;
&lt;/p></refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-SBQZlSqcEIky2KLLPCzv5w" name="SoaML_Capability_Diagram,_BQrogGKeEd-ZxYgnB8BYIw" guid="-SBQZlSqcEIky2KLLPCzv5w">
    <refinedDescription>Class diagram that describes capabilities and goals of the services.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-1wBL2cSFWbjPgaG8ipfygw" name="SoaML_Message_Diagram,_BQrogWKeEd-ZxYgnB8BYIw" guid="-1wBL2cSFWbjPgaG8ipfygw">
    <refinedDescription>Class diagram that describes data structure of exchanged messages.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-LGIu1fGrDYcpuHlI4RxAZg" name="SoaML_Service_Interface_Diagram,_BQrogmKeEd-ZxYgnB8BYIw" guid="-LGIu1fGrDYcpuHlI4RxAZg">
    <refinedDescription>Component diagram that describes how to interact with a service interface, i.e., which methods can be called at that&#xD;
interface.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-12r5C2fm_xa2Mmk_L95bPg" name="Implement_Web_service,_yj4Uml0FEd-hCNf1x7Sb0w" guid="-12r5C2fm_xa2Mmk_L95bPg">
    <refinedDescription>This task&amp;nbsp;defines the guided procedure for implementing a Web service using JEE technologies.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
  <org.eclipse.epf.uma:DescriptorDescription xmi:id="-3Z2FwzlPMgkMZLgjrP9NsA" name="Deploy_Web_service,_yj4UlF0FEd-hCNf1x7Sb0w" guid="-3Z2FwzlPMgkMZLgjrP9NsA">
    <refinedDescription>This task defines the guided procedure for deploying a Web service using JEE technologies.</refinedDescription>
  </org.eclipse.epf.uma:DescriptorDescription>
</xmi:XMI>
