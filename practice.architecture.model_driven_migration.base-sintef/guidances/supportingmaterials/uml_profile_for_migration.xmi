<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmi:id="-_U5OGd1Wcizt4vPk5aLpyQ" name="uml_profile_for_migration,_sTZKsJsnEeCui_A0lCfdaQ" guid="-_U5OGd1Wcizt4vPk5aLpyQ" changeDate="2011-06-27T13:08:45.783+0200">
  <mainDescription>&lt;h3>&#xD;
    &lt;span lang=&quot;en-GB&quot;>UML profile for migration&lt;/span>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    &lt;span lang=&quot;en-GB&quot;>A UML profile defines a&lt;/span> &lt;span lang=&quot;en-GB&quot;>standardized set of extensions and constraints&#xD;
    that tailors UML to a particular use. The&lt;/span> &lt;span lang=&quot;en-GB&quot;>migration profile contains concepts for integrating&#xD;
    with existing legacy, such as native libraries, executable programs, and databases, as well as for integrating with&#xD;
    existing Web services. The model-driven migration practice uses the migration concepts and comprises the interfaces and&#xD;
    structure of a service, as well as the behaviour of different service parts.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;table border=&quot;1&quot; cellspacing=&quot;0&quot; bordercolor=&quot;#000000&quot; cellpadding=&quot;7&quot; width=&quot;639&quot;>&#xD;
    &lt;colgroup>&#xD;
        &lt;col width=&quot;96&quot; />&#xD;
        &lt;col width=&quot;79&quot; />&#xD;
        &lt;col width=&quot;420&quot; />&#xD;
    &lt;/colgroup>&#xD;
    &lt;thead>&#xD;
        &lt;tr valign=&quot;top&quot;>&#xD;
            &lt;td bgcolor=&quot;#cccccc&quot; width=&quot;96&quot;>&#xD;
                &lt;p lang=&quot;en-GB&quot;>&#xD;
                    &lt;strong>Stereotype&lt;/strong>&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td bgcolor=&quot;#cccccc&quot; width=&quot;79&quot;>&#xD;
                &lt;p lang=&quot;en-GB&quot;>&#xD;
                    &lt;strong>UML base&lt;/strong>&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td bgcolor=&quot;#cccccc&quot; width=&quot;420&quot;>&#xD;
                &lt;p lang=&quot;en-GB&quot;>&#xD;
                    &lt;strong>Description&lt;/strong>&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
    &lt;/thead>&#xD;
    &lt;tbody>&#xD;
        &lt;tr valign=&quot;top&quot;>&#xD;
            &lt;td width=&quot;96&quot;>&#xD;
                &lt;p lang=&quot;en-GB&quot;>&#xD;
                    Consumer&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;79&quot;>&#xD;
                &lt;p lang=&quot;en-GB&quot;>&#xD;
                    Interface or Class&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;420&quot;>&#xD;
                &lt;p lang=&quot;en-GB&quot;>&#xD;
                    A «Consumer» models the interface provided by the consumer of a service. The consumer of the service&#xD;
                    receives the results of the service interaction.&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr valign=&quot;top&quot;>&#xD;
            &lt;td width=&quot;96&quot;>&#xD;
                &lt;p lang=&quot;en-GB&quot;>&#xD;
                    MessageType&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;79&quot;>&#xD;
                &lt;p lang=&quot;en-GB&quot;>&#xD;
                    Class or DataType&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;420&quot;>&#xD;
                &lt;p>&#xD;
                    &lt;span lang=&quot;en-GB&quot;>A «MessageType» is a kind of value object that represents information exchanged&#xD;
                    between participant requests and services. This information consists of data passed into, and/or&#xD;
                    returned from the invocation of an operation or event signal defined in a service interface.&lt;/span>&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr valign=&quot;top&quot;>&#xD;
            &lt;td width=&quot;96&quot;>&#xD;
                &lt;p lang=&quot;en-GB&quot;>&#xD;
                    Participant&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;79&quot;>&#xD;
                &lt;p>&#xD;
                    &lt;span lang=&quot;en-GB&quot;>Class&lt;/span>&lt;span lang=&quot;en-GB&quot;>or Component&lt;/span>&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;420&quot;>&#xD;
                &lt;p>&#xD;
                    &lt;span lang=&quot;en-GB&quot;>A «Participant» represents some (possibly concrete) party or component that provides&#xD;
                    and/or consumes services. Participants have ports. These ports may use the «Service» and «Request»&#xD;
                    stereotypes which are the interaction points where services are offered or consumed&#xD;
                    respectively.&lt;/span>&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr valign=&quot;top&quot;>&#xD;
            &lt;td width=&quot;96&quot;>&#xD;
                &lt;p lang=&quot;en-GB&quot;>&#xD;
                    Provider&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;79&quot;>&#xD;
                &lt;p lang=&quot;en-GB&quot;>&#xD;
                    Interface or Class&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;420&quot;>&#xD;
                &lt;p lang=&quot;en-GB&quot;>&#xD;
                    A «Provider» models the interface provided by the provider of a service. The provider of the service&#xD;
                    delivers the results of the service interaction.&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr valign=&quot;top&quot;>&#xD;
            &lt;td width=&quot;96&quot;>&#xD;
                &lt;p lang=&quot;en-GB&quot;>&#xD;
                    Request&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;79&quot;>&#xD;
                &lt;p lang=&quot;en-GB&quot;>&#xD;
                    Port&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;420&quot;>&#xD;
                &lt;p>&#xD;
                    &lt;span lang=&quot;en-GB&quot;>A «Request» extends&lt;/span> &lt;span lang=&quot;en-GB&quot;>Port&lt;/span>&lt;span lang=&quot;en-GB&quot;>to&#xD;
                    specify a feature of a&lt;/span> &lt;span lang=&quot;en-GB&quot;>Participant&lt;/span>&lt;span lang=&quot;en-GB&quot;>that represents a&#xD;
                    service the&lt;/span> &lt;span lang=&quot;en-GB&quot;>Participant&lt;/span> &lt;span lang=&quot;en-GB&quot;>needs and consumes from&#xD;
                    other participants.&lt;/span>&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr valign=&quot;top&quot;>&#xD;
            &lt;td width=&quot;96&quot;>&#xD;
                &lt;p lang=&quot;en-GB&quot;>&#xD;
                    Service&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;79&quot;>&#xD;
                &lt;p lang=&quot;en-GB&quot;>&#xD;
                    Port&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;420&quot;>&#xD;
                &lt;p>&#xD;
                    &lt;span lang=&quot;en-GB&quot;>A «Service» extends&lt;/span> &lt;span lang=&quot;en-GB&quot;>Port&lt;/span>&lt;span lang=&quot;en-GB&quot;>to&#xD;
                    specify a feature of a&lt;/span> &lt;span lang=&quot;en-GB&quot;>Participant&lt;/span>&lt;span lang=&quot;en-GB&quot;>that represents a&#xD;
                    service the&lt;/span> &lt;span lang=&quot;en-GB&quot;>Participant&lt;/span> &lt;span lang=&quot;en-GB&quot;>provides and offers for&#xD;
                    consumption by other participants.&lt;/span>&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr valign=&quot;top&quot;>&#xD;
            &lt;td width=&quot;96&quot;>&#xD;
                &lt;p lang=&quot;en-GB&quot;>&#xD;
                    ServiceChannel&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;79&quot;>&#xD;
                &lt;p lang=&quot;en-GB&quot;>&#xD;
                    Connector&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;420&quot;>&#xD;
                &lt;p>&#xD;
                    &lt;span lang=&quot;en-GB&quot;>A «ServiceChannel» provides a communication path between consumer Requests and&#xD;
                    provider services.&lt;/span>&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr valign=&quot;top&quot;>&#xD;
            &lt;td width=&quot;96&quot;>&#xD;
                &lt;p lang=&quot;en-GB&quot;>&#xD;
                    ServiceInterface&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;79&quot;>&#xD;
                &lt;p lang=&quot;en-GB&quot;>&#xD;
                    Class&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;420&quot;>&#xD;
                &lt;p>&#xD;
                    &lt;span lang=&quot;en-GB&quot;>A «ServiceInterface» defines the interface and responsibilities of a participant to&#xD;
                    provide or consume a service. It is used as the type of a&lt;/span> &lt;span lang=&quot;en-GB&quot;>Service&lt;/span>&#xD;
                    &lt;span lang=&quot;en-GB&quot;>or&lt;/span> &lt;span lang=&quot;en-GB&quot;>Request&lt;/span> &lt;span lang=&quot;en-GB&quot;>port.&lt;/span>&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
    &lt;/tbody>&#xD;
&lt;/table>&#xD;
&lt;p>&#xD;
    &lt;span lang=&quot;en-GB&quot;>The UML migration profile represents semantics of different types of migration features. The&#xD;
    semantics are used for code generation. The component types represent different sorts of legacy components that take&#xD;
    part in fulfilling the responsibilities of the legacy system. This might be existing shared libraries, executables,&#xD;
    Java libraries, databases, or web services.&amp;nbsp;The next table&lt;/span>&lt;span lang=&quot;en-GB&quot;>&amp;nbsp;&lt;/span>&lt;span&#xD;
    lang=&quot;en-GB&quot;>describes the stereotypes for the component types.&lt;/span>&#xD;
&lt;/p>&#xD;
&lt;table border=&quot;1&quot; cellspacing=&quot;0&quot; bordercolor=&quot;#000000&quot; cellpadding=&quot;7&quot; width=&quot;639&quot;>&#xD;
    &lt;colgroup>&#xD;
        &lt;col width=&quot;113&quot; />&#xD;
        &lt;col width=&quot;74&quot; />&#xD;
        &lt;col width=&quot;408&quot; />&#xD;
    &lt;/colgroup>&#xD;
    &lt;thead>&#xD;
        &lt;tr valign=&quot;top&quot;>&#xD;
            &lt;td bgcolor=&quot;#cccccc&quot; width=&quot;113&quot;>&#xD;
                &lt;p lang=&quot;en-GB&quot;>&#xD;
                    &lt;strong>Stereotype&lt;/strong>&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td bgcolor=&quot;#cccccc&quot; width=&quot;74&quot;>&#xD;
                &lt;p lang=&quot;en-GB&quot;>&#xD;
                    &lt;strong>UML base&lt;/strong>&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td bgcolor=&quot;#cccccc&quot; width=&quot;408&quot;>&#xD;
                &lt;p lang=&quot;en-GB&quot;>&#xD;
                    &lt;strong>Description&lt;/strong>&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
    &lt;/thead>&#xD;
    &lt;tbody>&#xD;
        &lt;tr valign=&quot;top&quot;>&#xD;
            &lt;td width=&quot;113&quot;>&#xD;
                &lt;p>&#xD;
                    &lt;span lang=&quot;en-GB&quot;>e&lt;/span>&lt;span lang=&quot;en-GB&quot;>xe&lt;/span>&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;74&quot;>&#xD;
                &lt;p lang=&quot;en-GB&quot;>&#xD;
                    Class&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;408&quot;>&#xD;
                &lt;p>&#xD;
                    &lt;span lang=&quot;en-GB&quot;>An «exe» d&lt;/span>&lt;span lang=&quot;en-GB&quot;>enotes the wrapping of an executable&#xD;
                    program.&lt;/span>&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr valign=&quot;top&quot;>&#xD;
            &lt;td width=&quot;113&quot;>&#xD;
                &lt;p lang=&quot;en-GB&quot;>&#xD;
                    JNI&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;74&quot;>&#xD;
                &lt;p lang=&quot;en-GB&quot;>&#xD;
                    Class&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;408&quot;>&#xD;
                &lt;p>&#xD;
                    &lt;span lang=&quot;en-GB&quot;>A «&lt;/span>&lt;span lang=&quot;en-GB&quot;>JNI» denotes the wrapping of a native library, such as&#xD;
                    a Windows shared DLL, using Java Native Interface (JNI).&lt;/span>&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr valign=&quot;top&quot;>&#xD;
            &lt;td width=&quot;113&quot;>&#xD;
                &lt;p lang=&quot;en-GB&quot;>&#xD;
                    db_jdbc&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;74&quot;>&#xD;
                &lt;p lang=&quot;en-GB&quot;>&#xD;
                    Class&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;408&quot;>&#xD;
                &lt;p>&#xD;
                    &lt;span lang=&quot;en-GB&quot;>A «db_jdbc» d&lt;/span>&lt;span lang=&quot;en-GB&quot;>enotes the wrapping of a JDBC database.&#xD;
                    Operations defined in classes of this type represent database SQL queries.&lt;/span>&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr valign=&quot;top&quot;>&#xD;
            &lt;td width=&quot;113&quot;>&#xD;
                &lt;p lang=&quot;en-GB&quot;>&#xD;
                    WebService&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;74&quot;>&#xD;
                &lt;p lang=&quot;en-GB&quot;>&#xD;
                    Class&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;408&quot;>&#xD;
                &lt;p>&#xD;
                    &lt;span lang=&quot;en-GB&quot;>A «WebService» d&lt;/span>&lt;span lang=&quot;en-GB&quot;>enotes the wrapping of an external Web&#xD;
                    service, i.e. a Web service client.&lt;/span>&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr valign=&quot;top&quot;>&#xD;
            &lt;td width=&quot;113&quot;>&#xD;
                &lt;p>&#xD;
                    &lt;span lang=&quot;en-GB&quot;>RestfulW&lt;/span>&lt;span lang=&quot;en-GB&quot;>ebService&lt;/span>&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;74&quot;>&#xD;
                &lt;p lang=&quot;en-GB&quot;>&#xD;
                    Class&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;408&quot;>&#xD;
                &lt;p>&#xD;
                    &lt;span lang=&quot;en-GB&quot;>A «&lt;/span>&lt;span lang=&quot;en-GB&quot;>RestfulWebService» denotes the wrapping of a restful&#xD;
                    Web service. Its endpoint is an URI that acts as a data source, which is fetched by the wrapper and&#xD;
                    used locally.&lt;/span>&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr valign=&quot;top&quot;>&#xD;
            &lt;td width=&quot;113&quot;>&#xD;
                &lt;p>&#xD;
                    &lt;span lang=&quot;en-GB&quot;>e&lt;/span>&lt;span lang=&quot;en-GB&quot;>xternal&lt;/span>&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;74&quot;>&#xD;
                &lt;p lang=&quot;en-GB&quot;>&#xD;
                    Class&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;408&quot;>&#xD;
                &lt;p>&#xD;
                    &lt;span lang=&quot;en-GB&quot;>An «external» d&lt;/span>&lt;span lang=&quot;en-GB&quot;>enotes integration with external Java&#xD;
                    libraries, e.g. provided by a jar file.&lt;/span>&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr valign=&quot;top&quot;>&#xD;
            &lt;td width=&quot;113&quot;>&#xD;
                &lt;p style=&quot;MARGIN-BOTTOM: 0cm&quot; lang=&quot;en-GB&quot;>&#xD;
                    asynch&#xD;
                &lt;/p>&#xD;
                &lt;p>&#xD;
                    &lt;span lang=&quot;en-GB&quot;>R&lt;/span>&lt;span lang=&quot;en-GB&quot;>SOp&lt;/span>&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;74&quot;>&#xD;
                &lt;p lang=&quot;en-GB&quot;>&#xD;
                    Operation&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;408&quot;>&#xD;
                &lt;p>&#xD;
                    &lt;span lang=&quot;en-GB&quot;>The pro&lt;/span>&lt;span lang=&quot;en-GB&quot;>file additionally provides stereotypes for specific&#xD;
                    types of operations, such as «asynch» for asynchronous operations and «RSOp» for restful service&#xD;
                    operations.&lt;/span>&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr valign=&quot;top&quot;>&#xD;
            &lt;td width=&quot;113&quot;>&#xD;
                &lt;p>&#xD;
                    &lt;span lang=&quot;en-GB&quot;>e&lt;/span>&lt;span lang=&quot;en-GB&quot;>xception&lt;/span>&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;74&quot;>&#xD;
                &lt;p lang=&quot;en-GB&quot;>&#xD;
                    Class&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;408&quot;>&#xD;
                &lt;p>&#xD;
                    &lt;span lang=&quot;en-GB&quot;>Exceptions can be speci&lt;/span>&lt;span lang=&quot;en-GB&quot;>fied explicitly by classes&#xD;
                    stereotyped «exception».&lt;/span>&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr valign=&quot;top&quot;>&#xD;
            &lt;td width=&quot;113&quot;>&#xD;
                &lt;p style=&quot;MARGIN-BOTTOM: 0cm&quot; lang=&quot;en-GB&quot;>&#xD;
                    throws&#xD;
                &lt;/p>&#xD;
                &lt;p lang=&quot;en-GB&quot;>&#xD;
                    catches&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;74&quot;>&#xD;
                &lt;p lang=&quot;en-GB&quot;>&#xD;
                    Dependency&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;408&quot;>&#xD;
                &lt;p>&#xD;
                    &lt;span lang=&quot;en-GB&quot;>Throwing and catching of exceptions are speci&lt;/span>&lt;span lang=&quot;en-GB&quot;>fied by&#xD;
                    dependencies stereotyped «throws» and «catches».&lt;/span>&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
    &lt;/tbody>&#xD;
&lt;/table>&#xD;
&lt;br />&#xD;
&lt;p style=&quot;MARGIN-BOTTOM: 0cm&quot;>&#xD;
    &lt;span lang=&quot;en-GB&quot;>The behaviour of a service and its contained legacy wrapper components is defined by UML activity&#xD;
    models.&lt;/span>&lt;span lang=&quot;en-GB&quot;>The interfaces declare operations that must be implemented by the components.&lt;/span>&#xD;
    &lt;span lang=&quot;en-GB&quot;>The behaviour of these operations is defined by associated activity models. An activity model&#xD;
    defines behaviour by sequences and branches of actions that are mapped to statements in code generation. Standard&#xD;
    (opaque) actions contain embedded Java code.&lt;/span> &lt;span lang=&quot;en-GB&quot;>CallOperationActions&lt;/span>&lt;span&#xD;
    lang=&quot;en-GB&quot;>are used for defining invocations to defined operations of related components. In addition, we define a&#xD;
    set of stereotypes in the migration profile for simplifying the action specification.&amp;nbsp;The next&#xD;
    table&amp;nbsp;describes the stereotypes for the specification of behaviour.&lt;/span>&lt;br />&#xD;
    &amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;table border=&quot;1&quot; cellspacing=&quot;0&quot; bordercolor=&quot;#000000&quot; cellpadding=&quot;7&quot; width=&quot;639&quot;>&#xD;
    &lt;colgroup>&#xD;
        &lt;col width=&quot;68&quot; />&#xD;
        &lt;col width=&quot;54&quot; />&#xD;
        &lt;col width=&quot;473&quot; />&#xD;
    &lt;/colgroup>&#xD;
    &lt;thead>&#xD;
        &lt;tr valign=&quot;top&quot;>&#xD;
            &lt;td bgcolor=&quot;#cccccc&quot; width=&quot;68&quot;>&#xD;
                &lt;p lang=&quot;en-GB&quot;>&#xD;
                    &lt;strong>Stereotype&lt;/strong>&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td bgcolor=&quot;#cccccc&quot; width=&quot;54&quot;>&#xD;
                &lt;p lang=&quot;en-GB&quot;>&#xD;
                    &lt;strong>UML base&lt;/strong>&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td bgcolor=&quot;#cccccc&quot; width=&quot;473&quot;>&#xD;
                &lt;p lang=&quot;en-GB&quot;>&#xD;
                    &lt;strong>Description&lt;/strong>&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
    &lt;/thead>&#xD;
    &lt;tbody>&#xD;
        &lt;tr valign=&quot;top&quot;>&#xD;
            &lt;td width=&quot;68&quot;>&#xD;
                &lt;p lang=&quot;en-GB&quot;>&#xD;
                    return&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;54&quot;>&#xD;
                &lt;p lang=&quot;en-GB&quot;>&#xD;
                    Action&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;473&quot;>&#xD;
                &lt;p>&#xD;
                    &lt;span lang=&quot;en-GB&quot;>A&lt;/span> &lt;span lang=&quot;en-GB&quot;>«&lt;/span>&lt;span lang=&quot;en-GB&quot;>return&lt;/span>&lt;span&#xD;
                    lang=&quot;en-GB&quot;>»&lt;/span>&lt;span lang=&quot;en-GB&quot;>is used to denote a return from the method execution with a&#xD;
                    specific value.&lt;/span>&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr valign=&quot;top&quot;>&#xD;
            &lt;td width=&quot;68&quot;>&#xD;
                &lt;p lang=&quot;en-GB&quot;>&#xD;
                    assign&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;54&quot;>&#xD;
                &lt;p lang=&quot;en-GB&quot;>&#xD;
                    Action&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;473&quot;>&#xD;
                &lt;p>&#xD;
                    &lt;span lang=&quot;en-GB&quot;>An&lt;/span> &lt;span lang=&quot;en-GB&quot;>«&lt;/span>&lt;span lang=&quot;en-GB&quot;>assign&lt;/span>&lt;span&#xD;
                    lang=&quot;en-GB&quot;>»&lt;/span>&lt;span lang=&quot;en-GB&quot;>is used to denote an assignment of a value to a&#xD;
                    variable.&lt;/span>&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr valign=&quot;top&quot;>&#xD;
            &lt;td width=&quot;68&quot;>&#xD;
                &lt;p lang=&quot;en-GB&quot;>&#xD;
                    setState&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;54&quot;>&#xD;
                &lt;p lang=&quot;en-GB&quot;>&#xD;
                    Action&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;473&quot;>&#xD;
                &lt;p>&#xD;
                    &lt;span lang=&quot;en-GB&quot;>A&lt;/span> &lt;span lang=&quot;en-GB&quot;>«&lt;/span>&lt;span lang=&quot;en-GB&quot;>setState&lt;/span>&lt;span&#xD;
                    lang=&quot;en-GB&quot;>»&lt;/span>&lt;span lang=&quot;en-GB&quot;>is used to denote the setting of an internal state variable,&#xD;
                    specifically used for asynchronous and long running operations.&lt;/span>&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr valign=&quot;top&quot;>&#xD;
            &lt;td width=&quot;68&quot;>&#xD;
                &lt;p lang=&quot;en-GB&quot;>&#xD;
                    setReturn&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;54&quot;>&#xD;
                &lt;p lang=&quot;en-GB&quot;>&#xD;
                    Action&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;473&quot;>&#xD;
                &lt;p>&#xD;
                    &lt;span lang=&quot;en-GB&quot;>A&lt;/span> &lt;span lang=&quot;en-GB&quot;>«setReturn» is used to set the return value of an&#xD;
                    asynchronous and long running operation.&lt;/span>&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr valign=&quot;top&quot;>&#xD;
            &lt;td width=&quot;68&quot;>&#xD;
                &lt;p>&#xD;
                    &lt;span lang=&quot;en-GB&quot;>p&lt;/span>&lt;span lang=&quot;en-GB&quot;>aram&lt;/span>&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;54&quot;>&#xD;
                &lt;p lang=&quot;en-GB&quot;>&#xD;
                    Action&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;473&quot;>&#xD;
                &lt;p>&#xD;
                    &lt;span lang=&quot;en-GB&quot;>A&lt;/span> &lt;span lang=&quot;en-GB&quot;>«param» is used to define an input parameter to a&#xD;
                    CallOperationAction. It references a previously defined variable;&lt;/span>&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr valign=&quot;top&quot;>&#xD;
            &lt;td width=&quot;68&quot;>&#xD;
                &lt;p lang=&quot;en-GB&quot;>&#xD;
                    valueparam&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;54&quot;>&#xD;
                &lt;p lang=&quot;en-GB&quot;>&#xD;
                    Action&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
            &lt;td width=&quot;473&quot;>&#xD;
                &lt;p>&#xD;
                    &lt;span lang=&quot;en-GB&quot;>A&lt;/span> &lt;span lang=&quot;en-GB&quot;>«valueparam» is used to dene a literal value as an input&#xD;
                    parameter to a CallOperationAction.&lt;/span>&#xD;
                &lt;/p>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
    &lt;/tbody>&#xD;
&lt;/table></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
