<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmi:id="-bM52MYKvdof-VUFCH5hiJA" name="new_tool,_b05VYJEKEeC7M8Klp754aQ" guid="-bM52MYKvdof-VUFCH5hiJA">
  <mainDescription>&lt;h3>&#xD;
    Eclipse Modeling Framework (EMF)&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    &lt;a href=&quot;http://www.eclipse.org/modeling/emf/&quot;>http://www.eclipse.org/modeling/emf/&lt;/a>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    EMF is a modeling framework and code generation facility for building tools and other applications based on a&#xD;
    structured data model. From a model specification described in XMI, EMF provides tools and runtime support to produce a&#xD;
    set of Java classes for the model, a set of adapter classes that enable viewing and command-based editing of the model,&#xD;
    and a basic editor. Models can be specified using annotated Java, XML documents, or modeling tools like Rational Rose,&#xD;
    then imported into EMF. Most important of all, EMF provides the foundation for interoperability with other EMF-based&#xD;
    tools and applications.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    EMF is a Java framework and code generation facility for building tools and other applications based on a structured&#xD;
    model. For those of you that have bought into the idea of object-oriented modeling, EMF helps you rapidly turn your&#xD;
    models into efficient, correct, and easily customizable Java code. For those of you that aren't necessarily sold on the&#xD;
    value of formal models, EMF is intended to provide you with the same benefits and a very low cost of entry.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    We can say that EMF provides a low cost entry, because an EMF model requires just a small subset of the kinds of things&#xD;
    that you can model in UML, specifically simple definitions of the classes and their attributes and relations, for which&#xD;
    a full-scale graphical modeling tool is unnecessary.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Actually, EMF started out as an implementation of the MOF specification but evolved from there based on the experience&#xD;
    we gained from implementing a large set of tools using it. EMF can be thought of as a highly efficient Java&#xD;
    implementation of a core subset of the MOF API. However, to avoid any confusion, the MOF-like core meta model in EMF is&#xD;
    called Ecore.&#xD;
&lt;/p></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
