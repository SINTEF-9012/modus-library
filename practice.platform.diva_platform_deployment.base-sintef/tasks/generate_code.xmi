<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:TaskDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmi:id="-r6WrXRrGdbdeykJ09ugfhg" name="generate_code,_7_iYQPJWEd-FpZGj9I_2_g" guid="-r6WrXRrGdbdeykJ09ugfhg" changeDate="2010-12-21T11:10:17.404+0100">
  <mainDescription>&lt;H3 style=&quot;MARGIN: 0cm 0cm 10pt&quot; class=MsoNormal>&lt;SPAN lang=EN-GB>&lt;SPAN lang=EN-GB>7.1 Code generation&lt;/SPAN>&lt;/SPAN>&lt;/H3>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 10pt&quot; class=MsoNormal>&lt;SPAN lang=EN-GB>&lt;FONT size=3>&lt;FONT face=Arial>&lt;SPAN lang=EN-GB>&lt;STRONG>7.1.1 Designing component types&lt;/STRONG>&lt;/SPAN>&lt;/FONT>&lt;/FONT>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 10pt&quot; class=MsoNormal>&lt;SPAN lang=EN-GB>&lt;STRONG>&lt;FONT size=3>&lt;FONT face=&quot;Times New Roman&quot;>Description&lt;?xml:namespace prefix = o ns = &quot;urn:schemas-microsoft-com:office:office&quot; />&lt;o:p>&lt;/o:p>&lt;/FONT>&lt;/FONT>&lt;/STRONG>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 10pt&quot; class=MsoNormal>&lt;SPAN lang=EN-GB>&lt;FONT size=3 face=&quot;Times New Roman&quot;>The component types of the system are designed during Practice 3. Here, we leverage these models to generate some code related to these component types. As a reminder, a component type is basically a factory for building component instances. It describes the services that are offered and required by all the instances conforming to this component type. The identification and design of the component types are performed by the business experts and the architects of the system following classic software engineering techniques. &lt;/FONT>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 10pt&quot; class=MsoNormal>&lt;SPAN lang=EN-GB>&lt;o:p>&lt;FONT size=3 face=&quot;Times New Roman&quot;>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 10pt&quot; class=MsoNormal>&lt;B style=&quot;mso-bidi-font-weight: normal&quot;>&lt;SPAN lang=EN-GB>&lt;FONT size=3>&lt;FONT face=&quot;Times New Roman&quot;>How-to&lt;o:p>&lt;/o:p>&lt;/FONT>&lt;/FONT>&lt;/SPAN>&lt;/B>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 10pt&quot; class=MsoNormal>&lt;FONT size=3>&lt;FONT face=&quot;Times New Roman&quot;>&lt;SPAN lang=EN-GB>We &lt;/SPAN>&lt;SPAN style=&quot;mso-ansi-language: EN-US&quot; lang=EN-US>use the SCA (Service Component Architecture, see &lt;/SPAN>&lt;SPAN lang=EN-GB>&lt;a href=&quot;http://www.eclipse.org/stp/sca/&quot;>&lt;U>&lt;FONT color=#0000ff>http://www.eclipse.org/stp/sca/&lt;/FONT>&lt;/U>&lt;/a>&lt;/SPAN>&lt;SPAN style=&quot;mso-ansi-language: EN-US&quot; lang=EN-US>) editor to define the component types of a DiVA system. This diagram only contains components, with &lt;B style=&quot;mso-bidi-font-weight: normal&quot;>no bindings.&lt;/B> These components mainly specify their required and provided port as well as some pieces of information that make it possible to generate some code targeting the OSGi runtime.&lt;B style=&quot;mso-bidi-font-weight: normal&quot;>&lt;o:p>&lt;/o:p>&lt;/B>&lt;/SPAN>&lt;/FONT>&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 10pt&quot; class=MsoNormal>&lt;FONT size=3>&lt;FONT face=&quot;Times New Roman&quot;>&lt;SPAN lang=EN-GB>All the &lt;/SPAN>&lt;SPAN style=&quot;mso-ansi-language: EN-US&quot; lang=EN-US>component&lt;/SPAN>&lt;SPAN lang=EN-GB> types &lt;/SPAN>&lt;SPAN style=&quot;mso-ansi-language: EN-US&quot; lang=EN-US>should&lt;/SPAN>&lt;SPAN lang=EN-GB> contain the information illustrated in &lt;/SPAN>&lt;SPAN lang=EN-GB>Figure &lt;SPAN style=&quot;mso-no-proof: yes&quot;>59&lt;/SPAN>&lt;/SPAN>&lt;SPAN lang=EN-GB>:&lt;/SPAN>&lt;/FONT>&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-ALIGN: center; MARGIN: 0cm 0cm 10pt&quot; class=MsoNormal align=center>&lt;SPAN lang=EN-GB>&lt;?xml:namespace prefix = v ns = &quot;urn:schemas-microsoft-com:vml&quot; />&lt;v:shapetype id=_x0000_t75 stroked=&quot;f&quot; filled=&quot;f&quot; path=&quot;m@4@5l@4@11@9@11@9@5xe&quot; o:preferrelative=&quot;t&quot; o:spt=&quot;75&quot; coordsize=&quot;21600,21600&quot;>&lt;v:stroke joinstyle=&quot;miter&quot;>&lt;/v:stroke>&lt;v:formulas>&lt;v:f eqn=&quot;if lineDrawn pixelLineWidth 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @0 1 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum 0 0 @1&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @2 1 2&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @3 21600 pixelWidth&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @3 21600 pixelHeight&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @0 0 1&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @6 1 2&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @7 21600 pixelWidth&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @8 21600 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @7 21600 pixelHeight&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @10 21600 0&quot;>&lt;/v:f>&lt;/v:formulas>&lt;v:path o:connecttype=&quot;rect&quot; gradientshapeok=&quot;t&quot; o:extrusionok=&quot;f&quot;>&lt;/v:path>&lt;o:lock aspectratio=&quot;t&quot; v:ext=&quot;edit&quot;>&lt;/o:lock>&lt;/v:shapetype>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 6pt 0cm&quot; class=MsoCaption>&lt;a name=&quot;_Toc280607121&quot;>&lt;/a>&lt;IMG alt=&quot;&quot; src=&quot;./resources/clip_image002.jpg&quot; width=491 height=306>&lt;a name=&quot;_Toc266175826&quot;>&lt;/a>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 6pt 0cm&quot; class=MsoCaption>&lt;a name=&quot;_Ref265062854&quot;>&lt;SPAN style=&quot;mso-bookmark: _Toc266175826&quot;>&lt;SPAN style=&quot;mso-bookmark: _Toc280607121&quot;>&lt;SPAN lang=EN-GB>&lt;STRONG>&lt;FONT face=Times>Figure &lt;/FONT>&lt;/STRONG>&lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;/a>&lt;FONT face=Times>&lt;STRONG>&lt;SPAN style=&quot;mso-bookmark: _Ref265062854&quot;>&lt;SPAN style=&quot;mso-bookmark: _Toc266175826&quot;>&lt;SPAN style=&quot;mso-bookmark: _Toc280607121&quot;>&lt;SPAN lang=EN-GB>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>59&lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;SPAN style=&quot;mso-bookmark: _Ref265062854&quot;>&lt;SPAN style=&quot;mso-bookmark: _Toc266175826&quot;>&lt;SPAN style=&quot;mso-bookmark: _Toc280607121&quot;>&lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;SPAN style=&quot;mso-bookmark: _Toc266175826&quot;>&lt;SPAN style=&quot;mso-bookmark: _Toc280607121&quot;>&lt;SPAN lang=EN-GB>: &lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;/STRONG>&lt;SPAN style=&quot;mso-bookmark: _Toc266175826&quot;>&lt;SPAN style=&quot;mso-bookmark: _Toc280607121&quot;>&lt;SPAN style=&quot;FONT-WEIGHT: normal&quot; lang=EN-GB>Component types designed with SCA.&lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;SPAN style=&quot;FONT-WEIGHT: normal&quot; lang=EN-GB>&lt;o:p>&lt;/o:p>&lt;/SPAN>&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=MsoNormal>&lt;SPAN lang=EN-GB>&lt;FONT size=3 face=&quot;Times New Roman&quot;>Each &amp;lt;&lt;I style=&quot;mso-bidi-font-style: normal&quot;>component&lt;/I>&amp;gt; must fill the following fields:&lt;/FONT>&lt;/SPAN>&lt;/P>&#xD;
&lt;UL type=disc>&#xD;
&lt;LI style=&quot;TEXT-ALIGN: left; MARGIN: 0cm 0cm 10pt; mso-list: l7 level1 lfo2; tab-stops: list 36.0pt; mso-margin-top-alt: auto; mso-margin-bottom-alt: auto&quot; class=MsoNormal>&lt;FONT size=3>&lt;FONT face=&quot;Times New Roman&quot;>&lt;B style=&quot;mso-bidi-font-weight: normal&quot;>&lt;SPAN lang=EN-GB>Name&lt;/SPAN>&lt;/B>&lt;SPAN lang=EN-GB>: the name of the component type&lt;/SPAN>&lt;/FONT>&lt;/FONT> &#xD;
&lt;LI style=&quot;TEXT-ALIGN: left; MARGIN: 0cm 0cm 10pt; mso-list: l7 level1 lfo2; tab-stops: list 36.0pt; mso-margin-top-alt: auto; mso-margin-bottom-alt: auto&quot; class=MsoNormal>&lt;FONT size=3>&lt;FONT face=&quot;Times New Roman&quot;>&lt;B style=&quot;mso-bidi-font-weight: normal&quot;>&lt;SPAN lang=EN-GB>Constraining type&lt;/SPAN>&lt;/B>&lt;SPAN lang=EN-GB>: the name of the OSGi factory to be generated&lt;/SPAN>&lt;/FONT>&lt;/FONT>&lt;/LI>&lt;/UL>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=MsoNormal>&lt;SPAN lang=EN-GB>&lt;FONT size=3 face=&quot;Times New Roman&quot;>Each &amp;lt;&lt;I style=&quot;mso-bidi-font-style: normal&quot;>implementationJava&lt;/I>&amp;gt; must declare: &lt;/FONT>&lt;/SPAN>&lt;/P>&#xD;
&lt;UL type=disc>&#xD;
&lt;LI style=&quot;TEXT-ALIGN: left; MARGIN: 0cm 0cm 10pt; mso-list: l1 level1 lfo3; tab-stops: list 36.0pt; mso-margin-top-alt: auto; mso-margin-bottom-alt: auto&quot; class=MsoNormal>&lt;FONT size=3>&lt;FONT face=&quot;Times New Roman&quot;>&lt;B style=&quot;mso-bidi-font-weight: normal&quot;>&lt;SPAN lang=EN-GB>Class&lt;/SPAN>&lt;/B>&lt;SPAN lang=EN-GB>: the full qualified name of a default implementation class to be generated&lt;/SPAN>&lt;/FONT>&lt;/FONT>&lt;/LI>&lt;/UL>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=MsoNormal>&lt;SPAN lang=EN-GB>&lt;FONT size=3 face=&quot;Times New Roman&quot;>Each &amp;lt;s&lt;I style=&quot;mso-bidi-font-style: normal&quot;>ervice&lt;/I>&amp;gt; (provided port) should simply declare a &lt;B style=&quot;mso-bidi-font-weight: normal&quot;>name&lt;/B>.&lt;BR>Each &amp;lt;&lt;I style=&quot;mso-bidi-font-style: normal&quot;>reference&lt;/I>&amp;gt; (required port) should also declare a &lt;B style=&quot;mso-bidi-font-weight: normal&quot;>name&lt;/B>, and: &lt;/FONT>&lt;/SPAN>&lt;/P>&#xD;
&lt;UL type=disc>&#xD;
&lt;LI style=&quot;TEXT-ALIGN: left; MARGIN: 0cm 0cm 10pt; mso-list: l3 level1 lfo4; tab-stops: list 36.0pt; mso-margin-top-alt: auto; mso-margin-bottom-alt: auto&quot; class=MsoNormal>&lt;FONT size=3>&lt;FONT face=&quot;Times New Roman&quot;>&lt;B style=&quot;mso-bidi-font-weight: normal&quot;>&lt;SPAN lang=EN-GB>Multiplicy&lt;/SPAN>&lt;/B>&lt;SPAN lang=EN-GB>: it allows specifying the number of servers this required port can be connected to.&lt;/SPAN>&lt;/FONT>&lt;/FONT>&lt;/LI>&lt;/UL>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=MsoNormal>&lt;SPAN lang=EN-GB>&lt;FONT size=3 face=&quot;Times New Roman&quot;>Each &amp;lt;&lt;I style=&quot;mso-bidi-font-style: normal&quot;>interfaceJava&lt;/I>&amp;gt; (associated to provided and required ports) should declare: &lt;/FONT>&lt;/SPAN>&lt;/P>&#xD;
&lt;UL type=disc>&#xD;
&lt;LI style=&quot;TEXT-ALIGN: left; MARGIN: 0cm 0cm 10pt; mso-list: l9 level1 lfo5; tab-stops: list 36.0pt; mso-margin-top-alt: auto; mso-margin-bottom-alt: auto&quot; class=MsoNormal>&lt;FONT size=3>&lt;FONT face=&quot;Times New Roman&quot;>&lt;B style=&quot;mso-bidi-font-weight: normal&quot;>&lt;SPAN lang=EN-GB>Interface&lt;/SPAN>&lt;/B>&lt;SPAN lang=EN-GB>: the full qualified name of the Java interface associated with the port.&lt;/SPAN>&lt;/FONT>&lt;/FONT>&lt;/LI>&lt;/UL>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 10pt&quot; class=MsoNormal>&lt;B style=&quot;mso-bidi-font-weight: normal&quot;>&lt;SPAN lang=EN-GB>&lt;o:p>&lt;FONT size=3 face=&quot;Times New Roman&quot;>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/SPAN>&lt;/B>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 10pt&quot; class=MsoNormal>&lt;B style=&quot;mso-bidi-font-weight: normal&quot;>&lt;SPAN lang=EN-GB>&lt;FONT size=3>&lt;FONT face=&quot;Times New Roman&quot;>CRM example application&lt;o:p>&lt;/o:p>&lt;/FONT>&lt;/FONT>&lt;/SPAN>&lt;/B>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 10pt&quot; class=MsoNormal>&lt;FONT size=3>&lt;FONT face=&quot;Times New Roman&quot;>&lt;SPAN lang=EN-GB>Figure &lt;SPAN style=&quot;mso-no-proof: yes&quot;>60&lt;/SPAN>&lt;/SPAN>&lt;SPAN lang=EN-GB> illustrates a snippet of the diagram describing the component types of the CAS system. The &lt;I style=&quot;mso-bidi-font-style: normal&quot;>Notebook Type&lt;/I> and the &lt;I style=&quot;mso-bidi-font-style: normal&quot;>Mobile Phone Type&lt;/I> respectively offer one service. The &lt;I style=&quot;mso-bidi-font-style: normal&quot;>GUI Type&lt;/I> requires these two services.&lt;/SPAN>&lt;/FONT>&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 10pt&quot; class=MsoNormal>&lt;FONT size=3>&lt;FONT face=&quot;Times New Roman&quot;>&lt;SPAN lang=EN-GB>&lt;IMG style=&quot;WIDTH: 461px; HEIGHT: 380px&quot; alt=&quot;&quot; src=&quot;./resources/clip_image004.gif&quot; width=431 height=348>&lt;/SPAN>&lt;/FONT>&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;PAGE-BREAK-AFTER: avoid; TEXT-ALIGN: center; MARGIN: 0cm 0cm 10pt&quot; class=MsoNormal align=center>&lt;SPAN lang=EN-GB>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 6pt 0cm&quot; class=MsoCaption>&lt;a name=&quot;_Toc280607122&quot;>&lt;/a>&lt;a name=&quot;_Toc266175827&quot;>&lt;/a>&lt;a name=&quot;_Ref265062891&quot;>&lt;SPAN style=&quot;mso-bookmark: _Toc266175827&quot;>&lt;SPAN style=&quot;mso-bookmark: _Toc280607122&quot;>&lt;SPAN lang=EN-GB>&lt;STRONG>&lt;FONT face=Times>Figure &lt;/FONT>&lt;/STRONG>&lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;/a>&lt;FONT face=Times>&lt;STRONG>&lt;SPAN style=&quot;mso-bookmark: _Ref265062891&quot;>&lt;SPAN style=&quot;mso-bookmark: _Toc266175827&quot;>&lt;SPAN style=&quot;mso-bookmark: _Toc280607122&quot;>&lt;SPAN lang=EN-GB>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>60&lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;SPAN style=&quot;mso-bookmark: _Ref265062891&quot;>&lt;SPAN style=&quot;mso-bookmark: _Toc266175827&quot;>&lt;SPAN style=&quot;mso-bookmark: _Toc280607122&quot;>&lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;SPAN style=&quot;mso-bookmark: _Toc266175827&quot;>&lt;SPAN style=&quot;mso-bookmark: _Toc280607122&quot;>&lt;SPAN lang=EN-GB>: &lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;/STRONG>&lt;SPAN style=&quot;mso-bookmark: _Toc266175827&quot;>&lt;SPAN style=&quot;mso-bookmark: _Toc280607122&quot;>&lt;SPAN style=&quot;FONT-WEIGHT: normal&quot; lang=EN-GB>Component types of the (simplified) CRM system.&lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;SPAN style=&quot;FONT-WEIGHT: normal&quot; lang=EN-GB>&lt;o:p>&lt;/o:p>&lt;/SPAN>&lt;/FONT>&lt;/P>&#xD;
&lt;H4 style=&quot;MARGIN: 0cm 0cm 10pt&quot;>&lt;SPAN lang=EN-GB>&lt;SPAN lang=EN-GB>&lt;/SPAN>&lt;/SPAN>&amp;nbsp;&lt;/H4>&#xD;
&lt;H4 style=&quot;MARGIN: 0cm 0cm 10pt&quot;>&lt;SPAN lang=EN-GB>&lt;SPAN lang=EN-GB>7.1.2 Generating OSGi factories&lt;/SPAN>&lt;/SPAN>&lt;/H4>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 10pt&quot; class=MsoNormal>&lt;SPAN lang=EN-GB>&lt;STRONG>&lt;FONT face=&quot;Times New Roman&quot;>&lt;FONT size=3>Description&lt;o:p>&lt;/o:p>&lt;/FONT>&lt;/FONT>&lt;/STRONG>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 10pt&quot; class=MsoNormal>&lt;SPAN lang=EN-GB>&lt;FONT size=3 face=&quot;Times New Roman&quot;>This task details how to generate code skeleton from the component types, for the OSGi runtime. In DiVA, we are particularly interested in OSGi since both the case study providers use an OSGi runtime:&lt;/FONT>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-INDENT: -18pt; MARGIN: 0cm 0cm 10pt 54pt; mso-list: l6 level1 lfo8&quot; class=MsoNormal>&lt;SPAN style=&quot;FONT-FAMILY: Symbol; mso-bidi-font-family: Symbol; mso-bidi-font-size: 11.0pt; mso-fareast-font-family: Symbol&quot; lang=EN-GB>&lt;SPAN style=&quot;mso-list: Ignore&quot;>&lt;FONT size=3>·&lt;/FONT>&lt;SPAN style=&quot;FONT: 7pt 'Times New Roman'&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;FONT face=&quot;Times New Roman&quot;>&lt;FONT size=3>&lt;SPAN style=&quot;mso-bidi-font-size: 11.0pt&quot; lang=EN-GB>Equinox for CAS, &lt;/SPAN>&lt;SPAN style=&quot;mso-bidi-font-size: 11.0pt; mso-ansi-language: EN-US; mso-fareast-language: FR&quot; lang=EN-US>the OSGi runtime developed by Eclipse (see http://www.eclipse.org/equinox/).&lt;/SPAN>&lt;SPAN style=&quot;mso-bidi-font-size: 11.0pt&quot; lang=EN-GB>&lt;o:p>&lt;/o:p>&lt;/SPAN>&lt;/FONT>&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;TEXT-INDENT: -18pt; MARGIN: 0cm 0cm 10pt 54pt; mso-list: l6 level1 lfo8&quot; class=MsoNormal>&lt;SPAN style=&quot;FONT-FAMILY: Symbol; mso-bidi-font-family: Symbol; mso-fareast-font-family: Symbol&quot; lang=EN-GB>&lt;SPAN style=&quot;mso-list: Ignore&quot;>&lt;FONT size=3>·&lt;/FONT>&lt;SPAN style=&quot;FONT: 7pt 'Times New Roman'&quot;>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;FONT size=3>&lt;FONT face=&quot;Times New Roman&quot;>&lt;SPAN lang=EN-GB>ServiceMix (see &lt;/SPAN>&lt;SPAN style=&quot;mso-ansi-language: EN-US&quot; lang=EN-US>http://servicemix.apache.org&lt;/SPAN>&lt;SPAN lang=EN-GB>) for Thales, an open-source ESB (Enterprise Service Bus) by the Apache foundation, based on the Felix/Karaf OSGi runtime (see &lt;/SPAN>&lt;SPAN style=&quot;mso-ansi-language: EN-US&quot; lang=EN-US>&lt;a href=&quot;http://felix.apache.org/site/apache-felix-karaf.html&quot;>&lt;U>&lt;FONT color=#0000ff>http://felix.apache.org/site/apache-felix-karaf.html&lt;/FONT>&lt;/U>&lt;/a>).&lt;/SPAN>&lt;/FONT>&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 10pt&quot; class=MsoNormal>&lt;SPAN lang=EN-GB>&lt;FONT size=3 face=&quot;Times New Roman&quot;>The basic idea of this task is to generate OSGi factories that are able to instantiate DiVA components (components that can be dynamically managed by DiVA).&lt;/FONT>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 10pt&quot; class=MsoNormal>&lt;SPAN lang=EN-GB>&lt;o:p>&lt;FONT size=3 face=&quot;Times New Roman&quot;>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 10pt&quot; class=MsoNormal>&lt;B style=&quot;mso-bidi-font-weight: normal&quot;>&lt;SPAN lang=EN-GB>&lt;FONT size=3>&lt;FONT face=&quot;Times New Roman&quot;>How-to&lt;o:p>&lt;/o:p>&lt;/FONT>&lt;/FONT>&lt;/SPAN>&lt;/B>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 10pt&quot; class=MsoNormal>&lt;FONT size=3>&lt;FONT face=&quot;Times New Roman&quot;>&lt;SPAN lang=EN-GB>We have extended the SCA editor with code generation facilities and constraints checking. Using the SCA editor (see &lt;/SPAN>&lt;SPAN lang=EN-GB>Figure &lt;SPAN style=&quot;mso-no-proof: yes&quot;>61&lt;/SPAN>&lt;/SPAN>&lt;SPAN lang=EN-GB>), it is possible to generate all the OSGi factories corresponding to the component types defined in the diagram. It is also possible to generate the factory of one particular component type. Before actually generating the code of the OSGi factories, we check that all the information is available so that the code generator can actually produce the code. In the case the model is not valid, a clear report is displayed to the user, who has to make some corrections.&lt;/SPAN>&lt;/FONT>&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;PAGE-BREAK-AFTER: avoid; TEXT-ALIGN: center; MARGIN: 0cm 0cm 10pt&quot; class=MsoNormal align=center>&lt;SPAN lang=EN-GB>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 6pt 0cm&quot; class=MsoCaption>&lt;a name=&quot;_Toc280607123&quot;>&lt;/a>&lt;IMG style=&quot;WIDTH: 439px; HEIGHT: 400px&quot; alt=&quot;&quot; src=&quot;./resources/clip_image006.jpg&quot; width=415 height=386>&lt;a name=&quot;_Toc266175828&quot;>&lt;/a>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 6pt 0cm&quot; class=MsoCaption>&lt;a name=&quot;_Ref265062976&quot;>&lt;SPAN style=&quot;mso-bookmark: _Toc266175828&quot;>&lt;SPAN style=&quot;mso-bookmark: _Toc280607123&quot;>&lt;SPAN lang=EN-GB>&lt;STRONG>&lt;FONT face=Times>Figure &lt;/FONT>&lt;/STRONG>&lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;/a>&lt;FONT face=Times>&lt;STRONG>&lt;SPAN style=&quot;mso-bookmark: _Ref265062976&quot;>&lt;SPAN style=&quot;mso-bookmark: _Toc266175828&quot;>&lt;SPAN style=&quot;mso-bookmark: _Toc280607123&quot;>&lt;SPAN lang=EN-GB>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>61&lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;SPAN style=&quot;mso-bookmark: _Ref265062976&quot;>&lt;SPAN style=&quot;mso-bookmark: _Toc266175828&quot;>&lt;SPAN style=&quot;mso-bookmark: _Toc280607123&quot;>&lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;SPAN style=&quot;mso-bookmark: _Toc266175828&quot;>&lt;SPAN style=&quot;mso-bookmark: _Toc280607123&quot;>&lt;SPAN lang=EN-GB>: &lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;/STRONG>&lt;SPAN style=&quot;mso-bookmark: _Toc266175828&quot;>&lt;SPAN style=&quot;mso-bookmark: _Toc280607123&quot;>&lt;SPAN style=&quot;FONT-WEIGHT: normal&quot; lang=EN-GB>Generating OSGi factories.&lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 10pt&quot; class=MsoNormal>&lt;SPAN lang=EN-GB>&lt;FONT size=3 face=&quot;Times New Roman&quot;>The code generation produces one Java project (OSGi bundle) per component type. Each project has the following structure: &lt;/FONT>&lt;/SPAN>&lt;/P>&#xD;
&lt;UL type=disc>&#xD;
&lt;LI style=&quot;TEXT-ALIGN: left; MARGIN: 0cm 0cm 10pt; mso-list: l5 level1 lfo6; tab-stops: list 36.0pt; mso-margin-top-alt: auto; mso-margin-bottom-alt: auto&quot; class=MsoNormal>&lt;FONT size=3>&lt;FONT face=&quot;Times New Roman&quot;>&lt;B style=&quot;mso-bidi-font-weight: normal&quot;>&lt;SPAN lang=EN-GB>src/factory&lt;/SPAN>&lt;/B>&lt;SPAN lang=EN-GB>: contains an &lt;I style=&quot;mso-bidi-font-style: normal&quot;>Activator&lt;/I> (not to be modified) and a &lt;I style=&quot;mso-bidi-font-style: normal&quot;>Factory&lt;/I>, responsible for instantiating multiple component instances. This factory can be extended in the case where several implementations exist for a given component type.&lt;/SPAN>&lt;/FONT>&lt;/FONT> &#xD;
&lt;LI style=&quot;TEXT-ALIGN: left; MARGIN: 0cm 0cm 10pt; mso-list: l5 level1 lfo6; tab-stops: list 36.0pt; mso-margin-top-alt: auto; mso-margin-bottom-alt: auto&quot; class=MsoNormal>&lt;FONT size=3>&lt;FONT face=&quot;Times New Roman&quot;>&lt;B style=&quot;mso-bidi-font-weight: normal&quot;>&lt;SPAN lang=EN-GB>a default implementation class&lt;/SPAN>&lt;/B>&lt;SPAN lang=EN-GB> is also generated in a package, which depends on the information provided in the model (e.g., cas.impl). This class must be extended by implementing the business logic. The only constraint is that the name of the generated references and associated setters should not be modified. It is important to note that this class is the main implementation class of the component. However, this main class can use other classes in order to realize its implementation logic. It can for example delegate the realization of some of its provided services to other classes.&lt;/SPAN>&lt;/FONT>&lt;/FONT>&lt;/LI>&lt;/UL>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 0pt&quot; class=MsoNormal>&lt;SPAN lang=EN-GB>&lt;FONT size=3 face=&quot;Times New Roman&quot;>For each provided port, we simply implement the corresponding Java interface. For each required port, we generate the corresponding references and associated setters, which should not be modified: &lt;/FONT>&lt;/SPAN>&lt;/P>&#xD;
&lt;UL type=disc>&#xD;
&lt;LI style=&quot;TEXT-ALIGN: left; MARGIN: 0cm 0cm 10pt; mso-list: l8 level1 lfo7; tab-stops: list 36.0pt; mso-margin-top-alt: auto; mso-margin-bottom-alt: auto&quot; class=MsoNormal>&lt;FONT size=3>&lt;FONT face=&quot;Times New Roman&quot;>&lt;B style=&quot;mso-bidi-font-weight: normal&quot;>&lt;SPAN lang=EN-GB>Single port&lt;/SPAN>&lt;/B>&lt;SPAN lang=EN-GB> (upper bound = 1): we generate a simple reference and a setter, using classic name convention. &lt;/SPAN>&lt;/FONT>&lt;/FONT>&#xD;
&lt;LI style=&quot;TEXT-ALIGN: left; MARGIN: 0cm 0cm 10pt; mso-list: l8 level1 lfo7; tab-stops: list 36.0pt; mso-margin-top-alt: auto; mso-margin-bottom-alt: auto&quot; class=MsoNormal>&lt;FONT size=3>&lt;FONT face=&quot;Times New Roman&quot;>&lt;B style=&quot;mso-bidi-font-weight: normal&quot;>&lt;SPAN lang=EN-GB>Collection port&lt;/SPAN>&lt;/B>&lt;SPAN lang=EN-GB> (upper bound = *): we generate a hash map (indexed collection) as well as a setter and an unsetter to add and remove elements in this collection.&lt;/SPAN>&lt;/FONT>&lt;/FONT>&lt;/LI>&lt;/UL>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 10pt&quot; class=MsoNormal>&lt;B style=&quot;mso-bidi-font-weight: normal&quot;>&lt;SPAN lang=EN-GB>&lt;o:p>&lt;FONT size=3 face=&quot;Times New Roman&quot;>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/SPAN>&lt;/B>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 10pt&quot; class=MsoNormal>&lt;B style=&quot;mso-bidi-font-weight: normal&quot;>&lt;SPAN lang=EN-GB>&lt;FONT size=3>&lt;FONT face=&quot;Times New Roman&quot;>CRM example application&lt;o:p>&lt;/o:p>&lt;/FONT>&lt;/FONT>&lt;/SPAN>&lt;/B>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 10pt&quot; class=MsoNormal>&lt;FONT size=3>&lt;FONT face=&quot;Times New Roman&quot;>&lt;SPAN lang=EN-GB>Figure &lt;SPAN style=&quot;mso-no-proof: yes&quot;>62&lt;/SPAN>&lt;/SPAN>&lt;SPAN lang=EN-GB> illustrates the code generated from the previously presented SCA diagram. In particular, it illustrates the main class of the GUI component. This component simply implements the &lt;I style=&quot;mso-bidi-font-style: normal&quot;>DiVAComponentOSGi&lt;/I> interface, so that it can be managed by DiVA. It offers no service. However, if it would have offered some services, this class would implement all the corresponding interfaces. This component requires the &lt;I style=&quot;mso-bidi-font-style: normal&quot;>mobile phone&lt;/I> and the &lt;I style=&quot;mso-bidi-font-style: normal&quot;>notebook&lt;/I> services. We thus generate the corresponding references and setters.&lt;/SPAN>&lt;/FONT>&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;PAGE-BREAK-AFTER: avoid; TEXT-ALIGN: center; MARGIN: 0cm 0cm 10pt&quot; class=MsoNormal align=center>&lt;SPAN lang=EN-GB>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 6pt 0cm&quot; class=MsoCaption>&lt;a name=&quot;_Toc280607124&quot;>&lt;/a>&lt;IMG alt=&quot;&quot; src=&quot;resources/figure62_runtime.bmp&quot; width=600 height=600>&lt;a name=&quot;_Toc266175829&quot;>&lt;/a>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 6pt 0cm&quot; class=MsoCaption>&lt;a name=&quot;_Ref265063033&quot;>&lt;SPAN style=&quot;mso-bookmark: _Toc266175829&quot;>&lt;SPAN style=&quot;mso-bookmark: _Toc280607124&quot;>&lt;SPAN lang=EN-GB>&lt;STRONG>&lt;FONT face=Times>Figure &lt;/FONT>&lt;/STRONG>&lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;/a>&lt;FONT face=Times>&lt;STRONG>&lt;SPAN style=&quot;mso-bookmark: _Ref265063033&quot;>&lt;SPAN style=&quot;mso-bookmark: _Toc266175829&quot;>&lt;SPAN style=&quot;mso-bookmark: _Toc280607124&quot;>&lt;SPAN lang=EN-GB>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>62&lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;SPAN style=&quot;mso-bookmark: _Ref265063033&quot;>&lt;SPAN style=&quot;mso-bookmark: _Toc266175829&quot;>&lt;SPAN style=&quot;mso-bookmark: _Toc280607124&quot;>&lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;SPAN style=&quot;mso-bookmark: _Toc266175829&quot;>&lt;SPAN style=&quot;mso-bookmark: _Toc280607124&quot;>&lt;SPAN lang=EN-GB>:&lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;/STRONG>&lt;SPAN style=&quot;mso-bookmark: _Toc266175829&quot;>&lt;SPAN style=&quot;mso-bookmark: _Toc280607124&quot;>&lt;SPAN style=&quot;FONT-WEIGHT: normal&quot; lang=EN-GB> Generated code of an OSGi factory.&lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;SPAN style=&quot;FONT-WEIGHT: normal&quot; lang=EN-GB>&lt;o:p>&lt;/o:p>&lt;/SPAN>&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 10pt&quot; class=MsoNormal>&lt;SPAN lang=EN-GB>&lt;o:p>&lt;FONT size=3 face=&quot;Times New Roman&quot;>&lt;/FONT>&lt;/o:p>&lt;/SPAN>&amp;nbsp;&lt;/P>&#xD;
&lt;H4 style=&quot;MARGIN: 0cm 0cm 10pt&quot;>&lt;SPAN lang=EN-GB>&lt;o:p>7.1.3&amp;nbsp;&lt;SPAN lang=EN-GB>Component instances: OSGi bundle or In-Memory objects&lt;/SPAN>&lt;/o:p>&lt;/SPAN>&lt;/H4>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 10pt&quot; class=MsoNormal>&lt;SPAN lang=EN-GB>&lt;FONT size=3 face=&quot;Times New Roman&quot;>DiVA@Runtime proposes two ways for representing component instances at runtime:&lt;/FONT>&lt;/SPAN>&lt;/P>&#xD;
&lt;UL style=&quot;MARGIN-TOP: 0cm&quot; type=disc>&#xD;
&lt;LI style=&quot;MARGIN: 0cm 0cm 10pt; mso-list: l2 level1 lfo9&quot; class=MsoNormal>&lt;SPAN lang=EN-GB>&lt;FONT size=3 face=&quot;Times New Roman&quot;>OSGi bundles&lt;/FONT>&lt;/SPAN> &#xD;
&lt;LI style=&quot;MARGIN: 0cm 0cm 10pt; mso-list: l2 level1 lfo9&quot; class=MsoNormal>&lt;SPAN lang=EN-GB>&lt;FONT size=3 face=&quot;Times New Roman&quot;>In-memory objects&lt;/FONT>&lt;/SPAN>&lt;/LI>&lt;/UL>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 10pt&quot; class=MsoNormal>&lt;SPAN lang=EN-GB>&lt;FONT size=3 face=&quot;Times New Roman&quot;>The factories (component types) are able to produce instances of both forms. Indeed, to create a component instance as an OSGi bundle, we first use the factory to create an in-memory object, which is then encapsulated as an OSGi bundle.&lt;/FONT>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 10pt&quot; class=MsoNormal>&lt;SPAN lang=EN-GB>&lt;FONT size=3 face=&quot;Times New Roman&quot;>Encapsulating a component instance as an OSGi bundle makes this component more “visible” from the outside: it appears in the OSGi console, it can more easily be exposed to external services, etc. However, generating this bundle has a cost: code generation (MANIFEST and Activator), compilation and packaging of the bundle should be performed at runtime. It is thus recommended to use in-memory objects for session components, which lead to multiple instances of the same component types.&lt;/FONT>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 10pt&quot; class=MsoNormal>&lt;SPAN lang=EN-GB>&lt;FONT size=3 face=&quot;Times New Roman&quot;>It is important to note that:&lt;/FONT>&lt;/SPAN>&lt;/P>&#xD;
&lt;UL style=&quot;MARGIN-TOP: 0cm&quot; type=disc>&#xD;
&lt;LI style=&quot;MARGIN: 0cm 0cm 10pt; mso-list: l4 level1 lfo10&quot; class=MsoNormal>&lt;SPAN lang=EN-GB>&lt;FONT size=3 face=&quot;Times New Roman&quot;>Component instances of different natures (OSGi bundles and in-memory) can collaborate in the same DiVA system,&lt;/FONT>&lt;/SPAN>&lt;/LI>&lt;/UL>&lt;SPAN style=&quot;FONT-FAMILY: 'Times New Roman','serif'; FONT-SIZE: 11pt; mso-bidi-font-size: 12.0pt; mso-fareast-font-family: 'Times New Roman'; mso-ansi-language: EN-GB; mso-fareast-language: EN-US; mso-bidi-language: AR-SA&quot; lang=EN-GB>But, it is not possible to switch an OSGi-bundle into an in-memory object at runtime. In other word, the nature of a component-type should be determined at design-time: either this component type (factory) will create instances in the form of OSGi bundle or in the form of in-memory objects.&lt;/SPAN></mainDescription>
</org.eclipse.epf.uma:TaskDescription>
