<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:TaskDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmi:id="-rBnZbZ71wmElqGnFGjTqLw" name="define_base_model,_CsRS0PJTEd-FpZGj9I_2_g" guid="-rBnZbZ71wmElqGnFGjTqLw" changeDate="2010-12-21T10:37:39.641+0100">
  <mainDescription>&lt;H3 style=&quot;MARGIN: 0cm 0cm 10pt&quot; class=MsoNormal>&lt;SPAN lang=EN-GB>&lt;FONT size=2>&amp;nbsp;&lt;/FONT>6.1 Definition of the base model&lt;/SPAN>&lt;/H3>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 10pt&quot; class=MsoNormal>&lt;B style=&quot;mso-bidi-font-weight: normal&quot;>&lt;SPAN lang=EN-GB>&lt;FONT size=3>&lt;FONT face=&quot;Times New Roman&quot;>Description&lt;?xml:namespace prefix = o ns = &quot;urn:schemas-microsoft-com:office:office&quot; />&lt;o:p>&lt;/o:p>&lt;/FONT>&lt;/FONT>&lt;/SPAN>&lt;/B>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 10pt&quot; class=MsoNormal>&lt;SPAN lang=EN-GB>&lt;FONT size=3 face=&quot;Times New Roman&quot;>In the DiVA approach the base model is an architecture model defined using the Architecture at Run-Time (ART) meta-model (see D3.2 and D3.3). The intent of the base model is to provide the framework in which the variants of the application will be woven at run-time. This base model should only include elements which are directly relevant to runtime adaptation. The parts of the architecture of the system which are fixed should not be detailed but encapsulated in a set of coarse grained logical components. This is to prevent manipulating at runtime model numerous model elements with no relevance to adaptation.&lt;/FONT>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 10pt&quot; class=MsoNormal>&lt;FONT size=3>&lt;FONT face=&quot;Times New Roman&quot;>&lt;SPAN lang=EN-GB>If architecture models have been developed as part of the design of the system they are a good input to the creation of the base model but in most cases they should not be reused directly since the ART base model serves a slightly different purpose. Some parts of the design architecture models will be included in the base models, others will have to be abstracted and some will be included in some aspects. The purpose of the ART metamodel is to represent dynamic architectures, i.e., the architecture of a running system. It mainly considers components (as black boxes), bindings (connections between components)&lt;/SPAN>&lt;SPAN style=&quot;mso-ansi-language: EN-US&quot; lang=EN-US> and attributes of components.&lt;o:p>&lt;/o:p>&lt;/SPAN>&lt;/FONT>&lt;/FONT>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 10pt&quot; class=MsoNormal>&lt;B style=&quot;mso-bidi-font-weight: normal&quot;>&lt;SPAN style=&quot;mso-ansi-language: EN-US&quot; lang=EN-US>&lt;o:p>&lt;FONT size=3 face=&quot;Times New Roman&quot;>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/SPAN>&lt;/B>&lt;/P>&#xD;
&lt;P style=&quot;PAGE-BREAK-AFTER: avoid; MARGIN: 0cm 0cm 10pt&quot; class=MsoNormal>&lt;B style=&quot;mso-bidi-font-weight: normal&quot;>&lt;SPAN lang=EN-GB>&lt;FONT size=3>&lt;FONT face=&quot;Times New Roman&quot;>How-to&lt;o:p>&lt;/o:p>&lt;/FONT>&lt;/FONT>&lt;/SPAN>&lt;/B>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 10pt&quot; class=MsoNormal>&lt;SPAN lang=EN-GB>&lt;FONT size=3 face=&quot;Times New Roman&quot;>DiVA Studio provides an implementation of the ART meta-model and two editors for it. The first editor is a tree editor which allows browsing the ART models. The second is a text editor which provides a more user friendly environment to edit and view architecture models. A bi-directional transformation is provided between these 2 formalisms. Details about the ART meta-model are provided in D3.2 and D3.3. ART unifies the concepts found in famous languages for modelling architectures (UML components, SCA) and in platforms (OSGi, Fractal, OpenCOM).&lt;/FONT>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 10pt&quot; class=MsoNormal>&lt;SPAN lang=EN-GB>&lt;FONT size=3 face=&quot;Times New Roman&quot;>The first step consists in defining the services manipulated by the system. In the OSGi implementation of the runtime adaptation framework, these services should be named according to the qualified name of existing Java interfaces. Then, it is possible to define component types. Each component type is a factory to instantiate component instances. It basically describes the services it requires and it offers. Finally, it is possible to describe an assembly of component instances (links with bindings). This architectural model constitutes the base model i.e., it contains the component instances that must be present in all configurations of the system.&lt;/FONT>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 10pt&quot; class=MsoNormal>&lt;SPAN lang=EN-GB>&lt;o:p>&lt;FONT size=3 face=&quot;Times New Roman&quot;>&amp;nbsp;&lt;/FONT>&lt;/o:p>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 10pt&quot; class=MsoNormal>&lt;B style=&quot;mso-bidi-font-weight: normal&quot;>&lt;SPAN style=&quot;mso-ansi-language: EN-US&quot; lang=EN-US>&lt;FONT size=3>&lt;FONT face=&quot;Times New Roman&quot;>CRM example application&lt;o:p>&lt;/o:p>&lt;/FONT>&lt;/FONT>&lt;/SPAN>&lt;/B>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 10pt&quot; class=MsoNormal>&lt;SPAN style=&quot;mso-ansi-language: EN-US&quot; lang=EN-US>&lt;FONT size=3>&lt;FONT face=&quot;Times New Roman&quot;>The following script illustrates the base model of the CAS system. In all configurations of this system, we should find these components:&lt;o:p>&lt;/o:p>&lt;/FONT>&lt;/FONT>&lt;/SPAN>&lt;/P>&#xD;
&lt;UL style=&quot;MARGIN-TOP: 0cm&quot; type=disc>&#xD;
&lt;LI style=&quot;MARGIN: 0cm 0cm 10pt; mso-list: l0 level1 lfo1&quot; class=MsoNormal>&lt;SPAN style=&quot;mso-ansi-language: EN-US&quot; lang=EN-US>&lt;FONT size=3>&lt;FONT face=&quot;Times New Roman&quot;>AddressDB: to save and retrieve the addresses of clients&lt;o:p>&lt;/o:p>&lt;/FONT>&lt;/FONT>&lt;/SPAN> &#xD;
&lt;LI style=&quot;MARGIN: 0cm 0cm 10pt; mso-list: l0 level1 lfo1&quot; class=MsoNormal>&lt;SPAN style=&quot;mso-ansi-language: EN-US&quot; lang=EN-US>&lt;FONT size=3>&lt;FONT face=&quot;Times New Roman&quot;>Calendar: to save and retrieve appointments&lt;o:p>&lt;/o:p>&lt;/FONT>&lt;/FONT>&lt;/SPAN>&lt;/LI>&lt;/UL>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 10pt&quot; class=MsoNormal>&lt;SPAN style=&quot;mso-ansi-language: EN-US&quot; lang=EN-US>&lt;FONT size=3>&lt;FONT face=&quot;Times New Roman&quot;>The base model thus contains these components and related component types and services. The following listing presents the base model using the ART textual syntax (details of the syntax and more information about the editor can be found in D2.2 and D5.2):&lt;/FONT>&lt;/FONT>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 0cm 0cm 10pt&quot; class=MsoNormal>&lt;SPAN style=&quot;mso-ansi-language: EN-US&quot; lang=EN-US>&lt;FONT size=3>&lt;FONT face=&quot;Times New Roman&quot;>&lt;IMG alt=&quot;&quot; src=&quot;resources/figure47_runtime.bmp&quot; width=572 height=521>&lt;o:p>&lt;/o:p>&lt;/FONT>&lt;/FONT>&lt;/SPAN>&lt;/P>&#xD;
&lt;P style=&quot;MARGIN: 6pt 0cm&quot; class=MsoCaption>&lt;SPAN lang=EN-GB>&lt;?xml:namespace prefix = v ns = &quot;urn:schemas-microsoft-com:vml&quot; />&lt;v:shapetype id=_x0000_t75 coordsize=&quot;21600,21600&quot; o:spt=&quot;75&quot; o:preferrelative=&quot;t&quot; path=&quot;m@4@5l@4@11@9@11@9@5xe&quot; filled=&quot;f&quot; stroked=&quot;f&quot;>&lt;v:stroke joinstyle=&quot;miter&quot;>&lt;/v:stroke>&lt;v:formulas>&lt;v:f eqn=&quot;if lineDrawn pixelLineWidth 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @0 1 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum 0 0 @1&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @2 1 2&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @3 21600 pixelWidth&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @3 21600 pixelHeight&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @0 0 1&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @6 1 2&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @7 21600 pixelWidth&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @8 21600 0&quot;>&lt;/v:f>&lt;v:f eqn=&quot;prod @7 21600 pixelHeight&quot;>&lt;/v:f>&lt;v:f eqn=&quot;sum @10 21600 0&quot;>&lt;/v:f>&lt;/v:formulas>&lt;v:path o:extrusionok=&quot;f&quot; gradientshapeok=&quot;t&quot; o:connecttype=&quot;rect&quot;>&lt;/v:path>&lt;o:lock v:ext=&quot;edit&quot; aspectratio=&quot;t&quot;>&lt;/o:lock>&lt;/v:shapetype>&lt;a name=&quot;_Toc280607109&quot;>&lt;/a>&lt;a name=&quot;_Toc266175818&quot;>&lt;SPAN style=&quot;mso-bookmark: _Toc280607109&quot;>&lt;STRONG>&lt;FONT face=Times>Figure &lt;/FONT>&lt;/STRONG>&lt;/SPAN>&lt;/a>&lt;/SPAN>&lt;FONT face=Times>&lt;STRONG>&lt;SPAN style=&quot;mso-bookmark: _Toc266175818&quot;>&lt;SPAN style=&quot;mso-bookmark: _Toc280607109&quot;>&lt;SPAN lang=EN-GB>&lt;SPAN style=&quot;mso-no-proof: yes&quot;>47&lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;SPAN style=&quot;mso-bookmark: _Toc266175818&quot;>&lt;SPAN style=&quot;mso-bookmark: _Toc280607109&quot;>&lt;SPAN lang=EN-GB>:&lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;/STRONG>&lt;SPAN style=&quot;mso-bookmark: _Toc266175818&quot;>&lt;SPAN style=&quot;mso-bookmark: _Toc280607109&quot;>&lt;SPAN style=&quot;FONT-WEIGHT: normal&quot; lang=EN-GB> CRM Base Model in ART textual syntax.&lt;/SPAN>&lt;/SPAN>&lt;/SPAN>&lt;SPAN style=&quot;FONT-WEIGHT: normal&quot; lang=EN-GB>&lt;o:p>&lt;/o:p>&lt;/SPAN>&lt;/FONT>&lt;/P>&lt;SPAN style=&quot;FONT-FAMILY: 'Times New Roman','serif'; FONT-SIZE: 11pt; mso-ansi-language: EN-GB; mso-bidi-font-size: 12.0pt; mso-fareast-font-family: 'Times New Roman'; mso-fareast-language: EN-US; mso-bidi-language: AR-SA&quot; lang=EN-GB>In the listing, the element in yellow correspond to the definition of services, the elements in red correspond to the definition of component types and the elements in green and blue correspond to the instances and links with implementation classes. A very similar syntax is used in the next section for the definition of the pointcuts and advices of the aspect models.&lt;/SPAN></mainDescription>
</org.eclipse.epf.uma:TaskDescription>
